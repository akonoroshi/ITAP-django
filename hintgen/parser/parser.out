Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Unused terminals:

    WS
    RAWSTRING
    INUMBER
    LAMBDA
    STRINGUNCLOSED
    UNICODESTRING

Grammar

Rule 0     S' -> file_input
Rule 1     file_input -> single_stmt ENDMARKER
Rule 2     single_stmt -> single_stmt NEWLINE
Rule 3     single_stmt -> single_stmt stmt
Rule 4     single_stmt -> <empty>
Rule 5     decorator -> AT module NEWLINE
Rule 6     decorator -> AT module LPAREN RPAREN NEWLINE
Rule 7     decorator -> AT module LPAREN arglist RPAREN NEWLINE
Rule 8     decorators -> decorator
Rule 9     decorators -> decorator decorators
Rule 10    decorated -> decorators classdef
Rule 11    decorated -> decorators funcdef
Rule 12    funcdef -> DEF NAME parameters COLON suite
Rule 13    parameters -> LPAREN varargslist RPAREN
Rule 14    varargslist -> <empty>
Rule 15    varargslist -> fpdef EQUAL test fpdeflist COMMA
Rule 16    varargslist -> fpdef EQUAL test fpdeflist
Rule 17    varargslist -> fpdef fpdeflist COMMA
Rule 18    varargslist -> fpdef fpdeflist
Rule 19    fpdeflist -> <empty>
Rule 20    fpdeflist -> fpdeflist COMMA fpdef
Rule 21    fpdeflist -> fpdeflist COMMA fpdef EQUAL test
Rule 22    fpdef -> NAME
Rule 23    fpdef -> LPAREN fplist RPAREN
Rule 24    fplist -> fpdef fplist1 COMMA
Rule 25    fplist -> fpdef fplist1
Rule 26    fplist1 -> <empty>
Rule 27    fplist1 -> fplist1 COMMA fpdef
Rule 28    stmt -> simple_stmt
Rule 29    stmt -> compound_stmt
Rule 30    simple_stmt -> small_stmts NEWLINE
Rule 31    simple_stmt -> small_stmts SEMI NEWLINE
Rule 32    small_stmts -> small_stmts SEMI small_stmt
Rule 33    small_stmts -> small_stmt
Rule 34    small_stmt -> flow_stmt
Rule 35    small_stmt -> aug_stmt
Rule 36    small_stmt -> print_stmt
Rule 37    small_stmt -> pass_stmt
Rule 38    small_stmt -> import_stmt
Rule 39    small_stmt -> global_stmt
Rule 40    small_stmt -> assert_stmt
Rule 41    small_stmt -> del_stmt
Rule 42    small_stmt -> exec_stmt
Rule 43    aug_stmt -> testlist augassign testlist
Rule 44    aug_stmt -> assn_stmt
Rule 45    assn_stmt -> testlist
Rule 46    assn_stmt -> testlist EQUAL assn_stmt
Rule 47    augassign -> PLUSEQUAL
Rule 48    augassign -> MINEQUAL
Rule 49    augassign -> STAREQUAL
Rule 50    augassign -> SLASHEQUAL
Rule 51    augassign -> PERCENTEQUAL
Rule 52    augassign -> STARSTAREQUAL
Rule 53    augassign -> SLASHSLASHEQUAL
Rule 54    print_stmt -> PRINT
Rule 55    print_stmt -> PRINT testlist
Rule 56    del_stmt -> DEL exprlist
Rule 57    exec_stmt -> EXEC expr
Rule 58    exec_stmt -> EXEC expr IN testlist
Rule 59    pass_stmt -> PASS
Rule 60    flow_stmt -> break_stmt
Rule 61    flow_stmt -> continue_stmt
Rule 62    flow_stmt -> return_stmt
Rule 63    flow_stmt -> raise_stmt
Rule 64    flow_stmt -> yield_stmt
Rule 65    break_stmt -> BREAK
Rule 66    continue_stmt -> CONTINUE
Rule 67    return_stmt -> RETURN
Rule 68    return_stmt -> RETURN testlist
Rule 69    raise_stmt -> RAISE
Rule 70    raise_stmt -> RAISE test
Rule 71    raise_stmt -> RAISE test COMMA test
Rule 72    raise_stmt -> RAISE test COMMA test COMMA test
Rule 73    yield_stmt -> yield_expr
Rule 74    yield_expr -> YIELD
Rule 75    yield_expr -> YIELD testlist
Rule 76    import_stmt -> IMPORT module modulelist
Rule 77    import_stmt -> IMPORT module AS NAME modulelist
Rule 78    import_stmt -> FROM relative_module IMPORT NAME identlist
Rule 79    import_stmt -> FROM relative_module IMPORT NAME AS NAME identlist
Rule 80    import_stmt -> FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
Rule 81    import_stmt -> FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
Rule 82    import_stmt -> FROM module IMPORT STAR
Rule 83    modulelist -> <empty>
Rule 84    modulelist -> COMMA module modulelist
Rule 85    modulelist -> COMMA module AS NAME modulelist
Rule 86    identlist -> <empty>
Rule 87    identlist -> COMMA NAME identlist
Rule 88    identlist -> COMMA NAME AS NAME identlist
Rule 89    commaidentlist -> <empty>
Rule 90    commaidentlist -> COMMA
Rule 91    commaidentlist -> COMMA NAME commaidentlist
Rule 92    commaidentlist -> COMMA NAME AS NAME commaidentlist
Rule 93    relative_module -> NAME
Rule 94    relative_module -> NAME DOT NAME
Rule 95    relative_module -> dotstar module
Rule 96    relative_module -> DOT dotplus
Rule 97    dotplus -> <empty>
Rule 98    dotplus -> DOT dotplus
Rule 99    dotstar -> <empty>
Rule 100   dotstar -> DOT dotstar
Rule 101   module -> NAME
Rule 102   module -> NAME DOT NAME
Rule 103   global_stmt -> GLOBAL NAME namelist
Rule 104   namelist -> <empty>
Rule 105   namelist -> COMMA NAME namelist
Rule 106   assert_stmt -> ASSERT testlist
Rule 107   compound_stmt -> if_stmt
Rule 108   compound_stmt -> for_stmt
Rule 109   compound_stmt -> while_stmt
Rule 110   compound_stmt -> try_stmt
Rule 111   compound_stmt -> funcdef
Rule 112   compound_stmt -> classdef
Rule 113   compound_stmt -> with_stmt
Rule 114   compound_stmt -> decorated
Rule 115   if_stmt -> IF test COLON suite elif_list
Rule 116   if_stmt -> IF test COLON suite elif_list ELSE COLON suite
Rule 117   elif_list -> <empty>
Rule 118   elif_list -> ELIF test COLON suite elif_list
Rule 119   while_stmt -> WHILE test COLON suite
Rule 120   while_stmt -> WHILE test COLON suite ELSE COLON suite
Rule 121   for_stmt -> FOR targetlist IN testlist COLON suite
Rule 122   for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite
Rule 123   try_stmt -> TRY COLON suite except_stmt except_list
Rule 124   try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite
Rule 125   try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite
Rule 126   try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite
Rule 127   try_stmt -> TRY COLON suite FINALLY COLON suite
Rule 128   except_list -> <empty>
Rule 129   except_list -> except_stmt except_list
Rule 130   except_stmt -> EXCEPT COLON suite
Rule 131   except_stmt -> EXCEPT NAME namelist COLON suite
Rule 132   except_stmt -> EXCEPT NAME AS NAME COLON suite
Rule 133   with_stmt -> WITH with_item with_item_list COLON suite
Rule 134   with_item_list -> <empty>
Rule 135   with_item_list -> COMMA with_item with_item_list
Rule 136   with_item -> test
Rule 137   with_item -> test AS target
Rule 138   suite -> simple_stmt
Rule 139   suite -> NEWLINE INDENT stmts DEDENT
Rule 140   test -> or_test
Rule 141   test -> or_test IF or_test ELSE test
Rule 142   or_test -> and_test ortestlist
Rule 143   ortestlist -> <empty>
Rule 144   ortestlist -> OR and_test ortestlist
Rule 145   and_test -> not_test andtestlist
Rule 146   andtestlist -> <empty>
Rule 147   andtestlist -> AND not_test andtestlist
Rule 148   not_test -> NOT not_test
Rule 149   not_test -> comparison
Rule 150   comparison -> expr compexprlist
Rule 151   compexprlist -> <empty>
Rule 152   compexprlist -> comp_op expr compexprlist
Rule 153   comp_op -> LESS
Rule 154   comp_op -> GREATER
Rule 155   comp_op -> EQEQUAL
Rule 156   comp_op -> GREATEREQUAL
Rule 157   comp_op -> LESSEQUAL
Rule 158   comp_op -> NOTEQUAL
Rule 159   comp_op -> IN
Rule 160   comp_op -> NOT IN
Rule 161   comp_op -> IS
Rule 162   comp_op -> IS NOT
Rule 163   expr -> xor_expr xorexprlist
Rule 164   xorexprlist -> <empty>
Rule 165   xorexprlist -> VBAR xor_expr xorexprlist
Rule 166   xor_expr -> and_expr andexprlist
Rule 167   andexprlist -> <empty>
Rule 168   andexprlist -> CIRCUMFLEX and_expr andexprlist
Rule 169   and_expr -> shift_expr shiftexprlist
Rule 170   shiftexprlist -> <empty>
Rule 171   shiftexprlist -> AMPER shift_expr shiftexprlist
Rule 172   shift_expr -> arith_expr arithexprlist
Rule 173   arithexprlist -> <empty>
Rule 174   arithexprlist -> LEFTSHIFT arith_expr arithexprlist
Rule 175   arithexprlist -> RIGHTSHIFT arith_expr arithexprlist
Rule 176   arith_expr -> term termlist
Rule 177   termlist -> <empty>
Rule 178   termlist -> PLUS term termlist
Rule 179   termlist -> MINUS term termlist
Rule 180   term -> factor factorlist
Rule 181   factorlist -> <empty>
Rule 182   factorlist -> STAR factor factorlist
Rule 183   factorlist -> SLASH factor factorlist
Rule 184   factorlist -> PERCENT factor factorlist
Rule 185   factorlist -> SLASHSLASH factor factorlist
Rule 186   factor -> power
Rule 187   factor -> PLUS factor
Rule 188   factor -> MINUS factor
Rule 189   factor -> TILDE factor
Rule 190   power -> atom trailerlist
Rule 191   power -> atom trailerlist STARSTAR factor
Rule 192   power -> NAME trailerlist
Rule 193   power -> NAME trailerlist STARSTAR factor
Rule 194   trailerlist -> <empty>
Rule 195   trailerlist -> trailer trailerlist
Rule 196   atom -> LPAREN RPAREN
Rule 197   atom -> LPAREN testlist_comp RPAREN
Rule 198   atom -> LPAREN yield_expr RPAREN
Rule 199   atom -> LSQB RSQB
Rule 200   atom -> LSQB listmaker RSQB
Rule 201   atom -> LBRACE RBRACE
Rule 202   atom -> LBRACE dictorsetmaker RBRACE
Rule 203   atom -> BACKQUOTE testlist1 BACKQUOTE
Rule 204   atom -> NUMBER
Rule 205   atom -> FNUMBER
Rule 206   atom -> HEXADECIMALNUMBER
Rule 207   atom -> OCTALNUMBER
Rule 208   atom -> BINARYNUMBER
Rule 209   atom -> stringlist
Rule 210   stringlist -> STRING
Rule 211   stringlist -> STRING stringlist
Rule 212   stringlist -> TRIPLESTRING
Rule 213   stringlist -> TRIPLESTRING stringlist
Rule 214   listmaker -> testlist
Rule 215   listmaker -> test list_for
Rule 216   testlist_comp -> testlist
Rule 217   list_iter -> list_for
Rule 218   list_iter -> list_if
Rule 219   list_for -> FOR targetlist IN testlist_safe
Rule 220   list_for -> FOR targetlist IN testlist_safe list_iter
Rule 221   list_if -> IF old_test
Rule 222   list_if -> IF old_test list_iter
Rule 223   testlist_safe -> old_test
Rule 224   testlist_safe -> old_test COMMA commaoldtest
Rule 225   commaoldtest -> old_test
Rule 226   commaoldtest -> old_test COMMA commaoldtest
Rule 227   old_test -> or_test
Rule 228   trailer -> LPAREN RPAREN
Rule 229   trailer -> LPAREN arglist RPAREN
Rule 230   trailer -> LSQB short_slice RSQB
Rule 231   trailer -> LSQB slice_list RSQB
Rule 232   trailer -> DOT NAME
Rule 233   slice_list -> slice_item slice_item_list
Rule 234   slice_item_list -> <empty>
Rule 235   slice_item_list -> COMMA
Rule 236   slice_item_list -> COMMA slice_item slice_item_list
Rule 237   slice_item -> test
Rule 238   slice_item -> proper_slice
Rule 239   slice_item -> ellipsis
Rule 240   proper_slice -> short_slice
Rule 241   proper_slice -> long_slice
Rule 242   short_slice -> lower_bound COLON
Rule 243   short_slice -> lower_bound COLON upper_bound
Rule 244   short_slice -> COLON
Rule 245   short_slice -> COLON upper_bound
Rule 246   long_slice -> short_slice COLON
Rule 247   long_slice -> short_slice COLON stride
Rule 248   lower_bound -> test
Rule 249   upper_bound -> test
Rule 250   stride -> test
Rule 251   ellipsis -> DOT DOT DOT
Rule 252   exprlist -> expr
Rule 253   exprlist -> expr COMMA
Rule 254   exprlist -> expr COMMA exprlist
Rule 255   testlist -> test
Rule 256   testlist -> test COMMA
Rule 257   testlist -> test COMMA testlist
Rule 258   dictorsetmaker -> test COLON test comp_for
Rule 259   dictorsetmaker -> test comp_for
Rule 260   dictorsetmaker -> testcolonlist
Rule 261   dictorsetmaker -> testlist
Rule 262   testcolonlist -> test COLON test
Rule 263   testcolonlist -> test COLON test COMMA
Rule 264   testcolonlist -> test COLON test COMMA testcolonlist
Rule 265   classdef -> CLASS NAME COLON suite
Rule 266   classdef -> CLASS NAME LPAREN RPAREN COLON suite
Rule 267   classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite
Rule 268   arglist -> arglist1
Rule 269   arglist -> arglist3 STAR test arglist2 COMMA STAR STAR test
Rule 270   arglist -> arglist3 STAR test arglist2
Rule 271   arglist -> arglist3 STAR STAR test
Rule 272   arglist3 -> <empty>
Rule 273   arglist3 -> argument COMMA arglist3
Rule 274   arglist2 -> <empty>
Rule 275   arglist2 -> arglist2 COMMA argument
Rule 276   arglist1 -> argument
Rule 277   arglist1 -> argument COMMA
Rule 278   arglist1 -> argument COMMA arglist1
Rule 279   argument -> test
Rule 280   argument -> test comp_for
Rule 281   argument -> test EQUAL test
Rule 282   comp_iter -> comp_for
Rule 283   comp_iter -> comp_if
Rule 284   comp_for -> FOR targetlist IN or_test
Rule 285   comp_for -> FOR targetlist IN or_test comp_iter
Rule 286   comp_if -> IF old_test
Rule 287   comp_if -> IF old_test comp_iter
Rule 288   testlist1 -> test
Rule 289   testlist1 -> test COMMA testlist1
Rule 290   stmts -> stmts stmt
Rule 291   stmts -> stmt
Rule 292   targetlist -> target
Rule 293   targetlist -> target COMMA
Rule 294   targetlist -> target COMMA targetlist
Rule 295   target -> NAME
Rule 296   target -> LPAREN targetlist RPAREN
Rule 297   target -> LSQB RSQB
Rule 298   target -> LSQB targetlist RSQB
Rule 299   target -> atom trailerlist DOT NAME
Rule 300   target -> atom trailerlist LSQB testlist RSQB
Rule 301   target -> atom trailerlist LSQB slice_list RSQB
Rule 302   target -> STAR target

Terminals, with rules where they appear

AMPER                : 171
AND                  : 147
AS                   : 77 79 81 85 88 92 132 137
ASSERT               : 106
AT                   : 5 6 7
BACKQUOTE            : 203 203
BINARYNUMBER         : 208
BREAK                : 65
CIRCUMFLEX           : 168
CLASS                : 265 266 267
COLON                : 12 115 116 116 118 119 120 120 121 122 122 123 124 124 125 125 125 126 126 127 127 130 131 132 133 242 243 244 245 246 247 258 262 263 264 265 266 267
COMMA                : 15 17 20 21 24 27 71 72 72 84 85 87 88 90 91 92 105 135 224 226 235 236 253 254 256 257 263 264 269 273 275 277 278 289 293 294
CONTINUE             : 66
DEDENT               : 139
DEF                  : 12
DEL                  : 56
DOT                  : 94 96 98 100 102 232 251 251 251 299
ELIF                 : 118
ELSE                 : 116 120 122 124 125 141
ENDMARKER            : 1
EQEQUAL              : 155
EQUAL                : 15 16 21 46 281
EXCEPT               : 130 131 132
EXEC                 : 57 58
FINALLY              : 125 126 127
FNUMBER              : 205
FOR                  : 121 122 219 220 284 285
FROM                 : 78 79 80 81 82
GLOBAL               : 103
GREATER              : 154
GREATEREQUAL         : 156
HEXADECIMALNUMBER    : 206
IF                   : 115 116 141 221 222 286 287
IMPORT               : 76 77 78 79 80 81 82
IN                   : 58 121 122 159 160 219 220 284 285
INDENT               : 139
INUMBER              : 
IS                   : 161 162
LAMBDA               : 
LBRACE               : 201 202
LEFTSHIFT            : 174
LESS                 : 153
LESSEQUAL            : 157
LPAREN               : 6 7 13 23 80 81 196 197 198 228 229 266 267 296
LSQB                 : 199 200 230 231 297 298 300 301
MINEQUAL             : 48
MINUS                : 179 188
NAME                 : 12 22 77 78 79 79 80 81 81 85 87 88 88 91 92 92 93 94 94 101 102 102 103 105 131 132 132 192 193 232 265 266 267 295 299
NEWLINE              : 2 5 6 7 30 31 139
NOT                  : 148 160 162
NOTEQUAL             : 158
NUMBER               : 204
OCTALNUMBER          : 207
OR                   : 144
PASS                 : 59
PERCENT              : 184
PERCENTEQUAL         : 51
PLUS                 : 178 187
PLUSEQUAL            : 47
PRINT                : 54 55
RAISE                : 69 70 71 72
RAWSTRING            : 
RBRACE               : 201 202
RETURN               : 67 68
RIGHTSHIFT           : 175
RPAREN               : 6 7 13 23 80 81 196 197 198 228 229 266 267 296
RSQB                 : 199 200 230 231 297 298 300 301
SEMI                 : 31 32
SLASH                : 183
SLASHEQUAL           : 50
SLASHSLASH           : 185
SLASHSLASHEQUAL      : 53
STAR                 : 82 182 269 269 269 270 271 271 302
STAREQUAL            : 49
STARSTAR             : 191 193
STARSTAREQUAL        : 52
STRING               : 210 211
STRINGUNCLOSED       : 
TILDE                : 189
TRIPLESTRING         : 212 213
TRY                  : 123 124 125 126 127
UNICODESTRING        : 
VBAR                 : 165
WHILE                : 119 120
WITH                 : 133
WS                   : 
YIELD                : 74 75
error                : 

Nonterminals, with rules where they appear

and_expr             : 166 168
and_test             : 142 144
andexprlist          : 166 168
andtestlist          : 145 147
arglist              : 7 229
arglist1             : 268 278
arglist2             : 269 270 275
arglist3             : 269 270 271 273
argument             : 273 275 276 277 278
arith_expr           : 172 174 175
arithexprlist        : 172 174 175
assert_stmt          : 40
assn_stmt            : 44 46
atom                 : 190 191 299 300 301
aug_stmt             : 35
augassign            : 43
break_stmt           : 60
classdef             : 10 112
commaidentlist       : 80 91 92
commaoldtest         : 224 226
comp_for             : 258 259 280 282
comp_if              : 283
comp_iter            : 285 287
comp_op              : 152
comparison           : 149
compexprlist         : 150 152
compound_stmt        : 29
continue_stmt        : 61
decorated            : 114
decorator            : 8 9
decorators           : 9 10 11
del_stmt             : 41
dictorsetmaker       : 202
dotplus              : 96 98
dotstar              : 95 100
elif_list            : 115 116 118
ellipsis             : 239
except_list          : 123 124 125 126 129
except_stmt          : 123 124 125 126 129
exec_stmt            : 42
expr                 : 57 58 150 152 252 253 254
exprlist             : 56 254
factor               : 180 182 183 184 185 187 188 189 191 193
factorlist           : 180 182 183 184 185
file_input           : 0
flow_stmt            : 34
for_stmt             : 108
fpdef                : 15 16 17 18 20 21 24 25 27
fpdeflist            : 15 16 17 18 20 21
fplist               : 23
fplist1              : 24 25 27
funcdef              : 11 111
global_stmt          : 39
identlist            : 78 79 81 87 88
if_stmt              : 107
import_stmt          : 38
list_for             : 215 217
list_if              : 218
list_iter            : 220 222
listmaker            : 200
long_slice           : 241
lower_bound          : 242 243
module               : 5 6 7 76 77 82 84 85 95
modulelist           : 76 77 84 85
namelist             : 103 105 131
not_test             : 145 147 148
old_test             : 221 222 223 224 225 226 286 287
or_test              : 140 141 141 227 284 285
ortestlist           : 142 144
parameters           : 12
pass_stmt            : 37
power                : 186
print_stmt           : 36
proper_slice         : 238
raise_stmt           : 63
relative_module      : 78 79 80 81
return_stmt          : 62
shift_expr           : 169 171
shiftexprlist        : 169 171
short_slice          : 230 240 246 247
simple_stmt          : 28 138
single_stmt          : 1 2 3
slice_item           : 233 236
slice_item_list      : 233 236
slice_list           : 231 301
small_stmt           : 32 33
small_stmts          : 30 31 32
stmt                 : 3 290 291
stmts                : 139 290
stride               : 247
stringlist           : 209 211 213
suite                : 12 115 116 116 118 119 120 120 121 122 122 123 124 124 125 125 125 126 126 127 127 130 131 132 133 265 266 267
target               : 137 292 293 294 302
targetlist           : 121 122 219 220 284 285 294 296 298
term                 : 176 178 179
termlist             : 176 178 179
test                 : 15 16 21 70 71 71 72 72 72 115 116 118 119 120 136 137 141 215 237 248 249 250 255 256 257 258 258 259 262 262 263 263 264 264 269 269 270 271 279 280 281 281 288 289
testcolonlist        : 260 264
testlist             : 43 43 45 46 55 58 68 75 106 121 122 214 216 257 261 267 300
testlist1            : 203 289
testlist_comp        : 197
testlist_safe        : 219 220
trailer              : 195
trailerlist          : 190 191 192 193 195 299 300 301
try_stmt             : 110
upper_bound          : 243 245
varargslist          : 13
while_stmt           : 109
with_item            : 133 135
with_item_list       : 133 135
with_stmt            : 113
xor_expr             : 163 165
xorexprlist          : 163 165
yield_expr           : 73 198
yield_stmt           : 64

Parsing method: LALR

state 0

    (0) S' -> . file_input
    (1) file_input -> . single_stmt ENDMARKER
    (2) single_stmt -> . single_stmt NEWLINE
    (3) single_stmt -> . single_stmt stmt
    (4) single_stmt -> .

    ENDMARKER       reduce using rule 4 (single_stmt -> .)
    NEWLINE         reduce using rule 4 (single_stmt -> .)
    IF              reduce using rule 4 (single_stmt -> .)
    FOR             reduce using rule 4 (single_stmt -> .)
    WHILE           reduce using rule 4 (single_stmt -> .)
    TRY             reduce using rule 4 (single_stmt -> .)
    DEF             reduce using rule 4 (single_stmt -> .)
    CLASS           reduce using rule 4 (single_stmt -> .)
    WITH            reduce using rule 4 (single_stmt -> .)
    PRINT           reduce using rule 4 (single_stmt -> .)
    PASS            reduce using rule 4 (single_stmt -> .)
    IMPORT          reduce using rule 4 (single_stmt -> .)
    FROM            reduce using rule 4 (single_stmt -> .)
    GLOBAL          reduce using rule 4 (single_stmt -> .)
    ASSERT          reduce using rule 4 (single_stmt -> .)
    DEL             reduce using rule 4 (single_stmt -> .)
    EXEC            reduce using rule 4 (single_stmt -> .)
    AT              reduce using rule 4 (single_stmt -> .)
    BREAK           reduce using rule 4 (single_stmt -> .)
    CONTINUE        reduce using rule 4 (single_stmt -> .)
    RETURN          reduce using rule 4 (single_stmt -> .)
    RAISE           reduce using rule 4 (single_stmt -> .)
    YIELD           reduce using rule 4 (single_stmt -> .)
    NOT             reduce using rule 4 (single_stmt -> .)
    PLUS            reduce using rule 4 (single_stmt -> .)
    MINUS           reduce using rule 4 (single_stmt -> .)
    TILDE           reduce using rule 4 (single_stmt -> .)
    NAME            reduce using rule 4 (single_stmt -> .)
    LPAREN          reduce using rule 4 (single_stmt -> .)
    LSQB            reduce using rule 4 (single_stmt -> .)
    LBRACE          reduce using rule 4 (single_stmt -> .)
    BACKQUOTE       reduce using rule 4 (single_stmt -> .)
    NUMBER          reduce using rule 4 (single_stmt -> .)
    FNUMBER         reduce using rule 4 (single_stmt -> .)
    HEXADECIMALNUMBER reduce using rule 4 (single_stmt -> .)
    OCTALNUMBER     reduce using rule 4 (single_stmt -> .)
    BINARYNUMBER    reduce using rule 4 (single_stmt -> .)
    STRING          reduce using rule 4 (single_stmt -> .)
    TRIPLESTRING    reduce using rule 4 (single_stmt -> .)

    file_input                     shift and go to state 1
    single_stmt                    shift and go to state 2

state 1

    (0) S' -> file_input .



state 2

    (1) file_input -> single_stmt . ENDMARKER
    (2) single_stmt -> single_stmt . NEWLINE
    (3) single_stmt -> single_stmt . stmt
    (28) stmt -> . simple_stmt
    (29) stmt -> . compound_stmt
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (107) compound_stmt -> . if_stmt
    (108) compound_stmt -> . for_stmt
    (109) compound_stmt -> . while_stmt
    (110) compound_stmt -> . try_stmt
    (111) compound_stmt -> . funcdef
    (112) compound_stmt -> . classdef
    (113) compound_stmt -> . with_stmt
    (114) compound_stmt -> . decorated
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (115) if_stmt -> . IF test COLON suite elif_list
    (116) if_stmt -> . IF test COLON suite elif_list ELSE COLON suite
    (121) for_stmt -> . FOR targetlist IN testlist COLON suite
    (122) for_stmt -> . FOR targetlist IN testlist COLON suite ELSE COLON suite
    (119) while_stmt -> . WHILE test COLON suite
    (120) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (123) try_stmt -> . TRY COLON suite except_stmt except_list
    (124) try_stmt -> . TRY COLON suite except_stmt except_list ELSE COLON suite
    (125) try_stmt -> . TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> . TRY COLON suite except_stmt except_list FINALLY COLON suite
    (127) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (12) funcdef -> . DEF NAME parameters COLON suite
    (265) classdef -> . CLASS NAME COLON suite
    (266) classdef -> . CLASS NAME LPAREN RPAREN COLON suite
    (267) classdef -> . CLASS NAME LPAREN testlist RPAREN COLON suite
    (133) with_stmt -> . WITH with_item with_item_list COLON suite
    (10) decorated -> . decorators classdef
    (11) decorated -> . decorators funcdef
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (8) decorators -> . decorator
    (9) decorators -> . decorator decorators
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (5) decorator -> . AT module NEWLINE
    (6) decorator -> . AT module LPAREN RPAREN NEWLINE
    (7) decorator -> . AT module LPAREN arglist RPAREN NEWLINE
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    ENDMARKER       shift and go to state 3
    NEWLINE         shift and go to state 10
    IF              shift and go to state 85
    FOR             shift and go to state 40
    WHILE           shift and go to state 56
    TRY             shift and go to state 42
    DEF             shift and go to state 30
    CLASS           shift and go to state 79
    WITH            shift and go to state 8
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    AT              shift and go to state 82
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    try_stmt                       shift and go to state 7
    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    or_test                        shift and go to state 24
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    del_stmt                       shift and go to state 87
    raise_stmt                     shift and go to state 66
    atom                           shift and go to state 50
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 15
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 41
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 19
    and_test                       shift and go to state 44
    global_stmt                    shift and go to state 78
    funcdef                        shift and go to state 64
    decorated                      shift and go to state 84
    import_stmt                    shift and go to state 45
    decorator                      shift and go to state 21
    pass_stmt                      shift and go to state 48
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    if_stmt                        shift and go to state 23
    xor_expr                       shift and go to state 59
    decorators                     shift and go to state 37
    aug_stmt                       shift and go to state 43
    compound_stmt                  shift and go to state 38
    with_stmt                      shift and go to state 25
    while_stmt                     shift and go to state 88
    yield_stmt                     shift and go to state 73
    expr                           shift and go to state 70
    and_expr                       shift and go to state 72
    small_stmts                    shift and go to state 53

state 3

    (1) file_input -> single_stmt ENDMARKER .

    $end            reduce using rule 1 (file_input -> single_stmt ENDMARKER .)


state 4

    (33) small_stmts -> small_stmt .

    NEWLINE         reduce using rule 33 (small_stmts -> small_stmt .)
    SEMI            reduce using rule 33 (small_stmts -> small_stmt .)


state 5

    (208) atom -> BINARYNUMBER .

    LPAREN          reduce using rule 208 (atom -> BINARYNUMBER .)
    LSQB            reduce using rule 208 (atom -> BINARYNUMBER .)
    DOT             reduce using rule 208 (atom -> BINARYNUMBER .)
    STARSTAR        reduce using rule 208 (atom -> BINARYNUMBER .)
    STAR            reduce using rule 208 (atom -> BINARYNUMBER .)
    SLASH           reduce using rule 208 (atom -> BINARYNUMBER .)
    PERCENT         reduce using rule 208 (atom -> BINARYNUMBER .)
    SLASHSLASH      reduce using rule 208 (atom -> BINARYNUMBER .)
    PLUS            reduce using rule 208 (atom -> BINARYNUMBER .)
    MINUS           reduce using rule 208 (atom -> BINARYNUMBER .)
    LEFTSHIFT       reduce using rule 208 (atom -> BINARYNUMBER .)
    RIGHTSHIFT      reduce using rule 208 (atom -> BINARYNUMBER .)
    AMPER           reduce using rule 208 (atom -> BINARYNUMBER .)
    CIRCUMFLEX      reduce using rule 208 (atom -> BINARYNUMBER .)
    VBAR            reduce using rule 208 (atom -> BINARYNUMBER .)
    LESS            reduce using rule 208 (atom -> BINARYNUMBER .)
    GREATER         reduce using rule 208 (atom -> BINARYNUMBER .)
    EQEQUAL         reduce using rule 208 (atom -> BINARYNUMBER .)
    GREATEREQUAL    reduce using rule 208 (atom -> BINARYNUMBER .)
    LESSEQUAL       reduce using rule 208 (atom -> BINARYNUMBER .)
    NOTEQUAL        reduce using rule 208 (atom -> BINARYNUMBER .)
    IN              reduce using rule 208 (atom -> BINARYNUMBER .)
    NOT             reduce using rule 208 (atom -> BINARYNUMBER .)
    IS              reduce using rule 208 (atom -> BINARYNUMBER .)
    AND             reduce using rule 208 (atom -> BINARYNUMBER .)
    OR              reduce using rule 208 (atom -> BINARYNUMBER .)
    IF              reduce using rule 208 (atom -> BINARYNUMBER .)
    COMMA           reduce using rule 208 (atom -> BINARYNUMBER .)
    BACKQUOTE       reduce using rule 208 (atom -> BINARYNUMBER .)
    EQUAL           reduce using rule 208 (atom -> BINARYNUMBER .)
    PLUSEQUAL       reduce using rule 208 (atom -> BINARYNUMBER .)
    MINEQUAL        reduce using rule 208 (atom -> BINARYNUMBER .)
    STAREQUAL       reduce using rule 208 (atom -> BINARYNUMBER .)
    SLASHEQUAL      reduce using rule 208 (atom -> BINARYNUMBER .)
    PERCENTEQUAL    reduce using rule 208 (atom -> BINARYNUMBER .)
    STARSTAREQUAL   reduce using rule 208 (atom -> BINARYNUMBER .)
    SLASHSLASHEQUAL reduce using rule 208 (atom -> BINARYNUMBER .)
    NEWLINE         reduce using rule 208 (atom -> BINARYNUMBER .)
    SEMI            reduce using rule 208 (atom -> BINARYNUMBER .)
    RSQB            reduce using rule 208 (atom -> BINARYNUMBER .)
    COLON           reduce using rule 208 (atom -> BINARYNUMBER .)
    RPAREN          reduce using rule 208 (atom -> BINARYNUMBER .)
    FOR             reduce using rule 208 (atom -> BINARYNUMBER .)
    AS              reduce using rule 208 (atom -> BINARYNUMBER .)
    RBRACE          reduce using rule 208 (atom -> BINARYNUMBER .)
    ELSE            reduce using rule 208 (atom -> BINARYNUMBER .)


state 6

    (203) atom -> BACKQUOTE . testlist1 BACKQUOTE
    (288) testlist1 -> . test
    (289) testlist1 -> . test COMMA testlist1
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    testlist1                      shift and go to state 89
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 90
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 7

    (110) compound_stmt -> try_stmt .

    DEDENT          reduce using rule 110 (compound_stmt -> try_stmt .)
    IF              reduce using rule 110 (compound_stmt -> try_stmt .)
    FOR             reduce using rule 110 (compound_stmt -> try_stmt .)
    WHILE           reduce using rule 110 (compound_stmt -> try_stmt .)
    TRY             reduce using rule 110 (compound_stmt -> try_stmt .)
    DEF             reduce using rule 110 (compound_stmt -> try_stmt .)
    CLASS           reduce using rule 110 (compound_stmt -> try_stmt .)
    WITH            reduce using rule 110 (compound_stmt -> try_stmt .)
    PRINT           reduce using rule 110 (compound_stmt -> try_stmt .)
    PASS            reduce using rule 110 (compound_stmt -> try_stmt .)
    IMPORT          reduce using rule 110 (compound_stmt -> try_stmt .)
    FROM            reduce using rule 110 (compound_stmt -> try_stmt .)
    GLOBAL          reduce using rule 110 (compound_stmt -> try_stmt .)
    ASSERT          reduce using rule 110 (compound_stmt -> try_stmt .)
    DEL             reduce using rule 110 (compound_stmt -> try_stmt .)
    EXEC            reduce using rule 110 (compound_stmt -> try_stmt .)
    AT              reduce using rule 110 (compound_stmt -> try_stmt .)
    BREAK           reduce using rule 110 (compound_stmt -> try_stmt .)
    CONTINUE        reduce using rule 110 (compound_stmt -> try_stmt .)
    RETURN          reduce using rule 110 (compound_stmt -> try_stmt .)
    RAISE           reduce using rule 110 (compound_stmt -> try_stmt .)
    YIELD           reduce using rule 110 (compound_stmt -> try_stmt .)
    NOT             reduce using rule 110 (compound_stmt -> try_stmt .)
    PLUS            reduce using rule 110 (compound_stmt -> try_stmt .)
    MINUS           reduce using rule 110 (compound_stmt -> try_stmt .)
    TILDE           reduce using rule 110 (compound_stmt -> try_stmt .)
    NAME            reduce using rule 110 (compound_stmt -> try_stmt .)
    LPAREN          reduce using rule 110 (compound_stmt -> try_stmt .)
    LSQB            reduce using rule 110 (compound_stmt -> try_stmt .)
    LBRACE          reduce using rule 110 (compound_stmt -> try_stmt .)
    BACKQUOTE       reduce using rule 110 (compound_stmt -> try_stmt .)
    NUMBER          reduce using rule 110 (compound_stmt -> try_stmt .)
    FNUMBER         reduce using rule 110 (compound_stmt -> try_stmt .)
    HEXADECIMALNUMBER reduce using rule 110 (compound_stmt -> try_stmt .)
    OCTALNUMBER     reduce using rule 110 (compound_stmt -> try_stmt .)
    BINARYNUMBER    reduce using rule 110 (compound_stmt -> try_stmt .)
    STRING          reduce using rule 110 (compound_stmt -> try_stmt .)
    TRIPLESTRING    reduce using rule 110 (compound_stmt -> try_stmt .)
    ENDMARKER       reduce using rule 110 (compound_stmt -> try_stmt .)
    NEWLINE         reduce using rule 110 (compound_stmt -> try_stmt .)


state 8

    (133) with_stmt -> WITH . with_item with_item_list COLON suite
    (136) with_item -> . test
    (137) with_item -> . test AS target
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    with_item                      shift and go to state 91
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 92
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 9

    (188) factor -> MINUS . factor
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 93
    stringlist                     shift and go to state 35

state 10

    (2) single_stmt -> single_stmt NEWLINE .

    ENDMARKER       reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NEWLINE         reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    IF              reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    FOR             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    WHILE           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    TRY             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    DEF             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    CLASS           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    WITH            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PRINT           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PASS            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    IMPORT          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    FROM            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    GLOBAL          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    ASSERT          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    DEL             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    EXEC            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    AT              reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    BREAK           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    CONTINUE        reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    RETURN          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    RAISE           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    YIELD           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NOT             reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    PLUS            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    MINUS           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    TILDE           reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NAME            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    LPAREN          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    LSQB            reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    LBRACE          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    BACKQUOTE       reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    NUMBER          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    FNUMBER         reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    HEXADECIMALNUMBER reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    OCTALNUMBER     reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    BINARYNUMBER    reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    STRING          reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)
    TRIPLESTRING    reduce using rule 2 (single_stmt -> single_stmt NEWLINE .)


state 11

    (187) factor -> PLUS . factor
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 94
    stringlist                     shift and go to state 35

state 12

    (180) term -> factor . factorlist
    (181) factorlist -> .
    (182) factorlist -> . STAR factor factorlist
    (183) factorlist -> . SLASH factor factorlist
    (184) factorlist -> . PERCENT factor factorlist
    (185) factorlist -> . SLASHSLASH factor factorlist

    PLUS            reduce using rule 181 (factorlist -> .)
    MINUS           reduce using rule 181 (factorlist -> .)
    LEFTSHIFT       reduce using rule 181 (factorlist -> .)
    RIGHTSHIFT      reduce using rule 181 (factorlist -> .)
    AMPER           reduce using rule 181 (factorlist -> .)
    CIRCUMFLEX      reduce using rule 181 (factorlist -> .)
    VBAR            reduce using rule 181 (factorlist -> .)
    LESS            reduce using rule 181 (factorlist -> .)
    GREATER         reduce using rule 181 (factorlist -> .)
    EQEQUAL         reduce using rule 181 (factorlist -> .)
    GREATEREQUAL    reduce using rule 181 (factorlist -> .)
    LESSEQUAL       reduce using rule 181 (factorlist -> .)
    NOTEQUAL        reduce using rule 181 (factorlist -> .)
    IN              reduce using rule 181 (factorlist -> .)
    NOT             reduce using rule 181 (factorlist -> .)
    IS              reduce using rule 181 (factorlist -> .)
    AND             reduce using rule 181 (factorlist -> .)
    OR              reduce using rule 181 (factorlist -> .)
    IF              reduce using rule 181 (factorlist -> .)
    COMMA           reduce using rule 181 (factorlist -> .)
    EQUAL           reduce using rule 181 (factorlist -> .)
    PLUSEQUAL       reduce using rule 181 (factorlist -> .)
    MINEQUAL        reduce using rule 181 (factorlist -> .)
    STAREQUAL       reduce using rule 181 (factorlist -> .)
    SLASHEQUAL      reduce using rule 181 (factorlist -> .)
    PERCENTEQUAL    reduce using rule 181 (factorlist -> .)
    STARSTAREQUAL   reduce using rule 181 (factorlist -> .)
    SLASHSLASHEQUAL reduce using rule 181 (factorlist -> .)
    NEWLINE         reduce using rule 181 (factorlist -> .)
    SEMI            reduce using rule 181 (factorlist -> .)
    BACKQUOTE       reduce using rule 181 (factorlist -> .)
    AS              reduce using rule 181 (factorlist -> .)
    COLON           reduce using rule 181 (factorlist -> .)
    FOR             reduce using rule 181 (factorlist -> .)
    RBRACE          reduce using rule 181 (factorlist -> .)
    RSQB            reduce using rule 181 (factorlist -> .)
    RPAREN          reduce using rule 181 (factorlist -> .)
    ELSE            reduce using rule 181 (factorlist -> .)
    STAR            shift and go to state 96
    SLASH           shift and go to state 99
    PERCENT         shift and go to state 97
    SLASHSLASH      shift and go to state 95

    factorlist                     shift and go to state 98

state 13

    (76) import_stmt -> IMPORT . module modulelist
    (77) import_stmt -> IMPORT . module AS NAME modulelist
    (101) module -> . NAME
    (102) module -> . NAME DOT NAME

    NAME            shift and go to state 100

    module                         shift and go to state 101

state 14

    (57) exec_stmt -> EXEC . expr
    (58) exec_stmt -> EXEC . expr IN testlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 102

state 15

    (28) stmt -> simple_stmt .

    DEDENT          reduce using rule 28 (stmt -> simple_stmt .)
    IF              reduce using rule 28 (stmt -> simple_stmt .)
    FOR             reduce using rule 28 (stmt -> simple_stmt .)
    WHILE           reduce using rule 28 (stmt -> simple_stmt .)
    TRY             reduce using rule 28 (stmt -> simple_stmt .)
    DEF             reduce using rule 28 (stmt -> simple_stmt .)
    CLASS           reduce using rule 28 (stmt -> simple_stmt .)
    WITH            reduce using rule 28 (stmt -> simple_stmt .)
    PRINT           reduce using rule 28 (stmt -> simple_stmt .)
    PASS            reduce using rule 28 (stmt -> simple_stmt .)
    IMPORT          reduce using rule 28 (stmt -> simple_stmt .)
    FROM            reduce using rule 28 (stmt -> simple_stmt .)
    GLOBAL          reduce using rule 28 (stmt -> simple_stmt .)
    ASSERT          reduce using rule 28 (stmt -> simple_stmt .)
    DEL             reduce using rule 28 (stmt -> simple_stmt .)
    EXEC            reduce using rule 28 (stmt -> simple_stmt .)
    AT              reduce using rule 28 (stmt -> simple_stmt .)
    BREAK           reduce using rule 28 (stmt -> simple_stmt .)
    CONTINUE        reduce using rule 28 (stmt -> simple_stmt .)
    RETURN          reduce using rule 28 (stmt -> simple_stmt .)
    RAISE           reduce using rule 28 (stmt -> simple_stmt .)
    YIELD           reduce using rule 28 (stmt -> simple_stmt .)
    NOT             reduce using rule 28 (stmt -> simple_stmt .)
    PLUS            reduce using rule 28 (stmt -> simple_stmt .)
    MINUS           reduce using rule 28 (stmt -> simple_stmt .)
    TILDE           reduce using rule 28 (stmt -> simple_stmt .)
    NAME            reduce using rule 28 (stmt -> simple_stmt .)
    LPAREN          reduce using rule 28 (stmt -> simple_stmt .)
    LSQB            reduce using rule 28 (stmt -> simple_stmt .)
    LBRACE          reduce using rule 28 (stmt -> simple_stmt .)
    BACKQUOTE       reduce using rule 28 (stmt -> simple_stmt .)
    NUMBER          reduce using rule 28 (stmt -> simple_stmt .)
    FNUMBER         reduce using rule 28 (stmt -> simple_stmt .)
    HEXADECIMALNUMBER reduce using rule 28 (stmt -> simple_stmt .)
    OCTALNUMBER     reduce using rule 28 (stmt -> simple_stmt .)
    BINARYNUMBER    reduce using rule 28 (stmt -> simple_stmt .)
    STRING          reduce using rule 28 (stmt -> simple_stmt .)
    TRIPLESTRING    reduce using rule 28 (stmt -> simple_stmt .)
    ENDMARKER       reduce using rule 28 (stmt -> simple_stmt .)
    NEWLINE         reduce using rule 28 (stmt -> simple_stmt .)


state 16

    (43) aug_stmt -> testlist . augassign testlist
    (45) assn_stmt -> testlist .
    (46) assn_stmt -> testlist . EQUAL assn_stmt
    (47) augassign -> . PLUSEQUAL
    (48) augassign -> . MINEQUAL
    (49) augassign -> . STAREQUAL
    (50) augassign -> . SLASHEQUAL
    (51) augassign -> . PERCENTEQUAL
    (52) augassign -> . STARSTAREQUAL
    (53) augassign -> . SLASHSLASHEQUAL

    NEWLINE         reduce using rule 45 (assn_stmt -> testlist .)
    SEMI            reduce using rule 45 (assn_stmt -> testlist .)
    EQUAL           shift and go to state 108
    PLUSEQUAL       shift and go to state 109
    MINEQUAL        shift and go to state 104
    STAREQUAL       shift and go to state 106
    SLASHEQUAL      shift and go to state 103
    PERCENTEQUAL    shift and go to state 110
    STARSTAREQUAL   shift and go to state 105
    SLASHSLASHEQUAL shift and go to state 111

    augassign                      shift and go to state 107

state 17

    (112) compound_stmt -> classdef .

    DEDENT          reduce using rule 112 (compound_stmt -> classdef .)
    IF              reduce using rule 112 (compound_stmt -> classdef .)
    FOR             reduce using rule 112 (compound_stmt -> classdef .)
    WHILE           reduce using rule 112 (compound_stmt -> classdef .)
    TRY             reduce using rule 112 (compound_stmt -> classdef .)
    DEF             reduce using rule 112 (compound_stmt -> classdef .)
    CLASS           reduce using rule 112 (compound_stmt -> classdef .)
    WITH            reduce using rule 112 (compound_stmt -> classdef .)
    PRINT           reduce using rule 112 (compound_stmt -> classdef .)
    PASS            reduce using rule 112 (compound_stmt -> classdef .)
    IMPORT          reduce using rule 112 (compound_stmt -> classdef .)
    FROM            reduce using rule 112 (compound_stmt -> classdef .)
    GLOBAL          reduce using rule 112 (compound_stmt -> classdef .)
    ASSERT          reduce using rule 112 (compound_stmt -> classdef .)
    DEL             reduce using rule 112 (compound_stmt -> classdef .)
    EXEC            reduce using rule 112 (compound_stmt -> classdef .)
    AT              reduce using rule 112 (compound_stmt -> classdef .)
    BREAK           reduce using rule 112 (compound_stmt -> classdef .)
    CONTINUE        reduce using rule 112 (compound_stmt -> classdef .)
    RETURN          reduce using rule 112 (compound_stmt -> classdef .)
    RAISE           reduce using rule 112 (compound_stmt -> classdef .)
    YIELD           reduce using rule 112 (compound_stmt -> classdef .)
    NOT             reduce using rule 112 (compound_stmt -> classdef .)
    PLUS            reduce using rule 112 (compound_stmt -> classdef .)
    MINUS           reduce using rule 112 (compound_stmt -> classdef .)
    TILDE           reduce using rule 112 (compound_stmt -> classdef .)
    NAME            reduce using rule 112 (compound_stmt -> classdef .)
    LPAREN          reduce using rule 112 (compound_stmt -> classdef .)
    LSQB            reduce using rule 112 (compound_stmt -> classdef .)
    LBRACE          reduce using rule 112 (compound_stmt -> classdef .)
    BACKQUOTE       reduce using rule 112 (compound_stmt -> classdef .)
    NUMBER          reduce using rule 112 (compound_stmt -> classdef .)
    FNUMBER         reduce using rule 112 (compound_stmt -> classdef .)
    HEXADECIMALNUMBER reduce using rule 112 (compound_stmt -> classdef .)
    OCTALNUMBER     reduce using rule 112 (compound_stmt -> classdef .)
    BINARYNUMBER    reduce using rule 112 (compound_stmt -> classdef .)
    STRING          reduce using rule 112 (compound_stmt -> classdef .)
    TRIPLESTRING    reduce using rule 112 (compound_stmt -> classdef .)
    ENDMARKER       reduce using rule 112 (compound_stmt -> classdef .)
    NEWLINE         reduce using rule 112 (compound_stmt -> classdef .)


state 18

    (40) small_stmt -> assert_stmt .

    NEWLINE         reduce using rule 40 (small_stmt -> assert_stmt .)
    SEMI            reduce using rule 40 (small_stmt -> assert_stmt .)


state 19

    (108) compound_stmt -> for_stmt .

    DEDENT          reduce using rule 108 (compound_stmt -> for_stmt .)
    IF              reduce using rule 108 (compound_stmt -> for_stmt .)
    FOR             reduce using rule 108 (compound_stmt -> for_stmt .)
    WHILE           reduce using rule 108 (compound_stmt -> for_stmt .)
    TRY             reduce using rule 108 (compound_stmt -> for_stmt .)
    DEF             reduce using rule 108 (compound_stmt -> for_stmt .)
    CLASS           reduce using rule 108 (compound_stmt -> for_stmt .)
    WITH            reduce using rule 108 (compound_stmt -> for_stmt .)
    PRINT           reduce using rule 108 (compound_stmt -> for_stmt .)
    PASS            reduce using rule 108 (compound_stmt -> for_stmt .)
    IMPORT          reduce using rule 108 (compound_stmt -> for_stmt .)
    FROM            reduce using rule 108 (compound_stmt -> for_stmt .)
    GLOBAL          reduce using rule 108 (compound_stmt -> for_stmt .)
    ASSERT          reduce using rule 108 (compound_stmt -> for_stmt .)
    DEL             reduce using rule 108 (compound_stmt -> for_stmt .)
    EXEC            reduce using rule 108 (compound_stmt -> for_stmt .)
    AT              reduce using rule 108 (compound_stmt -> for_stmt .)
    BREAK           reduce using rule 108 (compound_stmt -> for_stmt .)
    CONTINUE        reduce using rule 108 (compound_stmt -> for_stmt .)
    RETURN          reduce using rule 108 (compound_stmt -> for_stmt .)
    RAISE           reduce using rule 108 (compound_stmt -> for_stmt .)
    YIELD           reduce using rule 108 (compound_stmt -> for_stmt .)
    NOT             reduce using rule 108 (compound_stmt -> for_stmt .)
    PLUS            reduce using rule 108 (compound_stmt -> for_stmt .)
    MINUS           reduce using rule 108 (compound_stmt -> for_stmt .)
    TILDE           reduce using rule 108 (compound_stmt -> for_stmt .)
    NAME            reduce using rule 108 (compound_stmt -> for_stmt .)
    LPAREN          reduce using rule 108 (compound_stmt -> for_stmt .)
    LSQB            reduce using rule 108 (compound_stmt -> for_stmt .)
    LBRACE          reduce using rule 108 (compound_stmt -> for_stmt .)
    BACKQUOTE       reduce using rule 108 (compound_stmt -> for_stmt .)
    NUMBER          reduce using rule 108 (compound_stmt -> for_stmt .)
    FNUMBER         reduce using rule 108 (compound_stmt -> for_stmt .)
    HEXADECIMALNUMBER reduce using rule 108 (compound_stmt -> for_stmt .)
    OCTALNUMBER     reduce using rule 108 (compound_stmt -> for_stmt .)
    BINARYNUMBER    reduce using rule 108 (compound_stmt -> for_stmt .)
    STRING          reduce using rule 108 (compound_stmt -> for_stmt .)
    TRIPLESTRING    reduce using rule 108 (compound_stmt -> for_stmt .)
    ENDMARKER       reduce using rule 108 (compound_stmt -> for_stmt .)
    NEWLINE         reduce using rule 108 (compound_stmt -> for_stmt .)


state 20

    (59) pass_stmt -> PASS .

    NEWLINE         reduce using rule 59 (pass_stmt -> PASS .)
    SEMI            reduce using rule 59 (pass_stmt -> PASS .)


state 21

    (8) decorators -> decorator .
    (9) decorators -> decorator . decorators
    (8) decorators -> . decorator
    (9) decorators -> . decorator decorators
    (5) decorator -> . AT module NEWLINE
    (6) decorator -> . AT module LPAREN RPAREN NEWLINE
    (7) decorator -> . AT module LPAREN arglist RPAREN NEWLINE

    CLASS           reduce using rule 8 (decorators -> decorator .)
    DEF             reduce using rule 8 (decorators -> decorator .)
    AT              shift and go to state 82

    decorators                     shift and go to state 112
    decorator                      shift and go to state 21

state 22

    (176) arith_expr -> term . termlist
    (177) termlist -> .
    (178) termlist -> . PLUS term termlist
    (179) termlist -> . MINUS term termlist

    LEFTSHIFT       reduce using rule 177 (termlist -> .)
    RIGHTSHIFT      reduce using rule 177 (termlist -> .)
    AMPER           reduce using rule 177 (termlist -> .)
    CIRCUMFLEX      reduce using rule 177 (termlist -> .)
    VBAR            reduce using rule 177 (termlist -> .)
    LESS            reduce using rule 177 (termlist -> .)
    GREATER         reduce using rule 177 (termlist -> .)
    EQEQUAL         reduce using rule 177 (termlist -> .)
    GREATEREQUAL    reduce using rule 177 (termlist -> .)
    LESSEQUAL       reduce using rule 177 (termlist -> .)
    NOTEQUAL        reduce using rule 177 (termlist -> .)
    IN              reduce using rule 177 (termlist -> .)
    NOT             reduce using rule 177 (termlist -> .)
    IS              reduce using rule 177 (termlist -> .)
    AND             reduce using rule 177 (termlist -> .)
    OR              reduce using rule 177 (termlist -> .)
    IF              reduce using rule 177 (termlist -> .)
    COMMA           reduce using rule 177 (termlist -> .)
    EQUAL           reduce using rule 177 (termlist -> .)
    PLUSEQUAL       reduce using rule 177 (termlist -> .)
    MINEQUAL        reduce using rule 177 (termlist -> .)
    STAREQUAL       reduce using rule 177 (termlist -> .)
    SLASHEQUAL      reduce using rule 177 (termlist -> .)
    PERCENTEQUAL    reduce using rule 177 (termlist -> .)
    STARSTAREQUAL   reduce using rule 177 (termlist -> .)
    SLASHSLASHEQUAL reduce using rule 177 (termlist -> .)
    NEWLINE         reduce using rule 177 (termlist -> .)
    SEMI            reduce using rule 177 (termlist -> .)
    BACKQUOTE       reduce using rule 177 (termlist -> .)
    AS              reduce using rule 177 (termlist -> .)
    COLON           reduce using rule 177 (termlist -> .)
    FOR             reduce using rule 177 (termlist -> .)
    RBRACE          reduce using rule 177 (termlist -> .)
    RSQB            reduce using rule 177 (termlist -> .)
    RPAREN          reduce using rule 177 (termlist -> .)
    ELSE            reduce using rule 177 (termlist -> .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 115

    termlist                       shift and go to state 114

state 23

    (107) compound_stmt -> if_stmt .

    DEDENT          reduce using rule 107 (compound_stmt -> if_stmt .)
    IF              reduce using rule 107 (compound_stmt -> if_stmt .)
    FOR             reduce using rule 107 (compound_stmt -> if_stmt .)
    WHILE           reduce using rule 107 (compound_stmt -> if_stmt .)
    TRY             reduce using rule 107 (compound_stmt -> if_stmt .)
    DEF             reduce using rule 107 (compound_stmt -> if_stmt .)
    CLASS           reduce using rule 107 (compound_stmt -> if_stmt .)
    WITH            reduce using rule 107 (compound_stmt -> if_stmt .)
    PRINT           reduce using rule 107 (compound_stmt -> if_stmt .)
    PASS            reduce using rule 107 (compound_stmt -> if_stmt .)
    IMPORT          reduce using rule 107 (compound_stmt -> if_stmt .)
    FROM            reduce using rule 107 (compound_stmt -> if_stmt .)
    GLOBAL          reduce using rule 107 (compound_stmt -> if_stmt .)
    ASSERT          reduce using rule 107 (compound_stmt -> if_stmt .)
    DEL             reduce using rule 107 (compound_stmt -> if_stmt .)
    EXEC            reduce using rule 107 (compound_stmt -> if_stmt .)
    AT              reduce using rule 107 (compound_stmt -> if_stmt .)
    BREAK           reduce using rule 107 (compound_stmt -> if_stmt .)
    CONTINUE        reduce using rule 107 (compound_stmt -> if_stmt .)
    RETURN          reduce using rule 107 (compound_stmt -> if_stmt .)
    RAISE           reduce using rule 107 (compound_stmt -> if_stmt .)
    YIELD           reduce using rule 107 (compound_stmt -> if_stmt .)
    NOT             reduce using rule 107 (compound_stmt -> if_stmt .)
    PLUS            reduce using rule 107 (compound_stmt -> if_stmt .)
    MINUS           reduce using rule 107 (compound_stmt -> if_stmt .)
    TILDE           reduce using rule 107 (compound_stmt -> if_stmt .)
    NAME            reduce using rule 107 (compound_stmt -> if_stmt .)
    LPAREN          reduce using rule 107 (compound_stmt -> if_stmt .)
    LSQB            reduce using rule 107 (compound_stmt -> if_stmt .)
    LBRACE          reduce using rule 107 (compound_stmt -> if_stmt .)
    BACKQUOTE       reduce using rule 107 (compound_stmt -> if_stmt .)
    NUMBER          reduce using rule 107 (compound_stmt -> if_stmt .)
    FNUMBER         reduce using rule 107 (compound_stmt -> if_stmt .)
    HEXADECIMALNUMBER reduce using rule 107 (compound_stmt -> if_stmt .)
    OCTALNUMBER     reduce using rule 107 (compound_stmt -> if_stmt .)
    BINARYNUMBER    reduce using rule 107 (compound_stmt -> if_stmt .)
    STRING          reduce using rule 107 (compound_stmt -> if_stmt .)
    TRIPLESTRING    reduce using rule 107 (compound_stmt -> if_stmt .)
    ENDMARKER       reduce using rule 107 (compound_stmt -> if_stmt .)
    NEWLINE         reduce using rule 107 (compound_stmt -> if_stmt .)


state 24

    (140) test -> or_test .
    (141) test -> or_test . IF or_test ELSE test

    COMMA           reduce using rule 140 (test -> or_test .)
    NEWLINE         reduce using rule 140 (test -> or_test .)
    SEMI            reduce using rule 140 (test -> or_test .)
    EQUAL           reduce using rule 140 (test -> or_test .)
    PLUSEQUAL       reduce using rule 140 (test -> or_test .)
    MINEQUAL        reduce using rule 140 (test -> or_test .)
    STAREQUAL       reduce using rule 140 (test -> or_test .)
    SLASHEQUAL      reduce using rule 140 (test -> or_test .)
    PERCENTEQUAL    reduce using rule 140 (test -> or_test .)
    STARSTAREQUAL   reduce using rule 140 (test -> or_test .)
    SLASHSLASHEQUAL reduce using rule 140 (test -> or_test .)
    RPAREN          reduce using rule 140 (test -> or_test .)
    BACKQUOTE       reduce using rule 140 (test -> or_test .)
    AS              reduce using rule 140 (test -> or_test .)
    COLON           reduce using rule 140 (test -> or_test .)
    FOR             reduce using rule 140 (test -> or_test .)
    RBRACE          reduce using rule 140 (test -> or_test .)
    RSQB            reduce using rule 140 (test -> or_test .)
    IF              shift and go to state 116


state 25

    (113) compound_stmt -> with_stmt .

    DEDENT          reduce using rule 113 (compound_stmt -> with_stmt .)
    IF              reduce using rule 113 (compound_stmt -> with_stmt .)
    FOR             reduce using rule 113 (compound_stmt -> with_stmt .)
    WHILE           reduce using rule 113 (compound_stmt -> with_stmt .)
    TRY             reduce using rule 113 (compound_stmt -> with_stmt .)
    DEF             reduce using rule 113 (compound_stmt -> with_stmt .)
    CLASS           reduce using rule 113 (compound_stmt -> with_stmt .)
    WITH            reduce using rule 113 (compound_stmt -> with_stmt .)
    PRINT           reduce using rule 113 (compound_stmt -> with_stmt .)
    PASS            reduce using rule 113 (compound_stmt -> with_stmt .)
    IMPORT          reduce using rule 113 (compound_stmt -> with_stmt .)
    FROM            reduce using rule 113 (compound_stmt -> with_stmt .)
    GLOBAL          reduce using rule 113 (compound_stmt -> with_stmt .)
    ASSERT          reduce using rule 113 (compound_stmt -> with_stmt .)
    DEL             reduce using rule 113 (compound_stmt -> with_stmt .)
    EXEC            reduce using rule 113 (compound_stmt -> with_stmt .)
    AT              reduce using rule 113 (compound_stmt -> with_stmt .)
    BREAK           reduce using rule 113 (compound_stmt -> with_stmt .)
    CONTINUE        reduce using rule 113 (compound_stmt -> with_stmt .)
    RETURN          reduce using rule 113 (compound_stmt -> with_stmt .)
    RAISE           reduce using rule 113 (compound_stmt -> with_stmt .)
    YIELD           reduce using rule 113 (compound_stmt -> with_stmt .)
    NOT             reduce using rule 113 (compound_stmt -> with_stmt .)
    PLUS            reduce using rule 113 (compound_stmt -> with_stmt .)
    MINUS           reduce using rule 113 (compound_stmt -> with_stmt .)
    TILDE           reduce using rule 113 (compound_stmt -> with_stmt .)
    NAME            reduce using rule 113 (compound_stmt -> with_stmt .)
    LPAREN          reduce using rule 113 (compound_stmt -> with_stmt .)
    LSQB            reduce using rule 113 (compound_stmt -> with_stmt .)
    LBRACE          reduce using rule 113 (compound_stmt -> with_stmt .)
    BACKQUOTE       reduce using rule 113 (compound_stmt -> with_stmt .)
    NUMBER          reduce using rule 113 (compound_stmt -> with_stmt .)
    FNUMBER         reduce using rule 113 (compound_stmt -> with_stmt .)
    HEXADECIMALNUMBER reduce using rule 113 (compound_stmt -> with_stmt .)
    OCTALNUMBER     reduce using rule 113 (compound_stmt -> with_stmt .)
    BINARYNUMBER    reduce using rule 113 (compound_stmt -> with_stmt .)
    STRING          reduce using rule 113 (compound_stmt -> with_stmt .)
    TRIPLESTRING    reduce using rule 113 (compound_stmt -> with_stmt .)
    ENDMARKER       reduce using rule 113 (compound_stmt -> with_stmt .)
    NEWLINE         reduce using rule 113 (compound_stmt -> with_stmt .)


state 26

    (207) atom -> OCTALNUMBER .

    LPAREN          reduce using rule 207 (atom -> OCTALNUMBER .)
    LSQB            reduce using rule 207 (atom -> OCTALNUMBER .)
    DOT             reduce using rule 207 (atom -> OCTALNUMBER .)
    STARSTAR        reduce using rule 207 (atom -> OCTALNUMBER .)
    STAR            reduce using rule 207 (atom -> OCTALNUMBER .)
    SLASH           reduce using rule 207 (atom -> OCTALNUMBER .)
    PERCENT         reduce using rule 207 (atom -> OCTALNUMBER .)
    SLASHSLASH      reduce using rule 207 (atom -> OCTALNUMBER .)
    PLUS            reduce using rule 207 (atom -> OCTALNUMBER .)
    MINUS           reduce using rule 207 (atom -> OCTALNUMBER .)
    LEFTSHIFT       reduce using rule 207 (atom -> OCTALNUMBER .)
    RIGHTSHIFT      reduce using rule 207 (atom -> OCTALNUMBER .)
    AMPER           reduce using rule 207 (atom -> OCTALNUMBER .)
    CIRCUMFLEX      reduce using rule 207 (atom -> OCTALNUMBER .)
    VBAR            reduce using rule 207 (atom -> OCTALNUMBER .)
    LESS            reduce using rule 207 (atom -> OCTALNUMBER .)
    GREATER         reduce using rule 207 (atom -> OCTALNUMBER .)
    EQEQUAL         reduce using rule 207 (atom -> OCTALNUMBER .)
    GREATEREQUAL    reduce using rule 207 (atom -> OCTALNUMBER .)
    LESSEQUAL       reduce using rule 207 (atom -> OCTALNUMBER .)
    NOTEQUAL        reduce using rule 207 (atom -> OCTALNUMBER .)
    IN              reduce using rule 207 (atom -> OCTALNUMBER .)
    NOT             reduce using rule 207 (atom -> OCTALNUMBER .)
    IS              reduce using rule 207 (atom -> OCTALNUMBER .)
    AND             reduce using rule 207 (atom -> OCTALNUMBER .)
    OR              reduce using rule 207 (atom -> OCTALNUMBER .)
    IF              reduce using rule 207 (atom -> OCTALNUMBER .)
    COMMA           reduce using rule 207 (atom -> OCTALNUMBER .)
    BACKQUOTE       reduce using rule 207 (atom -> OCTALNUMBER .)
    EQUAL           reduce using rule 207 (atom -> OCTALNUMBER .)
    PLUSEQUAL       reduce using rule 207 (atom -> OCTALNUMBER .)
    MINEQUAL        reduce using rule 207 (atom -> OCTALNUMBER .)
    STAREQUAL       reduce using rule 207 (atom -> OCTALNUMBER .)
    SLASHEQUAL      reduce using rule 207 (atom -> OCTALNUMBER .)
    PERCENTEQUAL    reduce using rule 207 (atom -> OCTALNUMBER .)
    STARSTAREQUAL   reduce using rule 207 (atom -> OCTALNUMBER .)
    SLASHSLASHEQUAL reduce using rule 207 (atom -> OCTALNUMBER .)
    NEWLINE         reduce using rule 207 (atom -> OCTALNUMBER .)
    SEMI            reduce using rule 207 (atom -> OCTALNUMBER .)
    RSQB            reduce using rule 207 (atom -> OCTALNUMBER .)
    COLON           reduce using rule 207 (atom -> OCTALNUMBER .)
    RPAREN          reduce using rule 207 (atom -> OCTALNUMBER .)
    FOR             reduce using rule 207 (atom -> OCTALNUMBER .)
    AS              reduce using rule 207 (atom -> OCTALNUMBER .)
    RBRACE          reduce using rule 207 (atom -> OCTALNUMBER .)
    ELSE            reduce using rule 207 (atom -> OCTALNUMBER .)


state 27

    (44) aug_stmt -> assn_stmt .

    NEWLINE         reduce using rule 44 (aug_stmt -> assn_stmt .)
    SEMI            reduce using rule 44 (aug_stmt -> assn_stmt .)


state 28

    (56) del_stmt -> DEL . exprlist
    (252) exprlist -> . expr
    (253) exprlist -> . expr COMMA
    (254) exprlist -> . expr COMMA exprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    exprlist                       shift and go to state 117
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 118

state 29

    (54) print_stmt -> PRINT .
    (55) print_stmt -> PRINT . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         reduce using rule 54 (print_stmt -> PRINT .)
    SEMI            reduce using rule 54 (print_stmt -> PRINT .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 119
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 30

    (12) funcdef -> DEF . NAME parameters COLON suite

    NAME            shift and go to state 120


state 31

    (210) stringlist -> STRING .
    (211) stringlist -> STRING . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    LPAREN          reduce using rule 210 (stringlist -> STRING .)
    LSQB            reduce using rule 210 (stringlist -> STRING .)
    DOT             reduce using rule 210 (stringlist -> STRING .)
    STARSTAR        reduce using rule 210 (stringlist -> STRING .)
    STAR            reduce using rule 210 (stringlist -> STRING .)
    SLASH           reduce using rule 210 (stringlist -> STRING .)
    PERCENT         reduce using rule 210 (stringlist -> STRING .)
    SLASHSLASH      reduce using rule 210 (stringlist -> STRING .)
    PLUS            reduce using rule 210 (stringlist -> STRING .)
    MINUS           reduce using rule 210 (stringlist -> STRING .)
    LEFTSHIFT       reduce using rule 210 (stringlist -> STRING .)
    RIGHTSHIFT      reduce using rule 210 (stringlist -> STRING .)
    AMPER           reduce using rule 210 (stringlist -> STRING .)
    CIRCUMFLEX      reduce using rule 210 (stringlist -> STRING .)
    VBAR            reduce using rule 210 (stringlist -> STRING .)
    LESS            reduce using rule 210 (stringlist -> STRING .)
    GREATER         reduce using rule 210 (stringlist -> STRING .)
    EQEQUAL         reduce using rule 210 (stringlist -> STRING .)
    GREATEREQUAL    reduce using rule 210 (stringlist -> STRING .)
    LESSEQUAL       reduce using rule 210 (stringlist -> STRING .)
    NOTEQUAL        reduce using rule 210 (stringlist -> STRING .)
    IN              reduce using rule 210 (stringlist -> STRING .)
    NOT             reduce using rule 210 (stringlist -> STRING .)
    IS              reduce using rule 210 (stringlist -> STRING .)
    AND             reduce using rule 210 (stringlist -> STRING .)
    OR              reduce using rule 210 (stringlist -> STRING .)
    FOR             reduce using rule 210 (stringlist -> STRING .)
    IF              reduce using rule 210 (stringlist -> STRING .)
    RSQB            reduce using rule 210 (stringlist -> STRING .)
    COMMA           reduce using rule 210 (stringlist -> STRING .)
    RPAREN          reduce using rule 210 (stringlist -> STRING .)
    EQUAL           reduce using rule 210 (stringlist -> STRING .)
    PLUSEQUAL       reduce using rule 210 (stringlist -> STRING .)
    MINEQUAL        reduce using rule 210 (stringlist -> STRING .)
    STAREQUAL       reduce using rule 210 (stringlist -> STRING .)
    SLASHEQUAL      reduce using rule 210 (stringlist -> STRING .)
    PERCENTEQUAL    reduce using rule 210 (stringlist -> STRING .)
    STARSTAREQUAL   reduce using rule 210 (stringlist -> STRING .)
    SLASHSLASHEQUAL reduce using rule 210 (stringlist -> STRING .)
    NEWLINE         reduce using rule 210 (stringlist -> STRING .)
    SEMI            reduce using rule 210 (stringlist -> STRING .)
    BACKQUOTE       reduce using rule 210 (stringlist -> STRING .)
    AS              reduce using rule 210 (stringlist -> STRING .)
    COLON           reduce using rule 210 (stringlist -> STRING .)
    RBRACE          reduce using rule 210 (stringlist -> STRING .)
    ELSE            reduce using rule 210 (stringlist -> STRING .)
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    stringlist                     shift and go to state 121

state 32

    (34) small_stmt -> flow_stmt .

    NEWLINE         reduce using rule 34 (small_stmt -> flow_stmt .)
    SEMI            reduce using rule 34 (small_stmt -> flow_stmt .)


state 33

    (186) factor -> power .

    STAR            reduce using rule 186 (factor -> power .)
    SLASH           reduce using rule 186 (factor -> power .)
    PERCENT         reduce using rule 186 (factor -> power .)
    SLASHSLASH      reduce using rule 186 (factor -> power .)
    PLUS            reduce using rule 186 (factor -> power .)
    MINUS           reduce using rule 186 (factor -> power .)
    LEFTSHIFT       reduce using rule 186 (factor -> power .)
    RIGHTSHIFT      reduce using rule 186 (factor -> power .)
    AMPER           reduce using rule 186 (factor -> power .)
    CIRCUMFLEX      reduce using rule 186 (factor -> power .)
    VBAR            reduce using rule 186 (factor -> power .)
    LESS            reduce using rule 186 (factor -> power .)
    GREATER         reduce using rule 186 (factor -> power .)
    EQEQUAL         reduce using rule 186 (factor -> power .)
    GREATEREQUAL    reduce using rule 186 (factor -> power .)
    LESSEQUAL       reduce using rule 186 (factor -> power .)
    NOTEQUAL        reduce using rule 186 (factor -> power .)
    IN              reduce using rule 186 (factor -> power .)
    NOT             reduce using rule 186 (factor -> power .)
    IS              reduce using rule 186 (factor -> power .)
    AND             reduce using rule 186 (factor -> power .)
    OR              reduce using rule 186 (factor -> power .)
    IF              reduce using rule 186 (factor -> power .)
    COMMA           reduce using rule 186 (factor -> power .)
    EQUAL           reduce using rule 186 (factor -> power .)
    PLUSEQUAL       reduce using rule 186 (factor -> power .)
    MINEQUAL        reduce using rule 186 (factor -> power .)
    STAREQUAL       reduce using rule 186 (factor -> power .)
    SLASHEQUAL      reduce using rule 186 (factor -> power .)
    PERCENTEQUAL    reduce using rule 186 (factor -> power .)
    STARSTAREQUAL   reduce using rule 186 (factor -> power .)
    SLASHSLASHEQUAL reduce using rule 186 (factor -> power .)
    NEWLINE         reduce using rule 186 (factor -> power .)
    SEMI            reduce using rule 186 (factor -> power .)
    FOR             reduce using rule 186 (factor -> power .)
    RSQB            reduce using rule 186 (factor -> power .)
    BACKQUOTE       reduce using rule 186 (factor -> power .)
    AS              reduce using rule 186 (factor -> power .)
    COLON           reduce using rule 186 (factor -> power .)
    RBRACE          reduce using rule 186 (factor -> power .)
    RPAREN          reduce using rule 186 (factor -> power .)
    ELSE            reduce using rule 186 (factor -> power .)


state 34

    (169) and_expr -> shift_expr . shiftexprlist
    (170) shiftexprlist -> .
    (171) shiftexprlist -> . AMPER shift_expr shiftexprlist

    CIRCUMFLEX      reduce using rule 170 (shiftexprlist -> .)
    VBAR            reduce using rule 170 (shiftexprlist -> .)
    LESS            reduce using rule 170 (shiftexprlist -> .)
    GREATER         reduce using rule 170 (shiftexprlist -> .)
    EQEQUAL         reduce using rule 170 (shiftexprlist -> .)
    GREATEREQUAL    reduce using rule 170 (shiftexprlist -> .)
    LESSEQUAL       reduce using rule 170 (shiftexprlist -> .)
    NOTEQUAL        reduce using rule 170 (shiftexprlist -> .)
    IN              reduce using rule 170 (shiftexprlist -> .)
    NOT             reduce using rule 170 (shiftexprlist -> .)
    IS              reduce using rule 170 (shiftexprlist -> .)
    AND             reduce using rule 170 (shiftexprlist -> .)
    OR              reduce using rule 170 (shiftexprlist -> .)
    IF              reduce using rule 170 (shiftexprlist -> .)
    COMMA           reduce using rule 170 (shiftexprlist -> .)
    EQUAL           reduce using rule 170 (shiftexprlist -> .)
    PLUSEQUAL       reduce using rule 170 (shiftexprlist -> .)
    MINEQUAL        reduce using rule 170 (shiftexprlist -> .)
    STAREQUAL       reduce using rule 170 (shiftexprlist -> .)
    SLASHEQUAL      reduce using rule 170 (shiftexprlist -> .)
    PERCENTEQUAL    reduce using rule 170 (shiftexprlist -> .)
    STARSTAREQUAL   reduce using rule 170 (shiftexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 170 (shiftexprlist -> .)
    NEWLINE         reduce using rule 170 (shiftexprlist -> .)
    SEMI            reduce using rule 170 (shiftexprlist -> .)
    BACKQUOTE       reduce using rule 170 (shiftexprlist -> .)
    AS              reduce using rule 170 (shiftexprlist -> .)
    COLON           reduce using rule 170 (shiftexprlist -> .)
    FOR             reduce using rule 170 (shiftexprlist -> .)
    RBRACE          reduce using rule 170 (shiftexprlist -> .)
    RSQB            reduce using rule 170 (shiftexprlist -> .)
    RPAREN          reduce using rule 170 (shiftexprlist -> .)
    ELSE            reduce using rule 170 (shiftexprlist -> .)
    AMPER           shift and go to state 123

    shiftexprlist                  shift and go to state 122

state 35

    (209) atom -> stringlist .

    LPAREN          reduce using rule 209 (atom -> stringlist .)
    LSQB            reduce using rule 209 (atom -> stringlist .)
    DOT             reduce using rule 209 (atom -> stringlist .)
    STARSTAR        reduce using rule 209 (atom -> stringlist .)
    STAR            reduce using rule 209 (atom -> stringlist .)
    SLASH           reduce using rule 209 (atom -> stringlist .)
    PERCENT         reduce using rule 209 (atom -> stringlist .)
    SLASHSLASH      reduce using rule 209 (atom -> stringlist .)
    PLUS            reduce using rule 209 (atom -> stringlist .)
    MINUS           reduce using rule 209 (atom -> stringlist .)
    LEFTSHIFT       reduce using rule 209 (atom -> stringlist .)
    RIGHTSHIFT      reduce using rule 209 (atom -> stringlist .)
    AMPER           reduce using rule 209 (atom -> stringlist .)
    CIRCUMFLEX      reduce using rule 209 (atom -> stringlist .)
    VBAR            reduce using rule 209 (atom -> stringlist .)
    LESS            reduce using rule 209 (atom -> stringlist .)
    GREATER         reduce using rule 209 (atom -> stringlist .)
    EQEQUAL         reduce using rule 209 (atom -> stringlist .)
    GREATEREQUAL    reduce using rule 209 (atom -> stringlist .)
    LESSEQUAL       reduce using rule 209 (atom -> stringlist .)
    NOTEQUAL        reduce using rule 209 (atom -> stringlist .)
    IN              reduce using rule 209 (atom -> stringlist .)
    NOT             reduce using rule 209 (atom -> stringlist .)
    IS              reduce using rule 209 (atom -> stringlist .)
    AND             reduce using rule 209 (atom -> stringlist .)
    OR              reduce using rule 209 (atom -> stringlist .)
    IF              reduce using rule 209 (atom -> stringlist .)
    COMMA           reduce using rule 209 (atom -> stringlist .)
    BACKQUOTE       reduce using rule 209 (atom -> stringlist .)
    EQUAL           reduce using rule 209 (atom -> stringlist .)
    PLUSEQUAL       reduce using rule 209 (atom -> stringlist .)
    MINEQUAL        reduce using rule 209 (atom -> stringlist .)
    STAREQUAL       reduce using rule 209 (atom -> stringlist .)
    SLASHEQUAL      reduce using rule 209 (atom -> stringlist .)
    PERCENTEQUAL    reduce using rule 209 (atom -> stringlist .)
    STARSTAREQUAL   reduce using rule 209 (atom -> stringlist .)
    SLASHSLASHEQUAL reduce using rule 209 (atom -> stringlist .)
    NEWLINE         reduce using rule 209 (atom -> stringlist .)
    SEMI            reduce using rule 209 (atom -> stringlist .)
    RSQB            reduce using rule 209 (atom -> stringlist .)
    COLON           reduce using rule 209 (atom -> stringlist .)
    RPAREN          reduce using rule 209 (atom -> stringlist .)
    FOR             reduce using rule 209 (atom -> stringlist .)
    AS              reduce using rule 209 (atom -> stringlist .)
    RBRACE          reduce using rule 209 (atom -> stringlist .)
    ELSE            reduce using rule 209 (atom -> stringlist .)


state 36

    (42) small_stmt -> exec_stmt .

    NEWLINE         reduce using rule 42 (small_stmt -> exec_stmt .)
    SEMI            reduce using rule 42 (small_stmt -> exec_stmt .)


state 37

    (10) decorated -> decorators . classdef
    (11) decorated -> decorators . funcdef
    (265) classdef -> . CLASS NAME COLON suite
    (266) classdef -> . CLASS NAME LPAREN RPAREN COLON suite
    (267) classdef -> . CLASS NAME LPAREN testlist RPAREN COLON suite
    (12) funcdef -> . DEF NAME parameters COLON suite

    CLASS           shift and go to state 79
    DEF             shift and go to state 30

    classdef                       shift and go to state 124
    funcdef                        shift and go to state 125

state 38

    (29) stmt -> compound_stmt .

    DEDENT          reduce using rule 29 (stmt -> compound_stmt .)
    IF              reduce using rule 29 (stmt -> compound_stmt .)
    FOR             reduce using rule 29 (stmt -> compound_stmt .)
    WHILE           reduce using rule 29 (stmt -> compound_stmt .)
    TRY             reduce using rule 29 (stmt -> compound_stmt .)
    DEF             reduce using rule 29 (stmt -> compound_stmt .)
    CLASS           reduce using rule 29 (stmt -> compound_stmt .)
    WITH            reduce using rule 29 (stmt -> compound_stmt .)
    PRINT           reduce using rule 29 (stmt -> compound_stmt .)
    PASS            reduce using rule 29 (stmt -> compound_stmt .)
    IMPORT          reduce using rule 29 (stmt -> compound_stmt .)
    FROM            reduce using rule 29 (stmt -> compound_stmt .)
    GLOBAL          reduce using rule 29 (stmt -> compound_stmt .)
    ASSERT          reduce using rule 29 (stmt -> compound_stmt .)
    DEL             reduce using rule 29 (stmt -> compound_stmt .)
    EXEC            reduce using rule 29 (stmt -> compound_stmt .)
    AT              reduce using rule 29 (stmt -> compound_stmt .)
    BREAK           reduce using rule 29 (stmt -> compound_stmt .)
    CONTINUE        reduce using rule 29 (stmt -> compound_stmt .)
    RETURN          reduce using rule 29 (stmt -> compound_stmt .)
    RAISE           reduce using rule 29 (stmt -> compound_stmt .)
    YIELD           reduce using rule 29 (stmt -> compound_stmt .)
    NOT             reduce using rule 29 (stmt -> compound_stmt .)
    PLUS            reduce using rule 29 (stmt -> compound_stmt .)
    MINUS           reduce using rule 29 (stmt -> compound_stmt .)
    TILDE           reduce using rule 29 (stmt -> compound_stmt .)
    NAME            reduce using rule 29 (stmt -> compound_stmt .)
    LPAREN          reduce using rule 29 (stmt -> compound_stmt .)
    LSQB            reduce using rule 29 (stmt -> compound_stmt .)
    LBRACE          reduce using rule 29 (stmt -> compound_stmt .)
    BACKQUOTE       reduce using rule 29 (stmt -> compound_stmt .)
    NUMBER          reduce using rule 29 (stmt -> compound_stmt .)
    FNUMBER         reduce using rule 29 (stmt -> compound_stmt .)
    HEXADECIMALNUMBER reduce using rule 29 (stmt -> compound_stmt .)
    OCTALNUMBER     reduce using rule 29 (stmt -> compound_stmt .)
    BINARYNUMBER    reduce using rule 29 (stmt -> compound_stmt .)
    STRING          reduce using rule 29 (stmt -> compound_stmt .)
    TRIPLESTRING    reduce using rule 29 (stmt -> compound_stmt .)
    ENDMARKER       reduce using rule 29 (stmt -> compound_stmt .)
    NEWLINE         reduce using rule 29 (stmt -> compound_stmt .)


state 39

    (212) stringlist -> TRIPLESTRING .
    (213) stringlist -> TRIPLESTRING . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    LPAREN          reduce using rule 212 (stringlist -> TRIPLESTRING .)
    LSQB            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    DOT             reduce using rule 212 (stringlist -> TRIPLESTRING .)
    STARSTAR        reduce using rule 212 (stringlist -> TRIPLESTRING .)
    STAR            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    SLASH           reduce using rule 212 (stringlist -> TRIPLESTRING .)
    PERCENT         reduce using rule 212 (stringlist -> TRIPLESTRING .)
    SLASHSLASH      reduce using rule 212 (stringlist -> TRIPLESTRING .)
    PLUS            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    MINUS           reduce using rule 212 (stringlist -> TRIPLESTRING .)
    LEFTSHIFT       reduce using rule 212 (stringlist -> TRIPLESTRING .)
    RIGHTSHIFT      reduce using rule 212 (stringlist -> TRIPLESTRING .)
    AMPER           reduce using rule 212 (stringlist -> TRIPLESTRING .)
    CIRCUMFLEX      reduce using rule 212 (stringlist -> TRIPLESTRING .)
    VBAR            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    LESS            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    GREATER         reduce using rule 212 (stringlist -> TRIPLESTRING .)
    EQEQUAL         reduce using rule 212 (stringlist -> TRIPLESTRING .)
    GREATEREQUAL    reduce using rule 212 (stringlist -> TRIPLESTRING .)
    LESSEQUAL       reduce using rule 212 (stringlist -> TRIPLESTRING .)
    NOTEQUAL        reduce using rule 212 (stringlist -> TRIPLESTRING .)
    IN              reduce using rule 212 (stringlist -> TRIPLESTRING .)
    NOT             reduce using rule 212 (stringlist -> TRIPLESTRING .)
    IS              reduce using rule 212 (stringlist -> TRIPLESTRING .)
    AND             reduce using rule 212 (stringlist -> TRIPLESTRING .)
    OR              reduce using rule 212 (stringlist -> TRIPLESTRING .)
    FOR             reduce using rule 212 (stringlist -> TRIPLESTRING .)
    IF              reduce using rule 212 (stringlist -> TRIPLESTRING .)
    RSQB            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    COMMA           reduce using rule 212 (stringlist -> TRIPLESTRING .)
    RPAREN          reduce using rule 212 (stringlist -> TRIPLESTRING .)
    EQUAL           reduce using rule 212 (stringlist -> TRIPLESTRING .)
    PLUSEQUAL       reduce using rule 212 (stringlist -> TRIPLESTRING .)
    MINEQUAL        reduce using rule 212 (stringlist -> TRIPLESTRING .)
    STAREQUAL       reduce using rule 212 (stringlist -> TRIPLESTRING .)
    SLASHEQUAL      reduce using rule 212 (stringlist -> TRIPLESTRING .)
    PERCENTEQUAL    reduce using rule 212 (stringlist -> TRIPLESTRING .)
    STARSTAREQUAL   reduce using rule 212 (stringlist -> TRIPLESTRING .)
    SLASHSLASHEQUAL reduce using rule 212 (stringlist -> TRIPLESTRING .)
    NEWLINE         reduce using rule 212 (stringlist -> TRIPLESTRING .)
    SEMI            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    BACKQUOTE       reduce using rule 212 (stringlist -> TRIPLESTRING .)
    AS              reduce using rule 212 (stringlist -> TRIPLESTRING .)
    COLON           reduce using rule 212 (stringlist -> TRIPLESTRING .)
    RBRACE          reduce using rule 212 (stringlist -> TRIPLESTRING .)
    ELSE            reduce using rule 212 (stringlist -> TRIPLESTRING .)
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    stringlist                     shift and go to state 126

state 40

    (121) for_stmt -> FOR . targetlist IN testlist COLON suite
    (122) for_stmt -> FOR . targetlist IN testlist COLON suite ELSE COLON suite
    (292) targetlist -> . target
    (293) targetlist -> . target COMMA
    (294) targetlist -> . target COMMA targetlist
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NAME            shift and go to state 132
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    target                         shift and go to state 133
    stringlist                     shift and go to state 35
    atom                           shift and go to state 130
    targetlist                     shift and go to state 128

state 41

    (3) single_stmt -> single_stmt stmt .

    ENDMARKER       reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NEWLINE         reduce using rule 3 (single_stmt -> single_stmt stmt .)
    IF              reduce using rule 3 (single_stmt -> single_stmt stmt .)
    FOR             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    WHILE           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    TRY             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    DEF             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    CLASS           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    WITH            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    PRINT           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    PASS            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    IMPORT          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    FROM            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    GLOBAL          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    ASSERT          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    DEL             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    EXEC            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    AT              reduce using rule 3 (single_stmt -> single_stmt stmt .)
    BREAK           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    CONTINUE        reduce using rule 3 (single_stmt -> single_stmt stmt .)
    RETURN          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    RAISE           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    YIELD           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NOT             reduce using rule 3 (single_stmt -> single_stmt stmt .)
    PLUS            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    MINUS           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    TILDE           reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NAME            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    LPAREN          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    LSQB            reduce using rule 3 (single_stmt -> single_stmt stmt .)
    LBRACE          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    BACKQUOTE       reduce using rule 3 (single_stmt -> single_stmt stmt .)
    NUMBER          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    FNUMBER         reduce using rule 3 (single_stmt -> single_stmt stmt .)
    HEXADECIMALNUMBER reduce using rule 3 (single_stmt -> single_stmt stmt .)
    OCTALNUMBER     reduce using rule 3 (single_stmt -> single_stmt stmt .)
    BINARYNUMBER    reduce using rule 3 (single_stmt -> single_stmt stmt .)
    STRING          reduce using rule 3 (single_stmt -> single_stmt stmt .)
    TRIPLESTRING    reduce using rule 3 (single_stmt -> single_stmt stmt .)


state 42

    (123) try_stmt -> TRY . COLON suite except_stmt except_list
    (124) try_stmt -> TRY . COLON suite except_stmt except_list ELSE COLON suite
    (125) try_stmt -> TRY . COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> TRY . COLON suite except_stmt except_list FINALLY COLON suite
    (127) try_stmt -> TRY . COLON suite FINALLY COLON suite

    COLON           shift and go to state 134


state 43

    (35) small_stmt -> aug_stmt .

    NEWLINE         reduce using rule 35 (small_stmt -> aug_stmt .)
    SEMI            reduce using rule 35 (small_stmt -> aug_stmt .)


state 44

    (142) or_test -> and_test . ortestlist
    (143) ortestlist -> .
    (144) ortestlist -> . OR and_test ortestlist

    IF              reduce using rule 143 (ortestlist -> .)
    COMMA           reduce using rule 143 (ortestlist -> .)
    EQUAL           reduce using rule 143 (ortestlist -> .)
    PLUSEQUAL       reduce using rule 143 (ortestlist -> .)
    MINEQUAL        reduce using rule 143 (ortestlist -> .)
    STAREQUAL       reduce using rule 143 (ortestlist -> .)
    SLASHEQUAL      reduce using rule 143 (ortestlist -> .)
    PERCENTEQUAL    reduce using rule 143 (ortestlist -> .)
    STARSTAREQUAL   reduce using rule 143 (ortestlist -> .)
    SLASHSLASHEQUAL reduce using rule 143 (ortestlist -> .)
    NEWLINE         reduce using rule 143 (ortestlist -> .)
    SEMI            reduce using rule 143 (ortestlist -> .)
    BACKQUOTE       reduce using rule 143 (ortestlist -> .)
    AS              reduce using rule 143 (ortestlist -> .)
    COLON           reduce using rule 143 (ortestlist -> .)
    FOR             reduce using rule 143 (ortestlist -> .)
    RBRACE          reduce using rule 143 (ortestlist -> .)
    RSQB            reduce using rule 143 (ortestlist -> .)
    RPAREN          reduce using rule 143 (ortestlist -> .)
    ELSE            reduce using rule 143 (ortestlist -> .)
    OR              shift and go to state 136

    ortestlist                     shift and go to state 135

state 45

    (38) small_stmt -> import_stmt .

    NEWLINE         reduce using rule 38 (small_stmt -> import_stmt .)
    SEMI            reduce using rule 38 (small_stmt -> import_stmt .)


state 46

    (149) not_test -> comparison .

    AND             reduce using rule 149 (not_test -> comparison .)
    OR              reduce using rule 149 (not_test -> comparison .)
    ELSE            reduce using rule 149 (not_test -> comparison .)
    IF              reduce using rule 149 (not_test -> comparison .)
    COMMA           reduce using rule 149 (not_test -> comparison .)
    BACKQUOTE       reduce using rule 149 (not_test -> comparison .)
    EQUAL           reduce using rule 149 (not_test -> comparison .)
    PLUSEQUAL       reduce using rule 149 (not_test -> comparison .)
    MINEQUAL        reduce using rule 149 (not_test -> comparison .)
    STAREQUAL       reduce using rule 149 (not_test -> comparison .)
    SLASHEQUAL      reduce using rule 149 (not_test -> comparison .)
    PERCENTEQUAL    reduce using rule 149 (not_test -> comparison .)
    STARSTAREQUAL   reduce using rule 149 (not_test -> comparison .)
    SLASHSLASHEQUAL reduce using rule 149 (not_test -> comparison .)
    NEWLINE         reduce using rule 149 (not_test -> comparison .)
    SEMI            reduce using rule 149 (not_test -> comparison .)
    RBRACE          reduce using rule 149 (not_test -> comparison .)
    RSQB            reduce using rule 149 (not_test -> comparison .)
    RPAREN          reduce using rule 149 (not_test -> comparison .)
    COLON           reduce using rule 149 (not_test -> comparison .)
    AS              reduce using rule 149 (not_test -> comparison .)
    FOR             reduce using rule 149 (not_test -> comparison .)


state 47

    (201) atom -> LBRACE . RBRACE
    (202) atom -> LBRACE . dictorsetmaker RBRACE
    (258) dictorsetmaker -> . test COLON test comp_for
    (259) dictorsetmaker -> . test comp_for
    (260) dictorsetmaker -> . testcolonlist
    (261) dictorsetmaker -> . testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (262) testcolonlist -> . test COLON test
    (263) testcolonlist -> . test COLON test COMMA
    (264) testcolonlist -> . test COLON test COMMA testcolonlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RBRACE          shift and go to state 139
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    dictorsetmaker                 shift and go to state 137
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    testcolonlist                  shift and go to state 138
    power                          shift and go to state 33
    testlist                       shift and go to state 140
    and_test                       shift and go to state 44
    test                           shift and go to state 141
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 48

    (37) small_stmt -> pass_stmt .

    NEWLINE         reduce using rule 37 (small_stmt -> pass_stmt .)
    SEMI            reduce using rule 37 (small_stmt -> pass_stmt .)


state 49

    (172) shift_expr -> arith_expr . arithexprlist
    (173) arithexprlist -> .
    (174) arithexprlist -> . LEFTSHIFT arith_expr arithexprlist
    (175) arithexprlist -> . RIGHTSHIFT arith_expr arithexprlist

    AMPER           reduce using rule 173 (arithexprlist -> .)
    CIRCUMFLEX      reduce using rule 173 (arithexprlist -> .)
    VBAR            reduce using rule 173 (arithexprlist -> .)
    LESS            reduce using rule 173 (arithexprlist -> .)
    GREATER         reduce using rule 173 (arithexprlist -> .)
    EQEQUAL         reduce using rule 173 (arithexprlist -> .)
    GREATEREQUAL    reduce using rule 173 (arithexprlist -> .)
    LESSEQUAL       reduce using rule 173 (arithexprlist -> .)
    NOTEQUAL        reduce using rule 173 (arithexprlist -> .)
    IN              reduce using rule 173 (arithexprlist -> .)
    NOT             reduce using rule 173 (arithexprlist -> .)
    IS              reduce using rule 173 (arithexprlist -> .)
    AND             reduce using rule 173 (arithexprlist -> .)
    OR              reduce using rule 173 (arithexprlist -> .)
    IF              reduce using rule 173 (arithexprlist -> .)
    COMMA           reduce using rule 173 (arithexprlist -> .)
    EQUAL           reduce using rule 173 (arithexprlist -> .)
    PLUSEQUAL       reduce using rule 173 (arithexprlist -> .)
    MINEQUAL        reduce using rule 173 (arithexprlist -> .)
    STAREQUAL       reduce using rule 173 (arithexprlist -> .)
    SLASHEQUAL      reduce using rule 173 (arithexprlist -> .)
    PERCENTEQUAL    reduce using rule 173 (arithexprlist -> .)
    STARSTAREQUAL   reduce using rule 173 (arithexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 173 (arithexprlist -> .)
    NEWLINE         reduce using rule 173 (arithexprlist -> .)
    SEMI            reduce using rule 173 (arithexprlist -> .)
    BACKQUOTE       reduce using rule 173 (arithexprlist -> .)
    AS              reduce using rule 173 (arithexprlist -> .)
    COLON           reduce using rule 173 (arithexprlist -> .)
    FOR             reduce using rule 173 (arithexprlist -> .)
    RBRACE          reduce using rule 173 (arithexprlist -> .)
    RSQB            reduce using rule 173 (arithexprlist -> .)
    RPAREN          reduce using rule 173 (arithexprlist -> .)
    ELSE            reduce using rule 173 (arithexprlist -> .)
    LEFTSHIFT       shift and go to state 142
    RIGHTSHIFT      shift and go to state 143

    arithexprlist                  shift and go to state 144

state 50

    (190) power -> atom . trailerlist
    (191) power -> atom . trailerlist STARSTAR factor
    (194) trailerlist -> .
    (195) trailerlist -> . trailer trailerlist
    (228) trailer -> . LPAREN RPAREN
    (229) trailer -> . LPAREN arglist RPAREN
    (230) trailer -> . LSQB short_slice RSQB
    (231) trailer -> . LSQB slice_list RSQB
    (232) trailer -> . DOT NAME

    STARSTAR        reduce using rule 194 (trailerlist -> .)
    STAR            reduce using rule 194 (trailerlist -> .)
    SLASH           reduce using rule 194 (trailerlist -> .)
    PERCENT         reduce using rule 194 (trailerlist -> .)
    SLASHSLASH      reduce using rule 194 (trailerlist -> .)
    PLUS            reduce using rule 194 (trailerlist -> .)
    MINUS           reduce using rule 194 (trailerlist -> .)
    LEFTSHIFT       reduce using rule 194 (trailerlist -> .)
    RIGHTSHIFT      reduce using rule 194 (trailerlist -> .)
    AMPER           reduce using rule 194 (trailerlist -> .)
    CIRCUMFLEX      reduce using rule 194 (trailerlist -> .)
    VBAR            reduce using rule 194 (trailerlist -> .)
    LESS            reduce using rule 194 (trailerlist -> .)
    GREATER         reduce using rule 194 (trailerlist -> .)
    EQEQUAL         reduce using rule 194 (trailerlist -> .)
    GREATEREQUAL    reduce using rule 194 (trailerlist -> .)
    LESSEQUAL       reduce using rule 194 (trailerlist -> .)
    NOTEQUAL        reduce using rule 194 (trailerlist -> .)
    IN              reduce using rule 194 (trailerlist -> .)
    NOT             reduce using rule 194 (trailerlist -> .)
    IS              reduce using rule 194 (trailerlist -> .)
    AND             reduce using rule 194 (trailerlist -> .)
    OR              reduce using rule 194 (trailerlist -> .)
    IF              reduce using rule 194 (trailerlist -> .)
    COMMA           reduce using rule 194 (trailerlist -> .)
    EQUAL           reduce using rule 194 (trailerlist -> .)
    PLUSEQUAL       reduce using rule 194 (trailerlist -> .)
    MINEQUAL        reduce using rule 194 (trailerlist -> .)
    STAREQUAL       reduce using rule 194 (trailerlist -> .)
    SLASHEQUAL      reduce using rule 194 (trailerlist -> .)
    PERCENTEQUAL    reduce using rule 194 (trailerlist -> .)
    STARSTAREQUAL   reduce using rule 194 (trailerlist -> .)
    SLASHSLASHEQUAL reduce using rule 194 (trailerlist -> .)
    NEWLINE         reduce using rule 194 (trailerlist -> .)
    SEMI            reduce using rule 194 (trailerlist -> .)
    BACKQUOTE       reduce using rule 194 (trailerlist -> .)
    AS              reduce using rule 194 (trailerlist -> .)
    COLON           reduce using rule 194 (trailerlist -> .)
    FOR             reduce using rule 194 (trailerlist -> .)
    RBRACE          reduce using rule 194 (trailerlist -> .)
    RSQB            reduce using rule 194 (trailerlist -> .)
    RPAREN          reduce using rule 194 (trailerlist -> .)
    ELSE            reduce using rule 194 (trailerlist -> .)
    LPAREN          shift and go to state 147
    LSQB            shift and go to state 148
    DOT             shift and go to state 146

    trailerlist                    shift and go to state 145
    trailer                        shift and go to state 149

state 51

    (66) continue_stmt -> CONTINUE .

    NEWLINE         reduce using rule 66 (continue_stmt -> CONTINUE .)
    SEMI            reduce using rule 66 (continue_stmt -> CONTINUE .)


state 52

    (148) not_test -> NOT . not_test
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 150
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70

state 53

    (30) simple_stmt -> small_stmts . NEWLINE
    (31) simple_stmt -> small_stmts . SEMI NEWLINE
    (32) small_stmts -> small_stmts . SEMI small_stmt

    NEWLINE         shift and go to state 151
    SEMI            shift and go to state 152


state 54

    (69) raise_stmt -> RAISE .
    (70) raise_stmt -> RAISE . test
    (71) raise_stmt -> RAISE . test COMMA test
    (72) raise_stmt -> RAISE . test COMMA test COMMA test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         reduce using rule 69 (raise_stmt -> RAISE .)
    SEMI            reduce using rule 69 (raise_stmt -> RAISE .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 153
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 55

    (103) global_stmt -> GLOBAL . NAME namelist

    NAME            shift and go to state 154


state 56

    (119) while_stmt -> WHILE . test COLON suite
    (120) while_stmt -> WHILE . test COLON suite ELSE COLON suite
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 155
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 57

    (62) flow_stmt -> return_stmt .

    NEWLINE         reduce using rule 62 (flow_stmt -> return_stmt .)
    SEMI            reduce using rule 62 (flow_stmt -> return_stmt .)


state 58

    (67) return_stmt -> RETURN .
    (68) return_stmt -> RETURN . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         reduce using rule 67 (return_stmt -> RETURN .)
    SEMI            reduce using rule 67 (return_stmt -> RETURN .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 156
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 59

    (163) expr -> xor_expr . xorexprlist
    (164) xorexprlist -> .
    (165) xorexprlist -> . VBAR xor_expr xorexprlist

    LESS            reduce using rule 164 (xorexprlist -> .)
    GREATER         reduce using rule 164 (xorexprlist -> .)
    EQEQUAL         reduce using rule 164 (xorexprlist -> .)
    GREATEREQUAL    reduce using rule 164 (xorexprlist -> .)
    LESSEQUAL       reduce using rule 164 (xorexprlist -> .)
    NOTEQUAL        reduce using rule 164 (xorexprlist -> .)
    IN              reduce using rule 164 (xorexprlist -> .)
    NOT             reduce using rule 164 (xorexprlist -> .)
    IS              reduce using rule 164 (xorexprlist -> .)
    AND             reduce using rule 164 (xorexprlist -> .)
    OR              reduce using rule 164 (xorexprlist -> .)
    IF              reduce using rule 164 (xorexprlist -> .)
    COMMA           reduce using rule 164 (xorexprlist -> .)
    EQUAL           reduce using rule 164 (xorexprlist -> .)
    PLUSEQUAL       reduce using rule 164 (xorexprlist -> .)
    MINEQUAL        reduce using rule 164 (xorexprlist -> .)
    STAREQUAL       reduce using rule 164 (xorexprlist -> .)
    SLASHEQUAL      reduce using rule 164 (xorexprlist -> .)
    PERCENTEQUAL    reduce using rule 164 (xorexprlist -> .)
    STARSTAREQUAL   reduce using rule 164 (xorexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 164 (xorexprlist -> .)
    NEWLINE         reduce using rule 164 (xorexprlist -> .)
    SEMI            reduce using rule 164 (xorexprlist -> .)
    BACKQUOTE       reduce using rule 164 (xorexprlist -> .)
    AS              reduce using rule 164 (xorexprlist -> .)
    COLON           reduce using rule 164 (xorexprlist -> .)
    FOR             reduce using rule 164 (xorexprlist -> .)
    RBRACE          reduce using rule 164 (xorexprlist -> .)
    RSQB            reduce using rule 164 (xorexprlist -> .)
    RPAREN          reduce using rule 164 (xorexprlist -> .)
    ELSE            reduce using rule 164 (xorexprlist -> .)
    VBAR            shift and go to state 158

    xorexprlist                    shift and go to state 157

state 60

    (61) flow_stmt -> continue_stmt .

    NEWLINE         reduce using rule 61 (flow_stmt -> continue_stmt .)
    SEMI            reduce using rule 61 (flow_stmt -> continue_stmt .)


state 61

    (189) factor -> TILDE . factor
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 159
    stringlist                     shift and go to state 35

state 62

    (36) small_stmt -> print_stmt .

    NEWLINE         reduce using rule 36 (small_stmt -> print_stmt .)
    SEMI            reduce using rule 36 (small_stmt -> print_stmt .)


state 63

    (204) atom -> NUMBER .

    LPAREN          reduce using rule 204 (atom -> NUMBER .)
    LSQB            reduce using rule 204 (atom -> NUMBER .)
    DOT             reduce using rule 204 (atom -> NUMBER .)
    STARSTAR        reduce using rule 204 (atom -> NUMBER .)
    STAR            reduce using rule 204 (atom -> NUMBER .)
    SLASH           reduce using rule 204 (atom -> NUMBER .)
    PERCENT         reduce using rule 204 (atom -> NUMBER .)
    SLASHSLASH      reduce using rule 204 (atom -> NUMBER .)
    PLUS            reduce using rule 204 (atom -> NUMBER .)
    MINUS           reduce using rule 204 (atom -> NUMBER .)
    LEFTSHIFT       reduce using rule 204 (atom -> NUMBER .)
    RIGHTSHIFT      reduce using rule 204 (atom -> NUMBER .)
    AMPER           reduce using rule 204 (atom -> NUMBER .)
    CIRCUMFLEX      reduce using rule 204 (atom -> NUMBER .)
    VBAR            reduce using rule 204 (atom -> NUMBER .)
    LESS            reduce using rule 204 (atom -> NUMBER .)
    GREATER         reduce using rule 204 (atom -> NUMBER .)
    EQEQUAL         reduce using rule 204 (atom -> NUMBER .)
    GREATEREQUAL    reduce using rule 204 (atom -> NUMBER .)
    LESSEQUAL       reduce using rule 204 (atom -> NUMBER .)
    NOTEQUAL        reduce using rule 204 (atom -> NUMBER .)
    IN              reduce using rule 204 (atom -> NUMBER .)
    NOT             reduce using rule 204 (atom -> NUMBER .)
    IS              reduce using rule 204 (atom -> NUMBER .)
    AND             reduce using rule 204 (atom -> NUMBER .)
    OR              reduce using rule 204 (atom -> NUMBER .)
    IF              reduce using rule 204 (atom -> NUMBER .)
    COMMA           reduce using rule 204 (atom -> NUMBER .)
    BACKQUOTE       reduce using rule 204 (atom -> NUMBER .)
    EQUAL           reduce using rule 204 (atom -> NUMBER .)
    PLUSEQUAL       reduce using rule 204 (atom -> NUMBER .)
    MINEQUAL        reduce using rule 204 (atom -> NUMBER .)
    STAREQUAL       reduce using rule 204 (atom -> NUMBER .)
    SLASHEQUAL      reduce using rule 204 (atom -> NUMBER .)
    PERCENTEQUAL    reduce using rule 204 (atom -> NUMBER .)
    STARSTAREQUAL   reduce using rule 204 (atom -> NUMBER .)
    SLASHSLASHEQUAL reduce using rule 204 (atom -> NUMBER .)
    NEWLINE         reduce using rule 204 (atom -> NUMBER .)
    SEMI            reduce using rule 204 (atom -> NUMBER .)
    RSQB            reduce using rule 204 (atom -> NUMBER .)
    COLON           reduce using rule 204 (atom -> NUMBER .)
    RPAREN          reduce using rule 204 (atom -> NUMBER .)
    FOR             reduce using rule 204 (atom -> NUMBER .)
    AS              reduce using rule 204 (atom -> NUMBER .)
    RBRACE          reduce using rule 204 (atom -> NUMBER .)
    ELSE            reduce using rule 204 (atom -> NUMBER .)


state 64

    (111) compound_stmt -> funcdef .

    DEDENT          reduce using rule 111 (compound_stmt -> funcdef .)
    IF              reduce using rule 111 (compound_stmt -> funcdef .)
    FOR             reduce using rule 111 (compound_stmt -> funcdef .)
    WHILE           reduce using rule 111 (compound_stmt -> funcdef .)
    TRY             reduce using rule 111 (compound_stmt -> funcdef .)
    DEF             reduce using rule 111 (compound_stmt -> funcdef .)
    CLASS           reduce using rule 111 (compound_stmt -> funcdef .)
    WITH            reduce using rule 111 (compound_stmt -> funcdef .)
    PRINT           reduce using rule 111 (compound_stmt -> funcdef .)
    PASS            reduce using rule 111 (compound_stmt -> funcdef .)
    IMPORT          reduce using rule 111 (compound_stmt -> funcdef .)
    FROM            reduce using rule 111 (compound_stmt -> funcdef .)
    GLOBAL          reduce using rule 111 (compound_stmt -> funcdef .)
    ASSERT          reduce using rule 111 (compound_stmt -> funcdef .)
    DEL             reduce using rule 111 (compound_stmt -> funcdef .)
    EXEC            reduce using rule 111 (compound_stmt -> funcdef .)
    AT              reduce using rule 111 (compound_stmt -> funcdef .)
    BREAK           reduce using rule 111 (compound_stmt -> funcdef .)
    CONTINUE        reduce using rule 111 (compound_stmt -> funcdef .)
    RETURN          reduce using rule 111 (compound_stmt -> funcdef .)
    RAISE           reduce using rule 111 (compound_stmt -> funcdef .)
    YIELD           reduce using rule 111 (compound_stmt -> funcdef .)
    NOT             reduce using rule 111 (compound_stmt -> funcdef .)
    PLUS            reduce using rule 111 (compound_stmt -> funcdef .)
    MINUS           reduce using rule 111 (compound_stmt -> funcdef .)
    TILDE           reduce using rule 111 (compound_stmt -> funcdef .)
    NAME            reduce using rule 111 (compound_stmt -> funcdef .)
    LPAREN          reduce using rule 111 (compound_stmt -> funcdef .)
    LSQB            reduce using rule 111 (compound_stmt -> funcdef .)
    LBRACE          reduce using rule 111 (compound_stmt -> funcdef .)
    BACKQUOTE       reduce using rule 111 (compound_stmt -> funcdef .)
    NUMBER          reduce using rule 111 (compound_stmt -> funcdef .)
    FNUMBER         reduce using rule 111 (compound_stmt -> funcdef .)
    HEXADECIMALNUMBER reduce using rule 111 (compound_stmt -> funcdef .)
    OCTALNUMBER     reduce using rule 111 (compound_stmt -> funcdef .)
    BINARYNUMBER    reduce using rule 111 (compound_stmt -> funcdef .)
    STRING          reduce using rule 111 (compound_stmt -> funcdef .)
    TRIPLESTRING    reduce using rule 111 (compound_stmt -> funcdef .)
    ENDMARKER       reduce using rule 111 (compound_stmt -> funcdef .)
    NEWLINE         reduce using rule 111 (compound_stmt -> funcdef .)


state 65

    (199) atom -> LSQB . RSQB
    (200) atom -> LSQB . listmaker RSQB
    (214) listmaker -> . testlist
    (215) listmaker -> . test list_for
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RSQB            shift and go to state 161
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    listmaker                      shift and go to state 160
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 162
    and_test                       shift and go to state 44
    test                           shift and go to state 163
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 66

    (63) flow_stmt -> raise_stmt .

    NEWLINE         reduce using rule 63 (flow_stmt -> raise_stmt .)
    SEMI            reduce using rule 63 (flow_stmt -> raise_stmt .)


state 67

    (205) atom -> FNUMBER .

    LPAREN          reduce using rule 205 (atom -> FNUMBER .)
    LSQB            reduce using rule 205 (atom -> FNUMBER .)
    DOT             reduce using rule 205 (atom -> FNUMBER .)
    STARSTAR        reduce using rule 205 (atom -> FNUMBER .)
    STAR            reduce using rule 205 (atom -> FNUMBER .)
    SLASH           reduce using rule 205 (atom -> FNUMBER .)
    PERCENT         reduce using rule 205 (atom -> FNUMBER .)
    SLASHSLASH      reduce using rule 205 (atom -> FNUMBER .)
    PLUS            reduce using rule 205 (atom -> FNUMBER .)
    MINUS           reduce using rule 205 (atom -> FNUMBER .)
    LEFTSHIFT       reduce using rule 205 (atom -> FNUMBER .)
    RIGHTSHIFT      reduce using rule 205 (atom -> FNUMBER .)
    AMPER           reduce using rule 205 (atom -> FNUMBER .)
    CIRCUMFLEX      reduce using rule 205 (atom -> FNUMBER .)
    VBAR            reduce using rule 205 (atom -> FNUMBER .)
    LESS            reduce using rule 205 (atom -> FNUMBER .)
    GREATER         reduce using rule 205 (atom -> FNUMBER .)
    EQEQUAL         reduce using rule 205 (atom -> FNUMBER .)
    GREATEREQUAL    reduce using rule 205 (atom -> FNUMBER .)
    LESSEQUAL       reduce using rule 205 (atom -> FNUMBER .)
    NOTEQUAL        reduce using rule 205 (atom -> FNUMBER .)
    IN              reduce using rule 205 (atom -> FNUMBER .)
    NOT             reduce using rule 205 (atom -> FNUMBER .)
    IS              reduce using rule 205 (atom -> FNUMBER .)
    AND             reduce using rule 205 (atom -> FNUMBER .)
    OR              reduce using rule 205 (atom -> FNUMBER .)
    IF              reduce using rule 205 (atom -> FNUMBER .)
    COMMA           reduce using rule 205 (atom -> FNUMBER .)
    BACKQUOTE       reduce using rule 205 (atom -> FNUMBER .)
    EQUAL           reduce using rule 205 (atom -> FNUMBER .)
    PLUSEQUAL       reduce using rule 205 (atom -> FNUMBER .)
    MINEQUAL        reduce using rule 205 (atom -> FNUMBER .)
    STAREQUAL       reduce using rule 205 (atom -> FNUMBER .)
    SLASHEQUAL      reduce using rule 205 (atom -> FNUMBER .)
    PERCENTEQUAL    reduce using rule 205 (atom -> FNUMBER .)
    STARSTAREQUAL   reduce using rule 205 (atom -> FNUMBER .)
    SLASHSLASHEQUAL reduce using rule 205 (atom -> FNUMBER .)
    NEWLINE         reduce using rule 205 (atom -> FNUMBER .)
    SEMI            reduce using rule 205 (atom -> FNUMBER .)
    RSQB            reduce using rule 205 (atom -> FNUMBER .)
    COLON           reduce using rule 205 (atom -> FNUMBER .)
    RPAREN          reduce using rule 205 (atom -> FNUMBER .)
    FOR             reduce using rule 205 (atom -> FNUMBER .)
    AS              reduce using rule 205 (atom -> FNUMBER .)
    RBRACE          reduce using rule 205 (atom -> FNUMBER .)
    ELSE            reduce using rule 205 (atom -> FNUMBER .)


state 68

    (192) power -> NAME . trailerlist
    (193) power -> NAME . trailerlist STARSTAR factor
    (194) trailerlist -> .
    (195) trailerlist -> . trailer trailerlist
    (228) trailer -> . LPAREN RPAREN
    (229) trailer -> . LPAREN arglist RPAREN
    (230) trailer -> . LSQB short_slice RSQB
    (231) trailer -> . LSQB slice_list RSQB
    (232) trailer -> . DOT NAME

    STARSTAR        reduce using rule 194 (trailerlist -> .)
    STAR            reduce using rule 194 (trailerlist -> .)
    SLASH           reduce using rule 194 (trailerlist -> .)
    PERCENT         reduce using rule 194 (trailerlist -> .)
    SLASHSLASH      reduce using rule 194 (trailerlist -> .)
    PLUS            reduce using rule 194 (trailerlist -> .)
    MINUS           reduce using rule 194 (trailerlist -> .)
    LEFTSHIFT       reduce using rule 194 (trailerlist -> .)
    RIGHTSHIFT      reduce using rule 194 (trailerlist -> .)
    AMPER           reduce using rule 194 (trailerlist -> .)
    CIRCUMFLEX      reduce using rule 194 (trailerlist -> .)
    VBAR            reduce using rule 194 (trailerlist -> .)
    LESS            reduce using rule 194 (trailerlist -> .)
    GREATER         reduce using rule 194 (trailerlist -> .)
    EQEQUAL         reduce using rule 194 (trailerlist -> .)
    GREATEREQUAL    reduce using rule 194 (trailerlist -> .)
    LESSEQUAL       reduce using rule 194 (trailerlist -> .)
    NOTEQUAL        reduce using rule 194 (trailerlist -> .)
    IN              reduce using rule 194 (trailerlist -> .)
    NOT             reduce using rule 194 (trailerlist -> .)
    IS              reduce using rule 194 (trailerlist -> .)
    AND             reduce using rule 194 (trailerlist -> .)
    OR              reduce using rule 194 (trailerlist -> .)
    IF              reduce using rule 194 (trailerlist -> .)
    COMMA           reduce using rule 194 (trailerlist -> .)
    EQUAL           reduce using rule 194 (trailerlist -> .)
    PLUSEQUAL       reduce using rule 194 (trailerlist -> .)
    MINEQUAL        reduce using rule 194 (trailerlist -> .)
    STAREQUAL       reduce using rule 194 (trailerlist -> .)
    SLASHEQUAL      reduce using rule 194 (trailerlist -> .)
    PERCENTEQUAL    reduce using rule 194 (trailerlist -> .)
    STARSTAREQUAL   reduce using rule 194 (trailerlist -> .)
    SLASHSLASHEQUAL reduce using rule 194 (trailerlist -> .)
    NEWLINE         reduce using rule 194 (trailerlist -> .)
    SEMI            reduce using rule 194 (trailerlist -> .)
    BACKQUOTE       reduce using rule 194 (trailerlist -> .)
    AS              reduce using rule 194 (trailerlist -> .)
    COLON           reduce using rule 194 (trailerlist -> .)
    FOR             reduce using rule 194 (trailerlist -> .)
    RBRACE          reduce using rule 194 (trailerlist -> .)
    RSQB            reduce using rule 194 (trailerlist -> .)
    RPAREN          reduce using rule 194 (trailerlist -> .)
    ELSE            reduce using rule 194 (trailerlist -> .)
    LPAREN          shift and go to state 147
    LSQB            shift and go to state 148
    DOT             shift and go to state 146

    trailerlist                    shift and go to state 164
    trailer                        shift and go to state 149

state 69

    (206) atom -> HEXADECIMALNUMBER .

    LPAREN          reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    LSQB            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    DOT             reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    STARSTAR        reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    STAR            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    SLASH           reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    PERCENT         reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    SLASHSLASH      reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    PLUS            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    MINUS           reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    LEFTSHIFT       reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    RIGHTSHIFT      reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    AMPER           reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    CIRCUMFLEX      reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    VBAR            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    LESS            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    GREATER         reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    EQEQUAL         reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    GREATEREQUAL    reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    LESSEQUAL       reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    NOTEQUAL        reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    IN              reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    NOT             reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    IS              reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    AND             reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    OR              reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    IF              reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    COMMA           reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    BACKQUOTE       reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    EQUAL           reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    PLUSEQUAL       reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    MINEQUAL        reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    STAREQUAL       reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    SLASHEQUAL      reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    PERCENTEQUAL    reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    STARSTAREQUAL   reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    SLASHSLASHEQUAL reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    NEWLINE         reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    SEMI            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    RSQB            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    COLON           reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    RPAREN          reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    FOR             reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    AS              reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    RBRACE          reduce using rule 206 (atom -> HEXADECIMALNUMBER .)
    ELSE            reduce using rule 206 (atom -> HEXADECIMALNUMBER .)


state 70

    (150) comparison -> expr . compexprlist
    (151) compexprlist -> .
    (152) compexprlist -> . comp_op expr compexprlist
    (153) comp_op -> . LESS
    (154) comp_op -> . GREATER
    (155) comp_op -> . EQEQUAL
    (156) comp_op -> . GREATEREQUAL
    (157) comp_op -> . LESSEQUAL
    (158) comp_op -> . NOTEQUAL
    (159) comp_op -> . IN
    (160) comp_op -> . NOT IN
    (161) comp_op -> . IS
    (162) comp_op -> . IS NOT

    AND             reduce using rule 151 (compexprlist -> .)
    OR              reduce using rule 151 (compexprlist -> .)
    IF              reduce using rule 151 (compexprlist -> .)
    COMMA           reduce using rule 151 (compexprlist -> .)
    EQUAL           reduce using rule 151 (compexprlist -> .)
    PLUSEQUAL       reduce using rule 151 (compexprlist -> .)
    MINEQUAL        reduce using rule 151 (compexprlist -> .)
    STAREQUAL       reduce using rule 151 (compexprlist -> .)
    SLASHEQUAL      reduce using rule 151 (compexprlist -> .)
    PERCENTEQUAL    reduce using rule 151 (compexprlist -> .)
    STARSTAREQUAL   reduce using rule 151 (compexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 151 (compexprlist -> .)
    NEWLINE         reduce using rule 151 (compexprlist -> .)
    SEMI            reduce using rule 151 (compexprlist -> .)
    BACKQUOTE       reduce using rule 151 (compexprlist -> .)
    AS              reduce using rule 151 (compexprlist -> .)
    COLON           reduce using rule 151 (compexprlist -> .)
    FOR             reduce using rule 151 (compexprlist -> .)
    RBRACE          reduce using rule 151 (compexprlist -> .)
    RSQB            reduce using rule 151 (compexprlist -> .)
    RPAREN          reduce using rule 151 (compexprlist -> .)
    ELSE            reduce using rule 151 (compexprlist -> .)
    LESS            shift and go to state 168
    GREATER         shift and go to state 167
    EQEQUAL         shift and go to state 175
    GREATEREQUAL    shift and go to state 170
    LESSEQUAL       shift and go to state 171
    NOTEQUAL        shift and go to state 165
    IN              shift and go to state 173
    NOT             shift and go to state 172
    IS              shift and go to state 169

    compexprlist                   shift and go to state 174
    comp_op                        shift and go to state 166

state 71

    (65) break_stmt -> BREAK .

    NEWLINE         reduce using rule 65 (break_stmt -> BREAK .)
    SEMI            reduce using rule 65 (break_stmt -> BREAK .)


state 72

    (166) xor_expr -> and_expr . andexprlist
    (167) andexprlist -> .
    (168) andexprlist -> . CIRCUMFLEX and_expr andexprlist

    VBAR            reduce using rule 167 (andexprlist -> .)
    LESS            reduce using rule 167 (andexprlist -> .)
    GREATER         reduce using rule 167 (andexprlist -> .)
    EQEQUAL         reduce using rule 167 (andexprlist -> .)
    GREATEREQUAL    reduce using rule 167 (andexprlist -> .)
    LESSEQUAL       reduce using rule 167 (andexprlist -> .)
    NOTEQUAL        reduce using rule 167 (andexprlist -> .)
    IN              reduce using rule 167 (andexprlist -> .)
    NOT             reduce using rule 167 (andexprlist -> .)
    IS              reduce using rule 167 (andexprlist -> .)
    AND             reduce using rule 167 (andexprlist -> .)
    OR              reduce using rule 167 (andexprlist -> .)
    IF              reduce using rule 167 (andexprlist -> .)
    COMMA           reduce using rule 167 (andexprlist -> .)
    EQUAL           reduce using rule 167 (andexprlist -> .)
    PLUSEQUAL       reduce using rule 167 (andexprlist -> .)
    MINEQUAL        reduce using rule 167 (andexprlist -> .)
    STAREQUAL       reduce using rule 167 (andexprlist -> .)
    SLASHEQUAL      reduce using rule 167 (andexprlist -> .)
    PERCENTEQUAL    reduce using rule 167 (andexprlist -> .)
    STARSTAREQUAL   reduce using rule 167 (andexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 167 (andexprlist -> .)
    NEWLINE         reduce using rule 167 (andexprlist -> .)
    SEMI            reduce using rule 167 (andexprlist -> .)
    BACKQUOTE       reduce using rule 167 (andexprlist -> .)
    AS              reduce using rule 167 (andexprlist -> .)
    COLON           reduce using rule 167 (andexprlist -> .)
    FOR             reduce using rule 167 (andexprlist -> .)
    RBRACE          reduce using rule 167 (andexprlist -> .)
    RSQB            reduce using rule 167 (andexprlist -> .)
    RPAREN          reduce using rule 167 (andexprlist -> .)
    ELSE            reduce using rule 167 (andexprlist -> .)
    CIRCUMFLEX      shift and go to state 176

    andexprlist                    shift and go to state 177

state 73

    (64) flow_stmt -> yield_stmt .

    NEWLINE         reduce using rule 64 (flow_stmt -> yield_stmt .)
    SEMI            reduce using rule 64 (flow_stmt -> yield_stmt .)


state 74

    (106) assert_stmt -> ASSERT . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 178
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 75

    (145) and_test -> not_test . andtestlist
    (146) andtestlist -> .
    (147) andtestlist -> . AND not_test andtestlist

    OR              reduce using rule 146 (andtestlist -> .)
    IF              reduce using rule 146 (andtestlist -> .)
    COMMA           reduce using rule 146 (andtestlist -> .)
    EQUAL           reduce using rule 146 (andtestlist -> .)
    PLUSEQUAL       reduce using rule 146 (andtestlist -> .)
    MINEQUAL        reduce using rule 146 (andtestlist -> .)
    STAREQUAL       reduce using rule 146 (andtestlist -> .)
    SLASHEQUAL      reduce using rule 146 (andtestlist -> .)
    PERCENTEQUAL    reduce using rule 146 (andtestlist -> .)
    STARSTAREQUAL   reduce using rule 146 (andtestlist -> .)
    SLASHSLASHEQUAL reduce using rule 146 (andtestlist -> .)
    NEWLINE         reduce using rule 146 (andtestlist -> .)
    SEMI            reduce using rule 146 (andtestlist -> .)
    BACKQUOTE       reduce using rule 146 (andtestlist -> .)
    AS              reduce using rule 146 (andtestlist -> .)
    COLON           reduce using rule 146 (andtestlist -> .)
    FOR             reduce using rule 146 (andtestlist -> .)
    RBRACE          reduce using rule 146 (andtestlist -> .)
    RSQB            reduce using rule 146 (andtestlist -> .)
    RPAREN          reduce using rule 146 (andtestlist -> .)
    ELSE            reduce using rule 146 (andtestlist -> .)
    AND             shift and go to state 179

    andtestlist                    shift and go to state 180

state 76

    (60) flow_stmt -> break_stmt .

    NEWLINE         reduce using rule 60 (flow_stmt -> break_stmt .)
    SEMI            reduce using rule 60 (flow_stmt -> break_stmt .)


state 77

    (255) testlist -> test .
    (256) testlist -> test . COMMA
    (257) testlist -> test . COMMA testlist

    EQUAL           reduce using rule 255 (testlist -> test .)
    PLUSEQUAL       reduce using rule 255 (testlist -> test .)
    MINEQUAL        reduce using rule 255 (testlist -> test .)
    STAREQUAL       reduce using rule 255 (testlist -> test .)
    SLASHEQUAL      reduce using rule 255 (testlist -> test .)
    PERCENTEQUAL    reduce using rule 255 (testlist -> test .)
    STARSTAREQUAL   reduce using rule 255 (testlist -> test .)
    SLASHSLASHEQUAL reduce using rule 255 (testlist -> test .)
    NEWLINE         reduce using rule 255 (testlist -> test .)
    SEMI            reduce using rule 255 (testlist -> test .)
    COLON           reduce using rule 255 (testlist -> test .)
    RPAREN          reduce using rule 255 (testlist -> test .)
    RBRACE          reduce using rule 255 (testlist -> test .)
    RSQB            reduce using rule 255 (testlist -> test .)
    COMMA           shift and go to state 181


state 78

    (39) small_stmt -> global_stmt .

    NEWLINE         reduce using rule 39 (small_stmt -> global_stmt .)
    SEMI            reduce using rule 39 (small_stmt -> global_stmt .)


state 79

    (265) classdef -> CLASS . NAME COLON suite
    (266) classdef -> CLASS . NAME LPAREN RPAREN COLON suite
    (267) classdef -> CLASS . NAME LPAREN testlist RPAREN COLON suite

    NAME            shift and go to state 182


state 80

    (73) yield_stmt -> yield_expr .

    NEWLINE         reduce using rule 73 (yield_stmt -> yield_expr .)
    SEMI            reduce using rule 73 (yield_stmt -> yield_expr .)


state 81

    (74) yield_expr -> YIELD .
    (75) yield_expr -> YIELD . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         reduce using rule 74 (yield_expr -> YIELD .)
    SEMI            reduce using rule 74 (yield_expr -> YIELD .)
    RPAREN          reduce using rule 74 (yield_expr -> YIELD .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 183
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 82

    (5) decorator -> AT . module NEWLINE
    (6) decorator -> AT . module LPAREN RPAREN NEWLINE
    (7) decorator -> AT . module LPAREN arglist RPAREN NEWLINE
    (101) module -> . NAME
    (102) module -> . NAME DOT NAME

    NAME            shift and go to state 100

    module                         shift and go to state 184

state 83

    (196) atom -> LPAREN . RPAREN
    (197) atom -> LPAREN . testlist_comp RPAREN
    (198) atom -> LPAREN . yield_expr RPAREN
    (216) testlist_comp -> . testlist
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RPAREN          shift and go to state 186
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    testlist_comp                  shift and go to state 185
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    yield_expr                     shift and go to state 187
    power                          shift and go to state 33
    testlist                       shift and go to state 188
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 84

    (114) compound_stmt -> decorated .

    DEDENT          reduce using rule 114 (compound_stmt -> decorated .)
    IF              reduce using rule 114 (compound_stmt -> decorated .)
    FOR             reduce using rule 114 (compound_stmt -> decorated .)
    WHILE           reduce using rule 114 (compound_stmt -> decorated .)
    TRY             reduce using rule 114 (compound_stmt -> decorated .)
    DEF             reduce using rule 114 (compound_stmt -> decorated .)
    CLASS           reduce using rule 114 (compound_stmt -> decorated .)
    WITH            reduce using rule 114 (compound_stmt -> decorated .)
    PRINT           reduce using rule 114 (compound_stmt -> decorated .)
    PASS            reduce using rule 114 (compound_stmt -> decorated .)
    IMPORT          reduce using rule 114 (compound_stmt -> decorated .)
    FROM            reduce using rule 114 (compound_stmt -> decorated .)
    GLOBAL          reduce using rule 114 (compound_stmt -> decorated .)
    ASSERT          reduce using rule 114 (compound_stmt -> decorated .)
    DEL             reduce using rule 114 (compound_stmt -> decorated .)
    EXEC            reduce using rule 114 (compound_stmt -> decorated .)
    AT              reduce using rule 114 (compound_stmt -> decorated .)
    BREAK           reduce using rule 114 (compound_stmt -> decorated .)
    CONTINUE        reduce using rule 114 (compound_stmt -> decorated .)
    RETURN          reduce using rule 114 (compound_stmt -> decorated .)
    RAISE           reduce using rule 114 (compound_stmt -> decorated .)
    YIELD           reduce using rule 114 (compound_stmt -> decorated .)
    NOT             reduce using rule 114 (compound_stmt -> decorated .)
    PLUS            reduce using rule 114 (compound_stmt -> decorated .)
    MINUS           reduce using rule 114 (compound_stmt -> decorated .)
    TILDE           reduce using rule 114 (compound_stmt -> decorated .)
    NAME            reduce using rule 114 (compound_stmt -> decorated .)
    LPAREN          reduce using rule 114 (compound_stmt -> decorated .)
    LSQB            reduce using rule 114 (compound_stmt -> decorated .)
    LBRACE          reduce using rule 114 (compound_stmt -> decorated .)
    BACKQUOTE       reduce using rule 114 (compound_stmt -> decorated .)
    NUMBER          reduce using rule 114 (compound_stmt -> decorated .)
    FNUMBER         reduce using rule 114 (compound_stmt -> decorated .)
    HEXADECIMALNUMBER reduce using rule 114 (compound_stmt -> decorated .)
    OCTALNUMBER     reduce using rule 114 (compound_stmt -> decorated .)
    BINARYNUMBER    reduce using rule 114 (compound_stmt -> decorated .)
    STRING          reduce using rule 114 (compound_stmt -> decorated .)
    TRIPLESTRING    reduce using rule 114 (compound_stmt -> decorated .)
    ENDMARKER       reduce using rule 114 (compound_stmt -> decorated .)
    NEWLINE         reduce using rule 114 (compound_stmt -> decorated .)


state 85

    (115) if_stmt -> IF . test COLON suite elif_list
    (116) if_stmt -> IF . test COLON suite elif_list ELSE COLON suite
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 189
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 86

    (78) import_stmt -> FROM . relative_module IMPORT NAME identlist
    (79) import_stmt -> FROM . relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> FROM . relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> FROM . relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> FROM . module IMPORT STAR
    (93) relative_module -> . NAME
    (94) relative_module -> . NAME DOT NAME
    (95) relative_module -> . dotstar module
    (96) relative_module -> . DOT dotplus
    (101) module -> . NAME
    (102) module -> . NAME DOT NAME
    (99) dotstar -> .
    (100) dotstar -> . DOT dotstar

  ! shift/reduce conflict for NAME resolved as shift
    NAME            shift and go to state 191
    DOT             shift and go to state 194

  ! NAME            [ reduce using rule 99 (dotstar -> .) ]

    relative_module                shift and go to state 190
    module                         shift and go to state 192
    dotstar                        shift and go to state 193

state 87

    (41) small_stmt -> del_stmt .

    NEWLINE         reduce using rule 41 (small_stmt -> del_stmt .)
    SEMI            reduce using rule 41 (small_stmt -> del_stmt .)


state 88

    (109) compound_stmt -> while_stmt .

    DEDENT          reduce using rule 109 (compound_stmt -> while_stmt .)
    IF              reduce using rule 109 (compound_stmt -> while_stmt .)
    FOR             reduce using rule 109 (compound_stmt -> while_stmt .)
    WHILE           reduce using rule 109 (compound_stmt -> while_stmt .)
    TRY             reduce using rule 109 (compound_stmt -> while_stmt .)
    DEF             reduce using rule 109 (compound_stmt -> while_stmt .)
    CLASS           reduce using rule 109 (compound_stmt -> while_stmt .)
    WITH            reduce using rule 109 (compound_stmt -> while_stmt .)
    PRINT           reduce using rule 109 (compound_stmt -> while_stmt .)
    PASS            reduce using rule 109 (compound_stmt -> while_stmt .)
    IMPORT          reduce using rule 109 (compound_stmt -> while_stmt .)
    FROM            reduce using rule 109 (compound_stmt -> while_stmt .)
    GLOBAL          reduce using rule 109 (compound_stmt -> while_stmt .)
    ASSERT          reduce using rule 109 (compound_stmt -> while_stmt .)
    DEL             reduce using rule 109 (compound_stmt -> while_stmt .)
    EXEC            reduce using rule 109 (compound_stmt -> while_stmt .)
    AT              reduce using rule 109 (compound_stmt -> while_stmt .)
    BREAK           reduce using rule 109 (compound_stmt -> while_stmt .)
    CONTINUE        reduce using rule 109 (compound_stmt -> while_stmt .)
    RETURN          reduce using rule 109 (compound_stmt -> while_stmt .)
    RAISE           reduce using rule 109 (compound_stmt -> while_stmt .)
    YIELD           reduce using rule 109 (compound_stmt -> while_stmt .)
    NOT             reduce using rule 109 (compound_stmt -> while_stmt .)
    PLUS            reduce using rule 109 (compound_stmt -> while_stmt .)
    MINUS           reduce using rule 109 (compound_stmt -> while_stmt .)
    TILDE           reduce using rule 109 (compound_stmt -> while_stmt .)
    NAME            reduce using rule 109 (compound_stmt -> while_stmt .)
    LPAREN          reduce using rule 109 (compound_stmt -> while_stmt .)
    LSQB            reduce using rule 109 (compound_stmt -> while_stmt .)
    LBRACE          reduce using rule 109 (compound_stmt -> while_stmt .)
    BACKQUOTE       reduce using rule 109 (compound_stmt -> while_stmt .)
    NUMBER          reduce using rule 109 (compound_stmt -> while_stmt .)
    FNUMBER         reduce using rule 109 (compound_stmt -> while_stmt .)
    HEXADECIMALNUMBER reduce using rule 109 (compound_stmt -> while_stmt .)
    OCTALNUMBER     reduce using rule 109 (compound_stmt -> while_stmt .)
    BINARYNUMBER    reduce using rule 109 (compound_stmt -> while_stmt .)
    STRING          reduce using rule 109 (compound_stmt -> while_stmt .)
    TRIPLESTRING    reduce using rule 109 (compound_stmt -> while_stmt .)
    ENDMARKER       reduce using rule 109 (compound_stmt -> while_stmt .)
    NEWLINE         reduce using rule 109 (compound_stmt -> while_stmt .)


state 89

    (203) atom -> BACKQUOTE testlist1 . BACKQUOTE

    BACKQUOTE       shift and go to state 195


state 90

    (288) testlist1 -> test .
    (289) testlist1 -> test . COMMA testlist1

    BACKQUOTE       reduce using rule 288 (testlist1 -> test .)
    COMMA           shift and go to state 196


state 91

    (133) with_stmt -> WITH with_item . with_item_list COLON suite
    (134) with_item_list -> .
    (135) with_item_list -> . COMMA with_item with_item_list

    COLON           reduce using rule 134 (with_item_list -> .)
    COMMA           shift and go to state 197

    with_item_list                 shift and go to state 198

state 92

    (136) with_item -> test .
    (137) with_item -> test . AS target

    COMMA           reduce using rule 136 (with_item -> test .)
    COLON           reduce using rule 136 (with_item -> test .)
    AS              shift and go to state 199


state 93

    (188) factor -> MINUS factor .

    STAR            reduce using rule 188 (factor -> MINUS factor .)
    SLASH           reduce using rule 188 (factor -> MINUS factor .)
    PERCENT         reduce using rule 188 (factor -> MINUS factor .)
    SLASHSLASH      reduce using rule 188 (factor -> MINUS factor .)
    PLUS            reduce using rule 188 (factor -> MINUS factor .)
    MINUS           reduce using rule 188 (factor -> MINUS factor .)
    LEFTSHIFT       reduce using rule 188 (factor -> MINUS factor .)
    RIGHTSHIFT      reduce using rule 188 (factor -> MINUS factor .)
    AMPER           reduce using rule 188 (factor -> MINUS factor .)
    CIRCUMFLEX      reduce using rule 188 (factor -> MINUS factor .)
    VBAR            reduce using rule 188 (factor -> MINUS factor .)
    LESS            reduce using rule 188 (factor -> MINUS factor .)
    GREATER         reduce using rule 188 (factor -> MINUS factor .)
    EQEQUAL         reduce using rule 188 (factor -> MINUS factor .)
    GREATEREQUAL    reduce using rule 188 (factor -> MINUS factor .)
    LESSEQUAL       reduce using rule 188 (factor -> MINUS factor .)
    NOTEQUAL        reduce using rule 188 (factor -> MINUS factor .)
    IN              reduce using rule 188 (factor -> MINUS factor .)
    NOT             reduce using rule 188 (factor -> MINUS factor .)
    IS              reduce using rule 188 (factor -> MINUS factor .)
    AND             reduce using rule 188 (factor -> MINUS factor .)
    OR              reduce using rule 188 (factor -> MINUS factor .)
    IF              reduce using rule 188 (factor -> MINUS factor .)
    COMMA           reduce using rule 188 (factor -> MINUS factor .)
    EQUAL           reduce using rule 188 (factor -> MINUS factor .)
    PLUSEQUAL       reduce using rule 188 (factor -> MINUS factor .)
    MINEQUAL        reduce using rule 188 (factor -> MINUS factor .)
    STAREQUAL       reduce using rule 188 (factor -> MINUS factor .)
    SLASHEQUAL      reduce using rule 188 (factor -> MINUS factor .)
    PERCENTEQUAL    reduce using rule 188 (factor -> MINUS factor .)
    STARSTAREQUAL   reduce using rule 188 (factor -> MINUS factor .)
    SLASHSLASHEQUAL reduce using rule 188 (factor -> MINUS factor .)
    NEWLINE         reduce using rule 188 (factor -> MINUS factor .)
    SEMI            reduce using rule 188 (factor -> MINUS factor .)
    FOR             reduce using rule 188 (factor -> MINUS factor .)
    RSQB            reduce using rule 188 (factor -> MINUS factor .)
    BACKQUOTE       reduce using rule 188 (factor -> MINUS factor .)
    AS              reduce using rule 188 (factor -> MINUS factor .)
    COLON           reduce using rule 188 (factor -> MINUS factor .)
    RBRACE          reduce using rule 188 (factor -> MINUS factor .)
    RPAREN          reduce using rule 188 (factor -> MINUS factor .)
    ELSE            reduce using rule 188 (factor -> MINUS factor .)


state 94

    (187) factor -> PLUS factor .

    STAR            reduce using rule 187 (factor -> PLUS factor .)
    SLASH           reduce using rule 187 (factor -> PLUS factor .)
    PERCENT         reduce using rule 187 (factor -> PLUS factor .)
    SLASHSLASH      reduce using rule 187 (factor -> PLUS factor .)
    PLUS            reduce using rule 187 (factor -> PLUS factor .)
    MINUS           reduce using rule 187 (factor -> PLUS factor .)
    LEFTSHIFT       reduce using rule 187 (factor -> PLUS factor .)
    RIGHTSHIFT      reduce using rule 187 (factor -> PLUS factor .)
    AMPER           reduce using rule 187 (factor -> PLUS factor .)
    CIRCUMFLEX      reduce using rule 187 (factor -> PLUS factor .)
    VBAR            reduce using rule 187 (factor -> PLUS factor .)
    LESS            reduce using rule 187 (factor -> PLUS factor .)
    GREATER         reduce using rule 187 (factor -> PLUS factor .)
    EQEQUAL         reduce using rule 187 (factor -> PLUS factor .)
    GREATEREQUAL    reduce using rule 187 (factor -> PLUS factor .)
    LESSEQUAL       reduce using rule 187 (factor -> PLUS factor .)
    NOTEQUAL        reduce using rule 187 (factor -> PLUS factor .)
    IN              reduce using rule 187 (factor -> PLUS factor .)
    NOT             reduce using rule 187 (factor -> PLUS factor .)
    IS              reduce using rule 187 (factor -> PLUS factor .)
    AND             reduce using rule 187 (factor -> PLUS factor .)
    OR              reduce using rule 187 (factor -> PLUS factor .)
    IF              reduce using rule 187 (factor -> PLUS factor .)
    COMMA           reduce using rule 187 (factor -> PLUS factor .)
    EQUAL           reduce using rule 187 (factor -> PLUS factor .)
    PLUSEQUAL       reduce using rule 187 (factor -> PLUS factor .)
    MINEQUAL        reduce using rule 187 (factor -> PLUS factor .)
    STAREQUAL       reduce using rule 187 (factor -> PLUS factor .)
    SLASHEQUAL      reduce using rule 187 (factor -> PLUS factor .)
    PERCENTEQUAL    reduce using rule 187 (factor -> PLUS factor .)
    STARSTAREQUAL   reduce using rule 187 (factor -> PLUS factor .)
    SLASHSLASHEQUAL reduce using rule 187 (factor -> PLUS factor .)
    NEWLINE         reduce using rule 187 (factor -> PLUS factor .)
    SEMI            reduce using rule 187 (factor -> PLUS factor .)
    FOR             reduce using rule 187 (factor -> PLUS factor .)
    RSQB            reduce using rule 187 (factor -> PLUS factor .)
    BACKQUOTE       reduce using rule 187 (factor -> PLUS factor .)
    AS              reduce using rule 187 (factor -> PLUS factor .)
    COLON           reduce using rule 187 (factor -> PLUS factor .)
    RBRACE          reduce using rule 187 (factor -> PLUS factor .)
    RPAREN          reduce using rule 187 (factor -> PLUS factor .)
    ELSE            reduce using rule 187 (factor -> PLUS factor .)


state 95

    (185) factorlist -> SLASHSLASH . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 200
    stringlist                     shift and go to state 35

state 96

    (182) factorlist -> STAR . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 201
    stringlist                     shift and go to state 35

state 97

    (184) factorlist -> PERCENT . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 202
    stringlist                     shift and go to state 35

state 98

    (180) term -> factor factorlist .

    PLUS            reduce using rule 180 (term -> factor factorlist .)
    MINUS           reduce using rule 180 (term -> factor factorlist .)
    LEFTSHIFT       reduce using rule 180 (term -> factor factorlist .)
    RIGHTSHIFT      reduce using rule 180 (term -> factor factorlist .)
    AMPER           reduce using rule 180 (term -> factor factorlist .)
    CIRCUMFLEX      reduce using rule 180 (term -> factor factorlist .)
    VBAR            reduce using rule 180 (term -> factor factorlist .)
    LESS            reduce using rule 180 (term -> factor factorlist .)
    GREATER         reduce using rule 180 (term -> factor factorlist .)
    EQEQUAL         reduce using rule 180 (term -> factor factorlist .)
    GREATEREQUAL    reduce using rule 180 (term -> factor factorlist .)
    LESSEQUAL       reduce using rule 180 (term -> factor factorlist .)
    NOTEQUAL        reduce using rule 180 (term -> factor factorlist .)
    IN              reduce using rule 180 (term -> factor factorlist .)
    NOT             reduce using rule 180 (term -> factor factorlist .)
    IS              reduce using rule 180 (term -> factor factorlist .)
    AND             reduce using rule 180 (term -> factor factorlist .)
    OR              reduce using rule 180 (term -> factor factorlist .)
    IF              reduce using rule 180 (term -> factor factorlist .)
    EQUAL           reduce using rule 180 (term -> factor factorlist .)
    FOR             reduce using rule 180 (term -> factor factorlist .)
    COMMA           reduce using rule 180 (term -> factor factorlist .)
    RPAREN          reduce using rule 180 (term -> factor factorlist .)
    PLUSEQUAL       reduce using rule 180 (term -> factor factorlist .)
    MINEQUAL        reduce using rule 180 (term -> factor factorlist .)
    STAREQUAL       reduce using rule 180 (term -> factor factorlist .)
    SLASHEQUAL      reduce using rule 180 (term -> factor factorlist .)
    PERCENTEQUAL    reduce using rule 180 (term -> factor factorlist .)
    STARSTAREQUAL   reduce using rule 180 (term -> factor factorlist .)
    SLASHSLASHEQUAL reduce using rule 180 (term -> factor factorlist .)
    NEWLINE         reduce using rule 180 (term -> factor factorlist .)
    SEMI            reduce using rule 180 (term -> factor factorlist .)
    COLON           reduce using rule 180 (term -> factor factorlist .)
    RSQB            reduce using rule 180 (term -> factor factorlist .)
    RBRACE          reduce using rule 180 (term -> factor factorlist .)
    BACKQUOTE       reduce using rule 180 (term -> factor factorlist .)
    AS              reduce using rule 180 (term -> factor factorlist .)
    ELSE            reduce using rule 180 (term -> factor factorlist .)


state 99

    (183) factorlist -> SLASH . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 203
    stringlist                     shift and go to state 35

state 100

    (101) module -> NAME .
    (102) module -> NAME . DOT NAME

    AS              reduce using rule 101 (module -> NAME .)
    COMMA           reduce using rule 101 (module -> NAME .)
    NEWLINE         reduce using rule 101 (module -> NAME .)
    SEMI            reduce using rule 101 (module -> NAME .)
    LPAREN          reduce using rule 101 (module -> NAME .)
    IMPORT          reduce using rule 101 (module -> NAME .)
    DOT             shift and go to state 204


state 101

    (76) import_stmt -> IMPORT module . modulelist
    (77) import_stmt -> IMPORT module . AS NAME modulelist
    (83) modulelist -> .
    (84) modulelist -> . COMMA module modulelist
    (85) modulelist -> . COMMA module AS NAME modulelist

    AS              shift and go to state 205
    NEWLINE         reduce using rule 83 (modulelist -> .)
    SEMI            reduce using rule 83 (modulelist -> .)
    COMMA           shift and go to state 206

    modulelist                     shift and go to state 207

state 102

    (57) exec_stmt -> EXEC expr .
    (58) exec_stmt -> EXEC expr . IN testlist

    NEWLINE         reduce using rule 57 (exec_stmt -> EXEC expr .)
    SEMI            reduce using rule 57 (exec_stmt -> EXEC expr .)
    IN              shift and go to state 208


state 103

    (50) augassign -> SLASHEQUAL .

    NOT             reduce using rule 50 (augassign -> SLASHEQUAL .)
    PLUS            reduce using rule 50 (augassign -> SLASHEQUAL .)
    MINUS           reduce using rule 50 (augassign -> SLASHEQUAL .)
    TILDE           reduce using rule 50 (augassign -> SLASHEQUAL .)
    NAME            reduce using rule 50 (augassign -> SLASHEQUAL .)
    LPAREN          reduce using rule 50 (augassign -> SLASHEQUAL .)
    LSQB            reduce using rule 50 (augassign -> SLASHEQUAL .)
    LBRACE          reduce using rule 50 (augassign -> SLASHEQUAL .)
    BACKQUOTE       reduce using rule 50 (augassign -> SLASHEQUAL .)
    NUMBER          reduce using rule 50 (augassign -> SLASHEQUAL .)
    FNUMBER         reduce using rule 50 (augassign -> SLASHEQUAL .)
    HEXADECIMALNUMBER reduce using rule 50 (augassign -> SLASHEQUAL .)
    OCTALNUMBER     reduce using rule 50 (augassign -> SLASHEQUAL .)
    BINARYNUMBER    reduce using rule 50 (augassign -> SLASHEQUAL .)
    STRING          reduce using rule 50 (augassign -> SLASHEQUAL .)
    TRIPLESTRING    reduce using rule 50 (augassign -> SLASHEQUAL .)


state 104

    (48) augassign -> MINEQUAL .

    NOT             reduce using rule 48 (augassign -> MINEQUAL .)
    PLUS            reduce using rule 48 (augassign -> MINEQUAL .)
    MINUS           reduce using rule 48 (augassign -> MINEQUAL .)
    TILDE           reduce using rule 48 (augassign -> MINEQUAL .)
    NAME            reduce using rule 48 (augassign -> MINEQUAL .)
    LPAREN          reduce using rule 48 (augassign -> MINEQUAL .)
    LSQB            reduce using rule 48 (augassign -> MINEQUAL .)
    LBRACE          reduce using rule 48 (augassign -> MINEQUAL .)
    BACKQUOTE       reduce using rule 48 (augassign -> MINEQUAL .)
    NUMBER          reduce using rule 48 (augassign -> MINEQUAL .)
    FNUMBER         reduce using rule 48 (augassign -> MINEQUAL .)
    HEXADECIMALNUMBER reduce using rule 48 (augassign -> MINEQUAL .)
    OCTALNUMBER     reduce using rule 48 (augassign -> MINEQUAL .)
    BINARYNUMBER    reduce using rule 48 (augassign -> MINEQUAL .)
    STRING          reduce using rule 48 (augassign -> MINEQUAL .)
    TRIPLESTRING    reduce using rule 48 (augassign -> MINEQUAL .)


state 105

    (52) augassign -> STARSTAREQUAL .

    NOT             reduce using rule 52 (augassign -> STARSTAREQUAL .)
    PLUS            reduce using rule 52 (augassign -> STARSTAREQUAL .)
    MINUS           reduce using rule 52 (augassign -> STARSTAREQUAL .)
    TILDE           reduce using rule 52 (augassign -> STARSTAREQUAL .)
    NAME            reduce using rule 52 (augassign -> STARSTAREQUAL .)
    LPAREN          reduce using rule 52 (augassign -> STARSTAREQUAL .)
    LSQB            reduce using rule 52 (augassign -> STARSTAREQUAL .)
    LBRACE          reduce using rule 52 (augassign -> STARSTAREQUAL .)
    BACKQUOTE       reduce using rule 52 (augassign -> STARSTAREQUAL .)
    NUMBER          reduce using rule 52 (augassign -> STARSTAREQUAL .)
    FNUMBER         reduce using rule 52 (augassign -> STARSTAREQUAL .)
    HEXADECIMALNUMBER reduce using rule 52 (augassign -> STARSTAREQUAL .)
    OCTALNUMBER     reduce using rule 52 (augassign -> STARSTAREQUAL .)
    BINARYNUMBER    reduce using rule 52 (augassign -> STARSTAREQUAL .)
    STRING          reduce using rule 52 (augassign -> STARSTAREQUAL .)
    TRIPLESTRING    reduce using rule 52 (augassign -> STARSTAREQUAL .)


state 106

    (49) augassign -> STAREQUAL .

    NOT             reduce using rule 49 (augassign -> STAREQUAL .)
    PLUS            reduce using rule 49 (augassign -> STAREQUAL .)
    MINUS           reduce using rule 49 (augassign -> STAREQUAL .)
    TILDE           reduce using rule 49 (augassign -> STAREQUAL .)
    NAME            reduce using rule 49 (augassign -> STAREQUAL .)
    LPAREN          reduce using rule 49 (augassign -> STAREQUAL .)
    LSQB            reduce using rule 49 (augassign -> STAREQUAL .)
    LBRACE          reduce using rule 49 (augassign -> STAREQUAL .)
    BACKQUOTE       reduce using rule 49 (augassign -> STAREQUAL .)
    NUMBER          reduce using rule 49 (augassign -> STAREQUAL .)
    FNUMBER         reduce using rule 49 (augassign -> STAREQUAL .)
    HEXADECIMALNUMBER reduce using rule 49 (augassign -> STAREQUAL .)
    OCTALNUMBER     reduce using rule 49 (augassign -> STAREQUAL .)
    BINARYNUMBER    reduce using rule 49 (augassign -> STAREQUAL .)
    STRING          reduce using rule 49 (augassign -> STAREQUAL .)
    TRIPLESTRING    reduce using rule 49 (augassign -> STAREQUAL .)


state 107

    (43) aug_stmt -> testlist augassign . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 209
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 108

    (46) assn_stmt -> testlist EQUAL . assn_stmt
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    assn_stmt                      shift and go to state 210
    power                          shift and go to state 33
    testlist                       shift and go to state 211
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 109

    (47) augassign -> PLUSEQUAL .

    NOT             reduce using rule 47 (augassign -> PLUSEQUAL .)
    PLUS            reduce using rule 47 (augassign -> PLUSEQUAL .)
    MINUS           reduce using rule 47 (augassign -> PLUSEQUAL .)
    TILDE           reduce using rule 47 (augassign -> PLUSEQUAL .)
    NAME            reduce using rule 47 (augassign -> PLUSEQUAL .)
    LPAREN          reduce using rule 47 (augassign -> PLUSEQUAL .)
    LSQB            reduce using rule 47 (augassign -> PLUSEQUAL .)
    LBRACE          reduce using rule 47 (augassign -> PLUSEQUAL .)
    BACKQUOTE       reduce using rule 47 (augassign -> PLUSEQUAL .)
    NUMBER          reduce using rule 47 (augassign -> PLUSEQUAL .)
    FNUMBER         reduce using rule 47 (augassign -> PLUSEQUAL .)
    HEXADECIMALNUMBER reduce using rule 47 (augassign -> PLUSEQUAL .)
    OCTALNUMBER     reduce using rule 47 (augassign -> PLUSEQUAL .)
    BINARYNUMBER    reduce using rule 47 (augassign -> PLUSEQUAL .)
    STRING          reduce using rule 47 (augassign -> PLUSEQUAL .)
    TRIPLESTRING    reduce using rule 47 (augassign -> PLUSEQUAL .)


state 110

    (51) augassign -> PERCENTEQUAL .

    NOT             reduce using rule 51 (augassign -> PERCENTEQUAL .)
    PLUS            reduce using rule 51 (augassign -> PERCENTEQUAL .)
    MINUS           reduce using rule 51 (augassign -> PERCENTEQUAL .)
    TILDE           reduce using rule 51 (augassign -> PERCENTEQUAL .)
    NAME            reduce using rule 51 (augassign -> PERCENTEQUAL .)
    LPAREN          reduce using rule 51 (augassign -> PERCENTEQUAL .)
    LSQB            reduce using rule 51 (augassign -> PERCENTEQUAL .)
    LBRACE          reduce using rule 51 (augassign -> PERCENTEQUAL .)
    BACKQUOTE       reduce using rule 51 (augassign -> PERCENTEQUAL .)
    NUMBER          reduce using rule 51 (augassign -> PERCENTEQUAL .)
    FNUMBER         reduce using rule 51 (augassign -> PERCENTEQUAL .)
    HEXADECIMALNUMBER reduce using rule 51 (augassign -> PERCENTEQUAL .)
    OCTALNUMBER     reduce using rule 51 (augassign -> PERCENTEQUAL .)
    BINARYNUMBER    reduce using rule 51 (augassign -> PERCENTEQUAL .)
    STRING          reduce using rule 51 (augassign -> PERCENTEQUAL .)
    TRIPLESTRING    reduce using rule 51 (augassign -> PERCENTEQUAL .)


state 111

    (53) augassign -> SLASHSLASHEQUAL .

    NOT             reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    PLUS            reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    MINUS           reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    TILDE           reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    NAME            reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    LPAREN          reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    LSQB            reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    LBRACE          reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    BACKQUOTE       reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    NUMBER          reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    FNUMBER         reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    HEXADECIMALNUMBER reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    OCTALNUMBER     reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    BINARYNUMBER    reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    STRING          reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)
    TRIPLESTRING    reduce using rule 53 (augassign -> SLASHSLASHEQUAL .)


state 112

    (9) decorators -> decorator decorators .

    CLASS           reduce using rule 9 (decorators -> decorator decorators .)
    DEF             reduce using rule 9 (decorators -> decorator decorators .)


state 113

    (178) termlist -> PLUS . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    term                           shift and go to state 212
    power                          shift and go to state 33
    factor                         shift and go to state 12
    atom                           shift and go to state 50
    stringlist                     shift and go to state 35

state 114

    (176) arith_expr -> term termlist .

    LEFTSHIFT       reduce using rule 176 (arith_expr -> term termlist .)
    RIGHTSHIFT      reduce using rule 176 (arith_expr -> term termlist .)
    AMPER           reduce using rule 176 (arith_expr -> term termlist .)
    CIRCUMFLEX      reduce using rule 176 (arith_expr -> term termlist .)
    VBAR            reduce using rule 176 (arith_expr -> term termlist .)
    LESS            reduce using rule 176 (arith_expr -> term termlist .)
    GREATER         reduce using rule 176 (arith_expr -> term termlist .)
    EQEQUAL         reduce using rule 176 (arith_expr -> term termlist .)
    GREATEREQUAL    reduce using rule 176 (arith_expr -> term termlist .)
    LESSEQUAL       reduce using rule 176 (arith_expr -> term termlist .)
    NOTEQUAL        reduce using rule 176 (arith_expr -> term termlist .)
    IN              reduce using rule 176 (arith_expr -> term termlist .)
    NOT             reduce using rule 176 (arith_expr -> term termlist .)
    IS              reduce using rule 176 (arith_expr -> term termlist .)
    AND             reduce using rule 176 (arith_expr -> term termlist .)
    OR              reduce using rule 176 (arith_expr -> term termlist .)
    IF              reduce using rule 176 (arith_expr -> term termlist .)
    COMMA           reduce using rule 176 (arith_expr -> term termlist .)
    EQUAL           reduce using rule 176 (arith_expr -> term termlist .)
    PLUSEQUAL       reduce using rule 176 (arith_expr -> term termlist .)
    MINEQUAL        reduce using rule 176 (arith_expr -> term termlist .)
    STAREQUAL       reduce using rule 176 (arith_expr -> term termlist .)
    SLASHEQUAL      reduce using rule 176 (arith_expr -> term termlist .)
    PERCENTEQUAL    reduce using rule 176 (arith_expr -> term termlist .)
    STARSTAREQUAL   reduce using rule 176 (arith_expr -> term termlist .)
    SLASHSLASHEQUAL reduce using rule 176 (arith_expr -> term termlist .)
    NEWLINE         reduce using rule 176 (arith_expr -> term termlist .)
    SEMI            reduce using rule 176 (arith_expr -> term termlist .)
    BACKQUOTE       reduce using rule 176 (arith_expr -> term termlist .)
    AS              reduce using rule 176 (arith_expr -> term termlist .)
    COLON           reduce using rule 176 (arith_expr -> term termlist .)
    FOR             reduce using rule 176 (arith_expr -> term termlist .)
    RBRACE          reduce using rule 176 (arith_expr -> term termlist .)
    RSQB            reduce using rule 176 (arith_expr -> term termlist .)
    RPAREN          reduce using rule 176 (arith_expr -> term termlist .)
    ELSE            reduce using rule 176 (arith_expr -> term termlist .)


state 115

    (179) termlist -> MINUS . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    term                           shift and go to state 213
    power                          shift and go to state 33
    factor                         shift and go to state 12
    atom                           shift and go to state 50
    stringlist                     shift and go to state 35

state 116

    (141) test -> or_test IF . or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 214

state 117

    (56) del_stmt -> DEL exprlist .

    NEWLINE         reduce using rule 56 (del_stmt -> DEL exprlist .)
    SEMI            reduce using rule 56 (del_stmt -> DEL exprlist .)


state 118

    (252) exprlist -> expr .
    (253) exprlist -> expr . COMMA
    (254) exprlist -> expr . COMMA exprlist

    NEWLINE         reduce using rule 252 (exprlist -> expr .)
    SEMI            reduce using rule 252 (exprlist -> expr .)
    COMMA           shift and go to state 215


state 119

    (55) print_stmt -> PRINT testlist .

    NEWLINE         reduce using rule 55 (print_stmt -> PRINT testlist .)
    SEMI            reduce using rule 55 (print_stmt -> PRINT testlist .)


state 120

    (12) funcdef -> DEF NAME . parameters COLON suite
    (13) parameters -> . LPAREN varargslist RPAREN

    LPAREN          shift and go to state 217

    parameters                     shift and go to state 216

state 121

    (211) stringlist -> STRING stringlist .

    LPAREN          reduce using rule 211 (stringlist -> STRING stringlist .)
    LSQB            reduce using rule 211 (stringlist -> STRING stringlist .)
    DOT             reduce using rule 211 (stringlist -> STRING stringlist .)
    STARSTAR        reduce using rule 211 (stringlist -> STRING stringlist .)
    STAR            reduce using rule 211 (stringlist -> STRING stringlist .)
    SLASH           reduce using rule 211 (stringlist -> STRING stringlist .)
    PERCENT         reduce using rule 211 (stringlist -> STRING stringlist .)
    SLASHSLASH      reduce using rule 211 (stringlist -> STRING stringlist .)
    PLUS            reduce using rule 211 (stringlist -> STRING stringlist .)
    MINUS           reduce using rule 211 (stringlist -> STRING stringlist .)
    LEFTSHIFT       reduce using rule 211 (stringlist -> STRING stringlist .)
    RIGHTSHIFT      reduce using rule 211 (stringlist -> STRING stringlist .)
    AMPER           reduce using rule 211 (stringlist -> STRING stringlist .)
    CIRCUMFLEX      reduce using rule 211 (stringlist -> STRING stringlist .)
    VBAR            reduce using rule 211 (stringlist -> STRING stringlist .)
    LESS            reduce using rule 211 (stringlist -> STRING stringlist .)
    GREATER         reduce using rule 211 (stringlist -> STRING stringlist .)
    EQEQUAL         reduce using rule 211 (stringlist -> STRING stringlist .)
    GREATEREQUAL    reduce using rule 211 (stringlist -> STRING stringlist .)
    LESSEQUAL       reduce using rule 211 (stringlist -> STRING stringlist .)
    NOTEQUAL        reduce using rule 211 (stringlist -> STRING stringlist .)
    IN              reduce using rule 211 (stringlist -> STRING stringlist .)
    NOT             reduce using rule 211 (stringlist -> STRING stringlist .)
    IS              reduce using rule 211 (stringlist -> STRING stringlist .)
    AND             reduce using rule 211 (stringlist -> STRING stringlist .)
    OR              reduce using rule 211 (stringlist -> STRING stringlist .)
    FOR             reduce using rule 211 (stringlist -> STRING stringlist .)
    IF              reduce using rule 211 (stringlist -> STRING stringlist .)
    RSQB            reduce using rule 211 (stringlist -> STRING stringlist .)
    COMMA           reduce using rule 211 (stringlist -> STRING stringlist .)
    RPAREN          reduce using rule 211 (stringlist -> STRING stringlist .)
    EQUAL           reduce using rule 211 (stringlist -> STRING stringlist .)
    PLUSEQUAL       reduce using rule 211 (stringlist -> STRING stringlist .)
    MINEQUAL        reduce using rule 211 (stringlist -> STRING stringlist .)
    STAREQUAL       reduce using rule 211 (stringlist -> STRING stringlist .)
    SLASHEQUAL      reduce using rule 211 (stringlist -> STRING stringlist .)
    PERCENTEQUAL    reduce using rule 211 (stringlist -> STRING stringlist .)
    STARSTAREQUAL   reduce using rule 211 (stringlist -> STRING stringlist .)
    SLASHSLASHEQUAL reduce using rule 211 (stringlist -> STRING stringlist .)
    NEWLINE         reduce using rule 211 (stringlist -> STRING stringlist .)
    SEMI            reduce using rule 211 (stringlist -> STRING stringlist .)
    BACKQUOTE       reduce using rule 211 (stringlist -> STRING stringlist .)
    AS              reduce using rule 211 (stringlist -> STRING stringlist .)
    COLON           reduce using rule 211 (stringlist -> STRING stringlist .)
    RBRACE          reduce using rule 211 (stringlist -> STRING stringlist .)
    ELSE            reduce using rule 211 (stringlist -> STRING stringlist .)


state 122

    (169) and_expr -> shift_expr shiftexprlist .

    CIRCUMFLEX      reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    VBAR            reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    LESS            reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    GREATER         reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    EQEQUAL         reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    GREATEREQUAL    reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    LESSEQUAL       reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    NOTEQUAL        reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    IN              reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    NOT             reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    IS              reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    AND             reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    OR              reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    IF              reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    COLON           reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    COMMA           reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    NEWLINE         reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    SEMI            reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    FOR             reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    RSQB            reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    EQUAL           reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    PLUSEQUAL       reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    MINEQUAL        reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    STAREQUAL       reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    SLASHEQUAL      reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    PERCENTEQUAL    reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    STARSTAREQUAL   reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    SLASHSLASHEQUAL reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    RPAREN          reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    BACKQUOTE       reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    AS              reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    RBRACE          reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)
    ELSE            reduce using rule 169 (and_expr -> shift_expr shiftexprlist .)


state 123

    (171) shiftexprlist -> AMPER . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    arith_expr                     shift and go to state 49
    atom                           shift and go to state 50
    shift_expr                     shift and go to state 218
    term                           shift and go to state 22
    stringlist                     shift and go to state 35
    power                          shift and go to state 33
    factor                         shift and go to state 12

state 124

    (10) decorated -> decorators classdef .

    DEDENT          reduce using rule 10 (decorated -> decorators classdef .)
    IF              reduce using rule 10 (decorated -> decorators classdef .)
    FOR             reduce using rule 10 (decorated -> decorators classdef .)
    WHILE           reduce using rule 10 (decorated -> decorators classdef .)
    TRY             reduce using rule 10 (decorated -> decorators classdef .)
    DEF             reduce using rule 10 (decorated -> decorators classdef .)
    CLASS           reduce using rule 10 (decorated -> decorators classdef .)
    WITH            reduce using rule 10 (decorated -> decorators classdef .)
    PRINT           reduce using rule 10 (decorated -> decorators classdef .)
    PASS            reduce using rule 10 (decorated -> decorators classdef .)
    IMPORT          reduce using rule 10 (decorated -> decorators classdef .)
    FROM            reduce using rule 10 (decorated -> decorators classdef .)
    GLOBAL          reduce using rule 10 (decorated -> decorators classdef .)
    ASSERT          reduce using rule 10 (decorated -> decorators classdef .)
    DEL             reduce using rule 10 (decorated -> decorators classdef .)
    EXEC            reduce using rule 10 (decorated -> decorators classdef .)
    AT              reduce using rule 10 (decorated -> decorators classdef .)
    BREAK           reduce using rule 10 (decorated -> decorators classdef .)
    CONTINUE        reduce using rule 10 (decorated -> decorators classdef .)
    RETURN          reduce using rule 10 (decorated -> decorators classdef .)
    RAISE           reduce using rule 10 (decorated -> decorators classdef .)
    YIELD           reduce using rule 10 (decorated -> decorators classdef .)
    NOT             reduce using rule 10 (decorated -> decorators classdef .)
    PLUS            reduce using rule 10 (decorated -> decorators classdef .)
    MINUS           reduce using rule 10 (decorated -> decorators classdef .)
    TILDE           reduce using rule 10 (decorated -> decorators classdef .)
    NAME            reduce using rule 10 (decorated -> decorators classdef .)
    LPAREN          reduce using rule 10 (decorated -> decorators classdef .)
    LSQB            reduce using rule 10 (decorated -> decorators classdef .)
    LBRACE          reduce using rule 10 (decorated -> decorators classdef .)
    BACKQUOTE       reduce using rule 10 (decorated -> decorators classdef .)
    NUMBER          reduce using rule 10 (decorated -> decorators classdef .)
    FNUMBER         reduce using rule 10 (decorated -> decorators classdef .)
    HEXADECIMALNUMBER reduce using rule 10 (decorated -> decorators classdef .)
    OCTALNUMBER     reduce using rule 10 (decorated -> decorators classdef .)
    BINARYNUMBER    reduce using rule 10 (decorated -> decorators classdef .)
    STRING          reduce using rule 10 (decorated -> decorators classdef .)
    TRIPLESTRING    reduce using rule 10 (decorated -> decorators classdef .)
    ENDMARKER       reduce using rule 10 (decorated -> decorators classdef .)
    NEWLINE         reduce using rule 10 (decorated -> decorators classdef .)


state 125

    (11) decorated -> decorators funcdef .

    DEDENT          reduce using rule 11 (decorated -> decorators funcdef .)
    IF              reduce using rule 11 (decorated -> decorators funcdef .)
    FOR             reduce using rule 11 (decorated -> decorators funcdef .)
    WHILE           reduce using rule 11 (decorated -> decorators funcdef .)
    TRY             reduce using rule 11 (decorated -> decorators funcdef .)
    DEF             reduce using rule 11 (decorated -> decorators funcdef .)
    CLASS           reduce using rule 11 (decorated -> decorators funcdef .)
    WITH            reduce using rule 11 (decorated -> decorators funcdef .)
    PRINT           reduce using rule 11 (decorated -> decorators funcdef .)
    PASS            reduce using rule 11 (decorated -> decorators funcdef .)
    IMPORT          reduce using rule 11 (decorated -> decorators funcdef .)
    FROM            reduce using rule 11 (decorated -> decorators funcdef .)
    GLOBAL          reduce using rule 11 (decorated -> decorators funcdef .)
    ASSERT          reduce using rule 11 (decorated -> decorators funcdef .)
    DEL             reduce using rule 11 (decorated -> decorators funcdef .)
    EXEC            reduce using rule 11 (decorated -> decorators funcdef .)
    AT              reduce using rule 11 (decorated -> decorators funcdef .)
    BREAK           reduce using rule 11 (decorated -> decorators funcdef .)
    CONTINUE        reduce using rule 11 (decorated -> decorators funcdef .)
    RETURN          reduce using rule 11 (decorated -> decorators funcdef .)
    RAISE           reduce using rule 11 (decorated -> decorators funcdef .)
    YIELD           reduce using rule 11 (decorated -> decorators funcdef .)
    NOT             reduce using rule 11 (decorated -> decorators funcdef .)
    PLUS            reduce using rule 11 (decorated -> decorators funcdef .)
    MINUS           reduce using rule 11 (decorated -> decorators funcdef .)
    TILDE           reduce using rule 11 (decorated -> decorators funcdef .)
    NAME            reduce using rule 11 (decorated -> decorators funcdef .)
    LPAREN          reduce using rule 11 (decorated -> decorators funcdef .)
    LSQB            reduce using rule 11 (decorated -> decorators funcdef .)
    LBRACE          reduce using rule 11 (decorated -> decorators funcdef .)
    BACKQUOTE       reduce using rule 11 (decorated -> decorators funcdef .)
    NUMBER          reduce using rule 11 (decorated -> decorators funcdef .)
    FNUMBER         reduce using rule 11 (decorated -> decorators funcdef .)
    HEXADECIMALNUMBER reduce using rule 11 (decorated -> decorators funcdef .)
    OCTALNUMBER     reduce using rule 11 (decorated -> decorators funcdef .)
    BINARYNUMBER    reduce using rule 11 (decorated -> decorators funcdef .)
    STRING          reduce using rule 11 (decorated -> decorators funcdef .)
    TRIPLESTRING    reduce using rule 11 (decorated -> decorators funcdef .)
    ENDMARKER       reduce using rule 11 (decorated -> decorators funcdef .)
    NEWLINE         reduce using rule 11 (decorated -> decorators funcdef .)


state 126

    (213) stringlist -> TRIPLESTRING stringlist .

    LPAREN          reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    LSQB            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    DOT             reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    STARSTAR        reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    STAR            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    SLASH           reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    PERCENT         reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    SLASHSLASH      reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    PLUS            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    MINUS           reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    LEFTSHIFT       reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    RIGHTSHIFT      reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    AMPER           reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    CIRCUMFLEX      reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    VBAR            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    LESS            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    GREATER         reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    EQEQUAL         reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    GREATEREQUAL    reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    LESSEQUAL       reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    NOTEQUAL        reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    IN              reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    NOT             reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    IS              reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    AND             reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    OR              reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    FOR             reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    IF              reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    RSQB            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    COMMA           reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    RPAREN          reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    EQUAL           reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    PLUSEQUAL       reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    MINEQUAL        reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    STAREQUAL       reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    SLASHEQUAL      reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    PERCENTEQUAL    reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    STARSTAREQUAL   reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    SLASHSLASHEQUAL reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    NEWLINE         reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    SEMI            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    BACKQUOTE       reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    AS              reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    COLON           reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    RBRACE          reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)
    ELSE            reduce using rule 213 (stringlist -> TRIPLESTRING stringlist .)


state 127

    (302) target -> STAR . target
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NAME            shift and go to state 132
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    target                         shift and go to state 219
    stringlist                     shift and go to state 35
    atom                           shift and go to state 130

state 128

    (121) for_stmt -> FOR targetlist . IN testlist COLON suite
    (122) for_stmt -> FOR targetlist . IN testlist COLON suite ELSE COLON suite

    IN              shift and go to state 220


state 129

    (296) target -> LPAREN . targetlist RPAREN
    (196) atom -> LPAREN . RPAREN
    (197) atom -> LPAREN . testlist_comp RPAREN
    (198) atom -> LPAREN . yield_expr RPAREN
    (292) targetlist -> . target
    (293) targetlist -> . target COMMA
    (294) targetlist -> . target COMMA targetlist
    (216) testlist_comp -> . testlist
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor

    RPAREN          shift and go to state 186
    YIELD           shift and go to state 81
    NAME            shift and go to state 223
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61

    not_test                       shift and go to state 75
    testlist_comp                  shift and go to state 185
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    targetlist                     shift and go to state 221
    and_expr                       shift and go to state 72
    yield_expr                     shift and go to state 187
    power                          shift and go to state 33
    testlist                       shift and go to state 188
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 222
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    target                         shift and go to state 133
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 130

    (299) target -> atom . trailerlist DOT NAME
    (300) target -> atom . trailerlist LSQB testlist RSQB
    (301) target -> atom . trailerlist LSQB slice_list RSQB
    (194) trailerlist -> .
    (195) trailerlist -> . trailer trailerlist
    (228) trailer -> . LPAREN RPAREN
    (229) trailer -> . LPAREN arglist RPAREN
    (230) trailer -> . LSQB short_slice RSQB
    (231) trailer -> . LSQB slice_list RSQB
    (232) trailer -> . DOT NAME

  ! shift/reduce conflict for LSQB resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    LPAREN          shift and go to state 147
    LSQB            shift and go to state 148
    DOT             shift and go to state 146

  ! DOT             [ reduce using rule 194 (trailerlist -> .) ]
  ! LSQB            [ reduce using rule 194 (trailerlist -> .) ]

    trailerlist                    shift and go to state 224
    trailer                        shift and go to state 149

state 131

    (297) target -> LSQB . RSQB
    (298) target -> LSQB . targetlist RSQB
    (199) atom -> LSQB . RSQB
    (200) atom -> LSQB . listmaker RSQB
    (292) targetlist -> . target
    (293) targetlist -> . target COMMA
    (294) targetlist -> . target COMMA targetlist
    (214) listmaker -> . testlist
    (215) listmaker -> . test list_for
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (142) or_test -> . and_test ortestlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor

    RSQB            shift and go to state 225
    NAME            shift and go to state 223
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61

    not_test                       shift and go to state 75
    listmaker                      shift and go to state 160
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    targetlist                     shift and go to state 226
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 162
    and_test                       shift and go to state 44
    test                           shift and go to state 163
    atom                           shift and go to state 222
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    target                         shift and go to state 133
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 132

    (295) target -> NAME .

    COMMA           reduce using rule 295 (target -> NAME .)
    COLON           reduce using rule 295 (target -> NAME .)
    IN              reduce using rule 295 (target -> NAME .)
    RPAREN          reduce using rule 295 (target -> NAME .)
    RSQB            reduce using rule 295 (target -> NAME .)


state 133

    (292) targetlist -> target .
    (293) targetlist -> target . COMMA
    (294) targetlist -> target . COMMA targetlist

    RPAREN          reduce using rule 292 (targetlist -> target .)
    RSQB            reduce using rule 292 (targetlist -> target .)
    IN              reduce using rule 292 (targetlist -> target .)
    COMMA           shift and go to state 227


state 134

    (123) try_stmt -> TRY COLON . suite except_stmt except_list
    (124) try_stmt -> TRY COLON . suite except_stmt except_list ELSE COLON suite
    (125) try_stmt -> TRY COLON . suite except_stmt except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> TRY COLON . suite except_stmt except_list FINALLY COLON suite
    (127) try_stmt -> TRY COLON . suite FINALLY COLON suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 230
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    and_expr                       shift and go to state 72
    yield_stmt                     shift and go to state 73

state 135

    (142) or_test -> and_test ortestlist .

    IF              reduce using rule 142 (or_test -> and_test ortestlist .)
    COMMA           reduce using rule 142 (or_test -> and_test ortestlist .)
    EQUAL           reduce using rule 142 (or_test -> and_test ortestlist .)
    PLUSEQUAL       reduce using rule 142 (or_test -> and_test ortestlist .)
    MINEQUAL        reduce using rule 142 (or_test -> and_test ortestlist .)
    STAREQUAL       reduce using rule 142 (or_test -> and_test ortestlist .)
    SLASHEQUAL      reduce using rule 142 (or_test -> and_test ortestlist .)
    PERCENTEQUAL    reduce using rule 142 (or_test -> and_test ortestlist .)
    STARSTAREQUAL   reduce using rule 142 (or_test -> and_test ortestlist .)
    SLASHSLASHEQUAL reduce using rule 142 (or_test -> and_test ortestlist .)
    NEWLINE         reduce using rule 142 (or_test -> and_test ortestlist .)
    SEMI            reduce using rule 142 (or_test -> and_test ortestlist .)
    FOR             reduce using rule 142 (or_test -> and_test ortestlist .)
    RBRACE          reduce using rule 142 (or_test -> and_test ortestlist .)
    COLON           reduce using rule 142 (or_test -> and_test ortestlist .)
    RSQB            reduce using rule 142 (or_test -> and_test ortestlist .)
    RPAREN          reduce using rule 142 (or_test -> and_test ortestlist .)
    BACKQUOTE       reduce using rule 142 (or_test -> and_test ortestlist .)
    AS              reduce using rule 142 (or_test -> and_test ortestlist .)
    ELSE            reduce using rule 142 (or_test -> and_test ortestlist .)


state 136

    (144) ortestlist -> OR . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 231
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70

state 137

    (202) atom -> LBRACE dictorsetmaker . RBRACE

    RBRACE          shift and go to state 232


state 138

    (260) dictorsetmaker -> testcolonlist .

    RBRACE          reduce using rule 260 (dictorsetmaker -> testcolonlist .)


state 139

    (201) atom -> LBRACE RBRACE .

    LPAREN          reduce using rule 201 (atom -> LBRACE RBRACE .)
    LSQB            reduce using rule 201 (atom -> LBRACE RBRACE .)
    DOT             reduce using rule 201 (atom -> LBRACE RBRACE .)
    STARSTAR        reduce using rule 201 (atom -> LBRACE RBRACE .)
    STAR            reduce using rule 201 (atom -> LBRACE RBRACE .)
    SLASH           reduce using rule 201 (atom -> LBRACE RBRACE .)
    PERCENT         reduce using rule 201 (atom -> LBRACE RBRACE .)
    SLASHSLASH      reduce using rule 201 (atom -> LBRACE RBRACE .)
    PLUS            reduce using rule 201 (atom -> LBRACE RBRACE .)
    MINUS           reduce using rule 201 (atom -> LBRACE RBRACE .)
    LEFTSHIFT       reduce using rule 201 (atom -> LBRACE RBRACE .)
    RIGHTSHIFT      reduce using rule 201 (atom -> LBRACE RBRACE .)
    AMPER           reduce using rule 201 (atom -> LBRACE RBRACE .)
    CIRCUMFLEX      reduce using rule 201 (atom -> LBRACE RBRACE .)
    VBAR            reduce using rule 201 (atom -> LBRACE RBRACE .)
    LESS            reduce using rule 201 (atom -> LBRACE RBRACE .)
    GREATER         reduce using rule 201 (atom -> LBRACE RBRACE .)
    EQEQUAL         reduce using rule 201 (atom -> LBRACE RBRACE .)
    GREATEREQUAL    reduce using rule 201 (atom -> LBRACE RBRACE .)
    LESSEQUAL       reduce using rule 201 (atom -> LBRACE RBRACE .)
    NOTEQUAL        reduce using rule 201 (atom -> LBRACE RBRACE .)
    IN              reduce using rule 201 (atom -> LBRACE RBRACE .)
    NOT             reduce using rule 201 (atom -> LBRACE RBRACE .)
    IS              reduce using rule 201 (atom -> LBRACE RBRACE .)
    AND             reduce using rule 201 (atom -> LBRACE RBRACE .)
    OR              reduce using rule 201 (atom -> LBRACE RBRACE .)
    IF              reduce using rule 201 (atom -> LBRACE RBRACE .)
    COMMA           reduce using rule 201 (atom -> LBRACE RBRACE .)
    BACKQUOTE       reduce using rule 201 (atom -> LBRACE RBRACE .)
    EQUAL           reduce using rule 201 (atom -> LBRACE RBRACE .)
    PLUSEQUAL       reduce using rule 201 (atom -> LBRACE RBRACE .)
    MINEQUAL        reduce using rule 201 (atom -> LBRACE RBRACE .)
    STAREQUAL       reduce using rule 201 (atom -> LBRACE RBRACE .)
    SLASHEQUAL      reduce using rule 201 (atom -> LBRACE RBRACE .)
    PERCENTEQUAL    reduce using rule 201 (atom -> LBRACE RBRACE .)
    STARSTAREQUAL   reduce using rule 201 (atom -> LBRACE RBRACE .)
    SLASHSLASHEQUAL reduce using rule 201 (atom -> LBRACE RBRACE .)
    NEWLINE         reduce using rule 201 (atom -> LBRACE RBRACE .)
    SEMI            reduce using rule 201 (atom -> LBRACE RBRACE .)
    RSQB            reduce using rule 201 (atom -> LBRACE RBRACE .)
    COLON           reduce using rule 201 (atom -> LBRACE RBRACE .)
    RPAREN          reduce using rule 201 (atom -> LBRACE RBRACE .)
    FOR             reduce using rule 201 (atom -> LBRACE RBRACE .)
    AS              reduce using rule 201 (atom -> LBRACE RBRACE .)
    RBRACE          reduce using rule 201 (atom -> LBRACE RBRACE .)
    ELSE            reduce using rule 201 (atom -> LBRACE RBRACE .)


state 140

    (261) dictorsetmaker -> testlist .

    RBRACE          reduce using rule 261 (dictorsetmaker -> testlist .)


state 141

    (258) dictorsetmaker -> test . COLON test comp_for
    (259) dictorsetmaker -> test . comp_for
    (262) testcolonlist -> test . COLON test
    (263) testcolonlist -> test . COLON test COMMA
    (264) testcolonlist -> test . COLON test COMMA testcolonlist
    (255) testlist -> test .
    (256) testlist -> test . COMMA
    (257) testlist -> test . COMMA testlist
    (284) comp_for -> . FOR targetlist IN or_test
    (285) comp_for -> . FOR targetlist IN or_test comp_iter

    COLON           shift and go to state 235
    RBRACE          reduce using rule 255 (testlist -> test .)
    COMMA           shift and go to state 181
    FOR             shift and go to state 233

    comp_for                       shift and go to state 234

state 142

    (174) arithexprlist -> LEFTSHIFT . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    arith_expr                     shift and go to state 236
    atom                           shift and go to state 50
    term                           shift and go to state 22
    power                          shift and go to state 33
    factor                         shift and go to state 12
    stringlist                     shift and go to state 35

state 143

    (175) arithexprlist -> RIGHTSHIFT . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    arith_expr                     shift and go to state 237
    atom                           shift and go to state 50
    term                           shift and go to state 22
    power                          shift and go to state 33
    factor                         shift and go to state 12
    stringlist                     shift and go to state 35

state 144

    (172) shift_expr -> arith_expr arithexprlist .

    AMPER           reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    CIRCUMFLEX      reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    VBAR            reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    LESS            reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    GREATER         reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    EQEQUAL         reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    GREATEREQUAL    reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    LESSEQUAL       reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    NOTEQUAL        reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    IN              reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    NOT             reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    IS              reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    AND             reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    OR              reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    IF              reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    COMMA           reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    EQUAL           reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    PLUSEQUAL       reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    MINEQUAL        reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    STAREQUAL       reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    SLASHEQUAL      reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    PERCENTEQUAL    reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    STARSTAREQUAL   reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    SLASHSLASHEQUAL reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    NEWLINE         reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    SEMI            reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    BACKQUOTE       reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    AS              reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    COLON           reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    FOR             reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    RBRACE          reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    RSQB            reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    RPAREN          reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)
    ELSE            reduce using rule 172 (shift_expr -> arith_expr arithexprlist .)


state 145

    (190) power -> atom trailerlist .
    (191) power -> atom trailerlist . STARSTAR factor

    STAR            reduce using rule 190 (power -> atom trailerlist .)
    SLASH           reduce using rule 190 (power -> atom trailerlist .)
    PERCENT         reduce using rule 190 (power -> atom trailerlist .)
    SLASHSLASH      reduce using rule 190 (power -> atom trailerlist .)
    PLUS            reduce using rule 190 (power -> atom trailerlist .)
    MINUS           reduce using rule 190 (power -> atom trailerlist .)
    LEFTSHIFT       reduce using rule 190 (power -> atom trailerlist .)
    RIGHTSHIFT      reduce using rule 190 (power -> atom trailerlist .)
    AMPER           reduce using rule 190 (power -> atom trailerlist .)
    CIRCUMFLEX      reduce using rule 190 (power -> atom trailerlist .)
    VBAR            reduce using rule 190 (power -> atom trailerlist .)
    LESS            reduce using rule 190 (power -> atom trailerlist .)
    GREATER         reduce using rule 190 (power -> atom trailerlist .)
    EQEQUAL         reduce using rule 190 (power -> atom trailerlist .)
    GREATEREQUAL    reduce using rule 190 (power -> atom trailerlist .)
    LESSEQUAL       reduce using rule 190 (power -> atom trailerlist .)
    NOTEQUAL        reduce using rule 190 (power -> atom trailerlist .)
    IN              reduce using rule 190 (power -> atom trailerlist .)
    NOT             reduce using rule 190 (power -> atom trailerlist .)
    IS              reduce using rule 190 (power -> atom trailerlist .)
    AND             reduce using rule 190 (power -> atom trailerlist .)
    OR              reduce using rule 190 (power -> atom trailerlist .)
    IF              reduce using rule 190 (power -> atom trailerlist .)
    COMMA           reduce using rule 190 (power -> atom trailerlist .)
    NEWLINE         reduce using rule 190 (power -> atom trailerlist .)
    SEMI            reduce using rule 190 (power -> atom trailerlist .)
    BACKQUOTE       reduce using rule 190 (power -> atom trailerlist .)
    EQUAL           reduce using rule 190 (power -> atom trailerlist .)
    PLUSEQUAL       reduce using rule 190 (power -> atom trailerlist .)
    MINEQUAL        reduce using rule 190 (power -> atom trailerlist .)
    STAREQUAL       reduce using rule 190 (power -> atom trailerlist .)
    SLASHEQUAL      reduce using rule 190 (power -> atom trailerlist .)
    PERCENTEQUAL    reduce using rule 190 (power -> atom trailerlist .)
    STARSTAREQUAL   reduce using rule 190 (power -> atom trailerlist .)
    SLASHSLASHEQUAL reduce using rule 190 (power -> atom trailerlist .)
    AS              reduce using rule 190 (power -> atom trailerlist .)
    COLON           reduce using rule 190 (power -> atom trailerlist .)
    FOR             reduce using rule 190 (power -> atom trailerlist .)
    RBRACE          reduce using rule 190 (power -> atom trailerlist .)
    RSQB            reduce using rule 190 (power -> atom trailerlist .)
    RPAREN          reduce using rule 190 (power -> atom trailerlist .)
    ELSE            reduce using rule 190 (power -> atom trailerlist .)
    STARSTAR        shift and go to state 238


state 146

    (232) trailer -> DOT . NAME

    NAME            shift and go to state 239


state 147

    (228) trailer -> LPAREN . RPAREN
    (229) trailer -> LPAREN . arglist RPAREN
    (268) arglist -> . arglist1
    (269) arglist -> . arglist3 STAR test arglist2 COMMA STAR STAR test
    (270) arglist -> . arglist3 STAR test arglist2
    (271) arglist -> . arglist3 STAR STAR test
    (276) arglist1 -> . argument
    (277) arglist1 -> . argument COMMA
    (278) arglist1 -> . argument COMMA arglist1
    (272) arglist3 -> .
    (273) arglist3 -> . argument COMMA arglist3
    (279) argument -> . test
    (280) argument -> . test comp_for
    (281) argument -> . test EQUAL test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RPAREN          shift and go to state 241
    STAR            reduce using rule 272 (arglist3 -> .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    argument                       shift and go to state 243
    or_test                        shift and go to state 24
    not_test                       shift and go to state 75
    arglist                        shift and go to state 240
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 242
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    arglist1                       shift and go to state 244
    arglist3                       shift and go to state 245

state 148

    (230) trailer -> LSQB . short_slice RSQB
    (231) trailer -> LSQB . slice_list RSQB
    (242) short_slice -> . lower_bound COLON
    (243) short_slice -> . lower_bound COLON upper_bound
    (244) short_slice -> . COLON
    (245) short_slice -> . COLON upper_bound
    (233) slice_list -> . slice_item slice_item_list
    (248) lower_bound -> . test
    (237) slice_item -> . test
    (238) slice_item -> . proper_slice
    (239) slice_item -> . ellipsis
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (240) proper_slice -> . short_slice
    (241) proper_slice -> . long_slice
    (251) ellipsis -> . DOT DOT DOT
    (142) or_test -> . and_test ortestlist
    (246) long_slice -> . short_slice COLON
    (247) long_slice -> . short_slice COLON stride
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    COLON           shift and go to state 248
    DOT             shift and go to state 246
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    slice_list                     shift and go to state 247
    shift_expr                     shift and go to state 34
    short_slice                    shift and go to state 249
    factor                         shift and go to state 12
    ellipsis                       shift and go to state 251
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    lower_bound                    shift and go to state 252
    and_test                       shift and go to state 44
    test                           shift and go to state 250
    long_slice                     shift and go to state 253
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    proper_slice                   shift and go to state 254
    slice_item                     shift and go to state 255

state 149

    (195) trailerlist -> trailer . trailerlist
    (194) trailerlist -> .
    (195) trailerlist -> . trailer trailerlist
    (228) trailer -> . LPAREN RPAREN
    (229) trailer -> . LPAREN arglist RPAREN
    (230) trailer -> . LSQB short_slice RSQB
    (231) trailer -> . LSQB slice_list RSQB
    (232) trailer -> . DOT NAME

  ! shift/reduce conflict for LSQB resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    STARSTAR        reduce using rule 194 (trailerlist -> .)
    STAR            reduce using rule 194 (trailerlist -> .)
    SLASH           reduce using rule 194 (trailerlist -> .)
    PERCENT         reduce using rule 194 (trailerlist -> .)
    SLASHSLASH      reduce using rule 194 (trailerlist -> .)
    PLUS            reduce using rule 194 (trailerlist -> .)
    MINUS           reduce using rule 194 (trailerlist -> .)
    LEFTSHIFT       reduce using rule 194 (trailerlist -> .)
    RIGHTSHIFT      reduce using rule 194 (trailerlist -> .)
    AMPER           reduce using rule 194 (trailerlist -> .)
    CIRCUMFLEX      reduce using rule 194 (trailerlist -> .)
    VBAR            reduce using rule 194 (trailerlist -> .)
    LESS            reduce using rule 194 (trailerlist -> .)
    GREATER         reduce using rule 194 (trailerlist -> .)
    EQEQUAL         reduce using rule 194 (trailerlist -> .)
    GREATEREQUAL    reduce using rule 194 (trailerlist -> .)
    LESSEQUAL       reduce using rule 194 (trailerlist -> .)
    NOTEQUAL        reduce using rule 194 (trailerlist -> .)
    IN              reduce using rule 194 (trailerlist -> .)
    NOT             reduce using rule 194 (trailerlist -> .)
    IS              reduce using rule 194 (trailerlist -> .)
    AND             reduce using rule 194 (trailerlist -> .)
    OR              reduce using rule 194 (trailerlist -> .)
    IF              reduce using rule 194 (trailerlist -> .)
    COMMA           reduce using rule 194 (trailerlist -> .)
    EQUAL           reduce using rule 194 (trailerlist -> .)
    PLUSEQUAL       reduce using rule 194 (trailerlist -> .)
    MINEQUAL        reduce using rule 194 (trailerlist -> .)
    STAREQUAL       reduce using rule 194 (trailerlist -> .)
    SLASHEQUAL      reduce using rule 194 (trailerlist -> .)
    PERCENTEQUAL    reduce using rule 194 (trailerlist -> .)
    STARSTAREQUAL   reduce using rule 194 (trailerlist -> .)
    SLASHSLASHEQUAL reduce using rule 194 (trailerlist -> .)
    NEWLINE         reduce using rule 194 (trailerlist -> .)
    SEMI            reduce using rule 194 (trailerlist -> .)
    BACKQUOTE       reduce using rule 194 (trailerlist -> .)
    AS              reduce using rule 194 (trailerlist -> .)
    COLON           reduce using rule 194 (trailerlist -> .)
    FOR             reduce using rule 194 (trailerlist -> .)
    RBRACE          reduce using rule 194 (trailerlist -> .)
    RSQB            reduce using rule 194 (trailerlist -> .)
    RPAREN          reduce using rule 194 (trailerlist -> .)
    ELSE            reduce using rule 194 (trailerlist -> .)
    LPAREN          shift and go to state 147
    LSQB            shift and go to state 148
    DOT             shift and go to state 146

  ! DOT             [ reduce using rule 194 (trailerlist -> .) ]
  ! LSQB            [ reduce using rule 194 (trailerlist -> .) ]

    trailerlist                    shift and go to state 256
    trailer                        shift and go to state 149

state 150

    (148) not_test -> NOT not_test .

    AND             reduce using rule 148 (not_test -> NOT not_test .)
    OR              reduce using rule 148 (not_test -> NOT not_test .)
    ELSE            reduce using rule 148 (not_test -> NOT not_test .)
    IF              reduce using rule 148 (not_test -> NOT not_test .)
    COMMA           reduce using rule 148 (not_test -> NOT not_test .)
    BACKQUOTE       reduce using rule 148 (not_test -> NOT not_test .)
    EQUAL           reduce using rule 148 (not_test -> NOT not_test .)
    PLUSEQUAL       reduce using rule 148 (not_test -> NOT not_test .)
    MINEQUAL        reduce using rule 148 (not_test -> NOT not_test .)
    STAREQUAL       reduce using rule 148 (not_test -> NOT not_test .)
    SLASHEQUAL      reduce using rule 148 (not_test -> NOT not_test .)
    PERCENTEQUAL    reduce using rule 148 (not_test -> NOT not_test .)
    STARSTAREQUAL   reduce using rule 148 (not_test -> NOT not_test .)
    SLASHSLASHEQUAL reduce using rule 148 (not_test -> NOT not_test .)
    NEWLINE         reduce using rule 148 (not_test -> NOT not_test .)
    SEMI            reduce using rule 148 (not_test -> NOT not_test .)
    RBRACE          reduce using rule 148 (not_test -> NOT not_test .)
    RSQB            reduce using rule 148 (not_test -> NOT not_test .)
    RPAREN          reduce using rule 148 (not_test -> NOT not_test .)
    COLON           reduce using rule 148 (not_test -> NOT not_test .)
    AS              reduce using rule 148 (not_test -> NOT not_test .)
    FOR             reduce using rule 148 (not_test -> NOT not_test .)


state 151

    (30) simple_stmt -> small_stmts NEWLINE .

    ENDMARKER       reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    NEWLINE         reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    IF              reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    FOR             reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    WHILE           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    TRY             reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    DEF             reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    CLASS           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    WITH            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    PRINT           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    PASS            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    IMPORT          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    FROM            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    GLOBAL          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    ASSERT          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    DEL             reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    EXEC            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    AT              reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    BREAK           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    CONTINUE        reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    RETURN          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    RAISE           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    YIELD           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    NOT             reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    PLUS            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    MINUS           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    TILDE           reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    NAME            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    LPAREN          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    LSQB            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    LBRACE          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    BACKQUOTE       reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    NUMBER          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    FNUMBER         reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    HEXADECIMALNUMBER reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    OCTALNUMBER     reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    BINARYNUMBER    reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    STRING          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    TRIPLESTRING    reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    DEDENT          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    ELIF            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    ELSE            reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    FINALLY         reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)
    EXCEPT          reduce using rule 30 (simple_stmt -> small_stmts NEWLINE .)


state 152

    (31) simple_stmt -> small_stmts SEMI . NEWLINE
    (32) small_stmts -> small_stmts SEMI . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 258
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 257
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    yield_stmt                     shift and go to state 73

state 153

    (70) raise_stmt -> RAISE test .
    (71) raise_stmt -> RAISE test . COMMA test
    (72) raise_stmt -> RAISE test . COMMA test COMMA test

    NEWLINE         reduce using rule 70 (raise_stmt -> RAISE test .)
    SEMI            reduce using rule 70 (raise_stmt -> RAISE test .)
    COMMA           shift and go to state 259


state 154

    (103) global_stmt -> GLOBAL NAME . namelist
    (104) namelist -> .
    (105) namelist -> . COMMA NAME namelist

    NEWLINE         reduce using rule 104 (namelist -> .)
    SEMI            reduce using rule 104 (namelist -> .)
    COMMA           shift and go to state 261

    namelist                       shift and go to state 260

state 155

    (119) while_stmt -> WHILE test . COLON suite
    (120) while_stmt -> WHILE test . COLON suite ELSE COLON suite

    COLON           shift and go to state 262


state 156

    (68) return_stmt -> RETURN testlist .

    NEWLINE         reduce using rule 68 (return_stmt -> RETURN testlist .)
    SEMI            reduce using rule 68 (return_stmt -> RETURN testlist .)


state 157

    (163) expr -> xor_expr xorexprlist .

    LESS            reduce using rule 163 (expr -> xor_expr xorexprlist .)
    GREATER         reduce using rule 163 (expr -> xor_expr xorexprlist .)
    EQEQUAL         reduce using rule 163 (expr -> xor_expr xorexprlist .)
    GREATEREQUAL    reduce using rule 163 (expr -> xor_expr xorexprlist .)
    LESSEQUAL       reduce using rule 163 (expr -> xor_expr xorexprlist .)
    NOTEQUAL        reduce using rule 163 (expr -> xor_expr xorexprlist .)
    IN              reduce using rule 163 (expr -> xor_expr xorexprlist .)
    NOT             reduce using rule 163 (expr -> xor_expr xorexprlist .)
    IS              reduce using rule 163 (expr -> xor_expr xorexprlist .)
    AND             reduce using rule 163 (expr -> xor_expr xorexprlist .)
    OR              reduce using rule 163 (expr -> xor_expr xorexprlist .)
    IF              reduce using rule 163 (expr -> xor_expr xorexprlist .)
    COMMA           reduce using rule 163 (expr -> xor_expr xorexprlist .)
    RPAREN          reduce using rule 163 (expr -> xor_expr xorexprlist .)
    EQUAL           reduce using rule 163 (expr -> xor_expr xorexprlist .)
    PLUSEQUAL       reduce using rule 163 (expr -> xor_expr xorexprlist .)
    MINEQUAL        reduce using rule 163 (expr -> xor_expr xorexprlist .)
    STAREQUAL       reduce using rule 163 (expr -> xor_expr xorexprlist .)
    SLASHEQUAL      reduce using rule 163 (expr -> xor_expr xorexprlist .)
    PERCENTEQUAL    reduce using rule 163 (expr -> xor_expr xorexprlist .)
    STARSTAREQUAL   reduce using rule 163 (expr -> xor_expr xorexprlist .)
    SLASHSLASHEQUAL reduce using rule 163 (expr -> xor_expr xorexprlist .)
    NEWLINE         reduce using rule 163 (expr -> xor_expr xorexprlist .)
    SEMI            reduce using rule 163 (expr -> xor_expr xorexprlist .)
    COLON           reduce using rule 163 (expr -> xor_expr xorexprlist .)
    FOR             reduce using rule 163 (expr -> xor_expr xorexprlist .)
    RSQB            reduce using rule 163 (expr -> xor_expr xorexprlist .)
    ELSE            reduce using rule 163 (expr -> xor_expr xorexprlist .)
    RBRACE          reduce using rule 163 (expr -> xor_expr xorexprlist .)
    BACKQUOTE       reduce using rule 163 (expr -> xor_expr xorexprlist .)
    AS              reduce using rule 163 (expr -> xor_expr xorexprlist .)


state 158

    (165) xorexprlist -> VBAR . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    atom                           shift and go to state 50
    shift_expr                     shift and go to state 34
    stringlist                     shift and go to state 35
    power                          shift and go to state 33
    factor                         shift and go to state 12
    xor_expr                       shift and go to state 263
    and_expr                       shift and go to state 72

state 159

    (189) factor -> TILDE factor .

    STAR            reduce using rule 189 (factor -> TILDE factor .)
    SLASH           reduce using rule 189 (factor -> TILDE factor .)
    PERCENT         reduce using rule 189 (factor -> TILDE factor .)
    SLASHSLASH      reduce using rule 189 (factor -> TILDE factor .)
    PLUS            reduce using rule 189 (factor -> TILDE factor .)
    MINUS           reduce using rule 189 (factor -> TILDE factor .)
    LEFTSHIFT       reduce using rule 189 (factor -> TILDE factor .)
    RIGHTSHIFT      reduce using rule 189 (factor -> TILDE factor .)
    AMPER           reduce using rule 189 (factor -> TILDE factor .)
    CIRCUMFLEX      reduce using rule 189 (factor -> TILDE factor .)
    VBAR            reduce using rule 189 (factor -> TILDE factor .)
    LESS            reduce using rule 189 (factor -> TILDE factor .)
    GREATER         reduce using rule 189 (factor -> TILDE factor .)
    EQEQUAL         reduce using rule 189 (factor -> TILDE factor .)
    GREATEREQUAL    reduce using rule 189 (factor -> TILDE factor .)
    LESSEQUAL       reduce using rule 189 (factor -> TILDE factor .)
    NOTEQUAL        reduce using rule 189 (factor -> TILDE factor .)
    IN              reduce using rule 189 (factor -> TILDE factor .)
    NOT             reduce using rule 189 (factor -> TILDE factor .)
    IS              reduce using rule 189 (factor -> TILDE factor .)
    AND             reduce using rule 189 (factor -> TILDE factor .)
    OR              reduce using rule 189 (factor -> TILDE factor .)
    IF              reduce using rule 189 (factor -> TILDE factor .)
    COMMA           reduce using rule 189 (factor -> TILDE factor .)
    EQUAL           reduce using rule 189 (factor -> TILDE factor .)
    PLUSEQUAL       reduce using rule 189 (factor -> TILDE factor .)
    MINEQUAL        reduce using rule 189 (factor -> TILDE factor .)
    STAREQUAL       reduce using rule 189 (factor -> TILDE factor .)
    SLASHEQUAL      reduce using rule 189 (factor -> TILDE factor .)
    PERCENTEQUAL    reduce using rule 189 (factor -> TILDE factor .)
    STARSTAREQUAL   reduce using rule 189 (factor -> TILDE factor .)
    SLASHSLASHEQUAL reduce using rule 189 (factor -> TILDE factor .)
    NEWLINE         reduce using rule 189 (factor -> TILDE factor .)
    SEMI            reduce using rule 189 (factor -> TILDE factor .)
    FOR             reduce using rule 189 (factor -> TILDE factor .)
    RSQB            reduce using rule 189 (factor -> TILDE factor .)
    BACKQUOTE       reduce using rule 189 (factor -> TILDE factor .)
    AS              reduce using rule 189 (factor -> TILDE factor .)
    COLON           reduce using rule 189 (factor -> TILDE factor .)
    RBRACE          reduce using rule 189 (factor -> TILDE factor .)
    RPAREN          reduce using rule 189 (factor -> TILDE factor .)
    ELSE            reduce using rule 189 (factor -> TILDE factor .)


state 160

    (200) atom -> LSQB listmaker . RSQB

    RSQB            shift and go to state 264


state 161

    (199) atom -> LSQB RSQB .

    LPAREN          reduce using rule 199 (atom -> LSQB RSQB .)
    LSQB            reduce using rule 199 (atom -> LSQB RSQB .)
    DOT             reduce using rule 199 (atom -> LSQB RSQB .)
    STARSTAR        reduce using rule 199 (atom -> LSQB RSQB .)
    STAR            reduce using rule 199 (atom -> LSQB RSQB .)
    SLASH           reduce using rule 199 (atom -> LSQB RSQB .)
    PERCENT         reduce using rule 199 (atom -> LSQB RSQB .)
    SLASHSLASH      reduce using rule 199 (atom -> LSQB RSQB .)
    PLUS            reduce using rule 199 (atom -> LSQB RSQB .)
    MINUS           reduce using rule 199 (atom -> LSQB RSQB .)
    LEFTSHIFT       reduce using rule 199 (atom -> LSQB RSQB .)
    RIGHTSHIFT      reduce using rule 199 (atom -> LSQB RSQB .)
    AMPER           reduce using rule 199 (atom -> LSQB RSQB .)
    CIRCUMFLEX      reduce using rule 199 (atom -> LSQB RSQB .)
    VBAR            reduce using rule 199 (atom -> LSQB RSQB .)
    LESS            reduce using rule 199 (atom -> LSQB RSQB .)
    GREATER         reduce using rule 199 (atom -> LSQB RSQB .)
    EQEQUAL         reduce using rule 199 (atom -> LSQB RSQB .)
    GREATEREQUAL    reduce using rule 199 (atom -> LSQB RSQB .)
    LESSEQUAL       reduce using rule 199 (atom -> LSQB RSQB .)
    NOTEQUAL        reduce using rule 199 (atom -> LSQB RSQB .)
    IN              reduce using rule 199 (atom -> LSQB RSQB .)
    NOT             reduce using rule 199 (atom -> LSQB RSQB .)
    IS              reduce using rule 199 (atom -> LSQB RSQB .)
    AND             reduce using rule 199 (atom -> LSQB RSQB .)
    OR              reduce using rule 199 (atom -> LSQB RSQB .)
    IF              reduce using rule 199 (atom -> LSQB RSQB .)
    COMMA           reduce using rule 199 (atom -> LSQB RSQB .)
    BACKQUOTE       reduce using rule 199 (atom -> LSQB RSQB .)
    EQUAL           reduce using rule 199 (atom -> LSQB RSQB .)
    PLUSEQUAL       reduce using rule 199 (atom -> LSQB RSQB .)
    MINEQUAL        reduce using rule 199 (atom -> LSQB RSQB .)
    STAREQUAL       reduce using rule 199 (atom -> LSQB RSQB .)
    SLASHEQUAL      reduce using rule 199 (atom -> LSQB RSQB .)
    PERCENTEQUAL    reduce using rule 199 (atom -> LSQB RSQB .)
    STARSTAREQUAL   reduce using rule 199 (atom -> LSQB RSQB .)
    SLASHSLASHEQUAL reduce using rule 199 (atom -> LSQB RSQB .)
    NEWLINE         reduce using rule 199 (atom -> LSQB RSQB .)
    SEMI            reduce using rule 199 (atom -> LSQB RSQB .)
    RSQB            reduce using rule 199 (atom -> LSQB RSQB .)
    COLON           reduce using rule 199 (atom -> LSQB RSQB .)
    RPAREN          reduce using rule 199 (atom -> LSQB RSQB .)
    FOR             reduce using rule 199 (atom -> LSQB RSQB .)
    AS              reduce using rule 199 (atom -> LSQB RSQB .)
    RBRACE          reduce using rule 199 (atom -> LSQB RSQB .)
    ELSE            reduce using rule 199 (atom -> LSQB RSQB .)


state 162

    (214) listmaker -> testlist .

    RSQB            reduce using rule 214 (listmaker -> testlist .)


state 163

    (215) listmaker -> test . list_for
    (255) testlist -> test .
    (256) testlist -> test . COMMA
    (257) testlist -> test . COMMA testlist
    (219) list_for -> . FOR targetlist IN testlist_safe
    (220) list_for -> . FOR targetlist IN testlist_safe list_iter

    RSQB            reduce using rule 255 (testlist -> test .)
    COMMA           shift and go to state 181
    FOR             shift and go to state 265

    list_for                       shift and go to state 266

state 164

    (192) power -> NAME trailerlist .
    (193) power -> NAME trailerlist . STARSTAR factor

    STAR            reduce using rule 192 (power -> NAME trailerlist .)
    SLASH           reduce using rule 192 (power -> NAME trailerlist .)
    PERCENT         reduce using rule 192 (power -> NAME trailerlist .)
    SLASHSLASH      reduce using rule 192 (power -> NAME trailerlist .)
    PLUS            reduce using rule 192 (power -> NAME trailerlist .)
    MINUS           reduce using rule 192 (power -> NAME trailerlist .)
    LEFTSHIFT       reduce using rule 192 (power -> NAME trailerlist .)
    RIGHTSHIFT      reduce using rule 192 (power -> NAME trailerlist .)
    AMPER           reduce using rule 192 (power -> NAME trailerlist .)
    CIRCUMFLEX      reduce using rule 192 (power -> NAME trailerlist .)
    VBAR            reduce using rule 192 (power -> NAME trailerlist .)
    LESS            reduce using rule 192 (power -> NAME trailerlist .)
    GREATER         reduce using rule 192 (power -> NAME trailerlist .)
    EQEQUAL         reduce using rule 192 (power -> NAME trailerlist .)
    GREATEREQUAL    reduce using rule 192 (power -> NAME trailerlist .)
    LESSEQUAL       reduce using rule 192 (power -> NAME trailerlist .)
    NOTEQUAL        reduce using rule 192 (power -> NAME trailerlist .)
    IN              reduce using rule 192 (power -> NAME trailerlist .)
    NOT             reduce using rule 192 (power -> NAME trailerlist .)
    IS              reduce using rule 192 (power -> NAME trailerlist .)
    AND             reduce using rule 192 (power -> NAME trailerlist .)
    OR              reduce using rule 192 (power -> NAME trailerlist .)
    IF              reduce using rule 192 (power -> NAME trailerlist .)
    COMMA           reduce using rule 192 (power -> NAME trailerlist .)
    NEWLINE         reduce using rule 192 (power -> NAME trailerlist .)
    SEMI            reduce using rule 192 (power -> NAME trailerlist .)
    BACKQUOTE       reduce using rule 192 (power -> NAME trailerlist .)
    EQUAL           reduce using rule 192 (power -> NAME trailerlist .)
    PLUSEQUAL       reduce using rule 192 (power -> NAME trailerlist .)
    MINEQUAL        reduce using rule 192 (power -> NAME trailerlist .)
    STAREQUAL       reduce using rule 192 (power -> NAME trailerlist .)
    SLASHEQUAL      reduce using rule 192 (power -> NAME trailerlist .)
    PERCENTEQUAL    reduce using rule 192 (power -> NAME trailerlist .)
    STARSTAREQUAL   reduce using rule 192 (power -> NAME trailerlist .)
    SLASHSLASHEQUAL reduce using rule 192 (power -> NAME trailerlist .)
    AS              reduce using rule 192 (power -> NAME trailerlist .)
    COLON           reduce using rule 192 (power -> NAME trailerlist .)
    FOR             reduce using rule 192 (power -> NAME trailerlist .)
    RBRACE          reduce using rule 192 (power -> NAME trailerlist .)
    RSQB            reduce using rule 192 (power -> NAME trailerlist .)
    RPAREN          reduce using rule 192 (power -> NAME trailerlist .)
    ELSE            reduce using rule 192 (power -> NAME trailerlist .)
    STARSTAR        shift and go to state 267


state 165

    (158) comp_op -> NOTEQUAL .

    PLUS            reduce using rule 158 (comp_op -> NOTEQUAL .)
    MINUS           reduce using rule 158 (comp_op -> NOTEQUAL .)
    TILDE           reduce using rule 158 (comp_op -> NOTEQUAL .)
    NAME            reduce using rule 158 (comp_op -> NOTEQUAL .)
    LPAREN          reduce using rule 158 (comp_op -> NOTEQUAL .)
    LSQB            reduce using rule 158 (comp_op -> NOTEQUAL .)
    LBRACE          reduce using rule 158 (comp_op -> NOTEQUAL .)
    BACKQUOTE       reduce using rule 158 (comp_op -> NOTEQUAL .)
    NUMBER          reduce using rule 158 (comp_op -> NOTEQUAL .)
    FNUMBER         reduce using rule 158 (comp_op -> NOTEQUAL .)
    HEXADECIMALNUMBER reduce using rule 158 (comp_op -> NOTEQUAL .)
    OCTALNUMBER     reduce using rule 158 (comp_op -> NOTEQUAL .)
    BINARYNUMBER    reduce using rule 158 (comp_op -> NOTEQUAL .)
    STRING          reduce using rule 158 (comp_op -> NOTEQUAL .)
    TRIPLESTRING    reduce using rule 158 (comp_op -> NOTEQUAL .)


state 166

    (152) compexprlist -> comp_op . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 268

state 167

    (154) comp_op -> GREATER .

    PLUS            reduce using rule 154 (comp_op -> GREATER .)
    MINUS           reduce using rule 154 (comp_op -> GREATER .)
    TILDE           reduce using rule 154 (comp_op -> GREATER .)
    NAME            reduce using rule 154 (comp_op -> GREATER .)
    LPAREN          reduce using rule 154 (comp_op -> GREATER .)
    LSQB            reduce using rule 154 (comp_op -> GREATER .)
    LBRACE          reduce using rule 154 (comp_op -> GREATER .)
    BACKQUOTE       reduce using rule 154 (comp_op -> GREATER .)
    NUMBER          reduce using rule 154 (comp_op -> GREATER .)
    FNUMBER         reduce using rule 154 (comp_op -> GREATER .)
    HEXADECIMALNUMBER reduce using rule 154 (comp_op -> GREATER .)
    OCTALNUMBER     reduce using rule 154 (comp_op -> GREATER .)
    BINARYNUMBER    reduce using rule 154 (comp_op -> GREATER .)
    STRING          reduce using rule 154 (comp_op -> GREATER .)
    TRIPLESTRING    reduce using rule 154 (comp_op -> GREATER .)


state 168

    (153) comp_op -> LESS .

    PLUS            reduce using rule 153 (comp_op -> LESS .)
    MINUS           reduce using rule 153 (comp_op -> LESS .)
    TILDE           reduce using rule 153 (comp_op -> LESS .)
    NAME            reduce using rule 153 (comp_op -> LESS .)
    LPAREN          reduce using rule 153 (comp_op -> LESS .)
    LSQB            reduce using rule 153 (comp_op -> LESS .)
    LBRACE          reduce using rule 153 (comp_op -> LESS .)
    BACKQUOTE       reduce using rule 153 (comp_op -> LESS .)
    NUMBER          reduce using rule 153 (comp_op -> LESS .)
    FNUMBER         reduce using rule 153 (comp_op -> LESS .)
    HEXADECIMALNUMBER reduce using rule 153 (comp_op -> LESS .)
    OCTALNUMBER     reduce using rule 153 (comp_op -> LESS .)
    BINARYNUMBER    reduce using rule 153 (comp_op -> LESS .)
    STRING          reduce using rule 153 (comp_op -> LESS .)
    TRIPLESTRING    reduce using rule 153 (comp_op -> LESS .)


state 169

    (161) comp_op -> IS .
    (162) comp_op -> IS . NOT

    PLUS            reduce using rule 161 (comp_op -> IS .)
    MINUS           reduce using rule 161 (comp_op -> IS .)
    TILDE           reduce using rule 161 (comp_op -> IS .)
    NAME            reduce using rule 161 (comp_op -> IS .)
    LPAREN          reduce using rule 161 (comp_op -> IS .)
    LSQB            reduce using rule 161 (comp_op -> IS .)
    LBRACE          reduce using rule 161 (comp_op -> IS .)
    BACKQUOTE       reduce using rule 161 (comp_op -> IS .)
    NUMBER          reduce using rule 161 (comp_op -> IS .)
    FNUMBER         reduce using rule 161 (comp_op -> IS .)
    HEXADECIMALNUMBER reduce using rule 161 (comp_op -> IS .)
    OCTALNUMBER     reduce using rule 161 (comp_op -> IS .)
    BINARYNUMBER    reduce using rule 161 (comp_op -> IS .)
    STRING          reduce using rule 161 (comp_op -> IS .)
    TRIPLESTRING    reduce using rule 161 (comp_op -> IS .)
    NOT             shift and go to state 269


state 170

    (156) comp_op -> GREATEREQUAL .

    PLUS            reduce using rule 156 (comp_op -> GREATEREQUAL .)
    MINUS           reduce using rule 156 (comp_op -> GREATEREQUAL .)
    TILDE           reduce using rule 156 (comp_op -> GREATEREQUAL .)
    NAME            reduce using rule 156 (comp_op -> GREATEREQUAL .)
    LPAREN          reduce using rule 156 (comp_op -> GREATEREQUAL .)
    LSQB            reduce using rule 156 (comp_op -> GREATEREQUAL .)
    LBRACE          reduce using rule 156 (comp_op -> GREATEREQUAL .)
    BACKQUOTE       reduce using rule 156 (comp_op -> GREATEREQUAL .)
    NUMBER          reduce using rule 156 (comp_op -> GREATEREQUAL .)
    FNUMBER         reduce using rule 156 (comp_op -> GREATEREQUAL .)
    HEXADECIMALNUMBER reduce using rule 156 (comp_op -> GREATEREQUAL .)
    OCTALNUMBER     reduce using rule 156 (comp_op -> GREATEREQUAL .)
    BINARYNUMBER    reduce using rule 156 (comp_op -> GREATEREQUAL .)
    STRING          reduce using rule 156 (comp_op -> GREATEREQUAL .)
    TRIPLESTRING    reduce using rule 156 (comp_op -> GREATEREQUAL .)


state 171

    (157) comp_op -> LESSEQUAL .

    PLUS            reduce using rule 157 (comp_op -> LESSEQUAL .)
    MINUS           reduce using rule 157 (comp_op -> LESSEQUAL .)
    TILDE           reduce using rule 157 (comp_op -> LESSEQUAL .)
    NAME            reduce using rule 157 (comp_op -> LESSEQUAL .)
    LPAREN          reduce using rule 157 (comp_op -> LESSEQUAL .)
    LSQB            reduce using rule 157 (comp_op -> LESSEQUAL .)
    LBRACE          reduce using rule 157 (comp_op -> LESSEQUAL .)
    BACKQUOTE       reduce using rule 157 (comp_op -> LESSEQUAL .)
    NUMBER          reduce using rule 157 (comp_op -> LESSEQUAL .)
    FNUMBER         reduce using rule 157 (comp_op -> LESSEQUAL .)
    HEXADECIMALNUMBER reduce using rule 157 (comp_op -> LESSEQUAL .)
    OCTALNUMBER     reduce using rule 157 (comp_op -> LESSEQUAL .)
    BINARYNUMBER    reduce using rule 157 (comp_op -> LESSEQUAL .)
    STRING          reduce using rule 157 (comp_op -> LESSEQUAL .)
    TRIPLESTRING    reduce using rule 157 (comp_op -> LESSEQUAL .)


state 172

    (160) comp_op -> NOT . IN

    IN              shift and go to state 270


state 173

    (159) comp_op -> IN .

    PLUS            reduce using rule 159 (comp_op -> IN .)
    MINUS           reduce using rule 159 (comp_op -> IN .)
    TILDE           reduce using rule 159 (comp_op -> IN .)
    NAME            reduce using rule 159 (comp_op -> IN .)
    LPAREN          reduce using rule 159 (comp_op -> IN .)
    LSQB            reduce using rule 159 (comp_op -> IN .)
    LBRACE          reduce using rule 159 (comp_op -> IN .)
    BACKQUOTE       reduce using rule 159 (comp_op -> IN .)
    NUMBER          reduce using rule 159 (comp_op -> IN .)
    FNUMBER         reduce using rule 159 (comp_op -> IN .)
    HEXADECIMALNUMBER reduce using rule 159 (comp_op -> IN .)
    OCTALNUMBER     reduce using rule 159 (comp_op -> IN .)
    BINARYNUMBER    reduce using rule 159 (comp_op -> IN .)
    STRING          reduce using rule 159 (comp_op -> IN .)
    TRIPLESTRING    reduce using rule 159 (comp_op -> IN .)


state 174

    (150) comparison -> expr compexprlist .

    AND             reduce using rule 150 (comparison -> expr compexprlist .)
    OR              reduce using rule 150 (comparison -> expr compexprlist .)
    IF              reduce using rule 150 (comparison -> expr compexprlist .)
    COMMA           reduce using rule 150 (comparison -> expr compexprlist .)
    EQUAL           reduce using rule 150 (comparison -> expr compexprlist .)
    PLUSEQUAL       reduce using rule 150 (comparison -> expr compexprlist .)
    MINEQUAL        reduce using rule 150 (comparison -> expr compexprlist .)
    STAREQUAL       reduce using rule 150 (comparison -> expr compexprlist .)
    SLASHEQUAL      reduce using rule 150 (comparison -> expr compexprlist .)
    PERCENTEQUAL    reduce using rule 150 (comparison -> expr compexprlist .)
    STARSTAREQUAL   reduce using rule 150 (comparison -> expr compexprlist .)
    SLASHSLASHEQUAL reduce using rule 150 (comparison -> expr compexprlist .)
    NEWLINE         reduce using rule 150 (comparison -> expr compexprlist .)
    SEMI            reduce using rule 150 (comparison -> expr compexprlist .)
    COLON           reduce using rule 150 (comparison -> expr compexprlist .)
    FOR             reduce using rule 150 (comparison -> expr compexprlist .)
    RSQB            reduce using rule 150 (comparison -> expr compexprlist .)
    RBRACE          reduce using rule 150 (comparison -> expr compexprlist .)
    RPAREN          reduce using rule 150 (comparison -> expr compexprlist .)
    BACKQUOTE       reduce using rule 150 (comparison -> expr compexprlist .)
    AS              reduce using rule 150 (comparison -> expr compexprlist .)
    ELSE            reduce using rule 150 (comparison -> expr compexprlist .)


state 175

    (155) comp_op -> EQEQUAL .

    PLUS            reduce using rule 155 (comp_op -> EQEQUAL .)
    MINUS           reduce using rule 155 (comp_op -> EQEQUAL .)
    TILDE           reduce using rule 155 (comp_op -> EQEQUAL .)
    NAME            reduce using rule 155 (comp_op -> EQEQUAL .)
    LPAREN          reduce using rule 155 (comp_op -> EQEQUAL .)
    LSQB            reduce using rule 155 (comp_op -> EQEQUAL .)
    LBRACE          reduce using rule 155 (comp_op -> EQEQUAL .)
    BACKQUOTE       reduce using rule 155 (comp_op -> EQEQUAL .)
    NUMBER          reduce using rule 155 (comp_op -> EQEQUAL .)
    FNUMBER         reduce using rule 155 (comp_op -> EQEQUAL .)
    HEXADECIMALNUMBER reduce using rule 155 (comp_op -> EQEQUAL .)
    OCTALNUMBER     reduce using rule 155 (comp_op -> EQEQUAL .)
    BINARYNUMBER    reduce using rule 155 (comp_op -> EQEQUAL .)
    STRING          reduce using rule 155 (comp_op -> EQEQUAL .)
    TRIPLESTRING    reduce using rule 155 (comp_op -> EQEQUAL .)


state 176

    (168) andexprlist -> CIRCUMFLEX . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    atom                           shift and go to state 50
    shift_expr                     shift and go to state 34
    stringlist                     shift and go to state 35
    power                          shift and go to state 33
    factor                         shift and go to state 12
    and_expr                       shift and go to state 271

state 177

    (166) xor_expr -> and_expr andexprlist .

    VBAR            reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    LESS            reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    GREATER         reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    EQEQUAL         reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    GREATEREQUAL    reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    LESSEQUAL       reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    NOTEQUAL        reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    IN              reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    NOT             reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    IS              reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    AND             reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    OR              reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    IF              reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    COMMA           reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    FOR             reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    RSQB            reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    EQUAL           reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    RPAREN          reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    NEWLINE         reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    SEMI            reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    COLON           reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    AS              reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    PLUSEQUAL       reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    MINEQUAL        reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    STAREQUAL       reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    SLASHEQUAL      reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    PERCENTEQUAL    reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    STARSTAREQUAL   reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    SLASHSLASHEQUAL reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    BACKQUOTE       reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    RBRACE          reduce using rule 166 (xor_expr -> and_expr andexprlist .)
    ELSE            reduce using rule 166 (xor_expr -> and_expr andexprlist .)


state 178

    (106) assert_stmt -> ASSERT testlist .

    NEWLINE         reduce using rule 106 (assert_stmt -> ASSERT testlist .)
    SEMI            reduce using rule 106 (assert_stmt -> ASSERT testlist .)


state 179

    (147) andtestlist -> AND . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 272
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70

state 180

    (145) and_test -> not_test andtestlist .

    OR              reduce using rule 145 (and_test -> not_test andtestlist .)
    IF              reduce using rule 145 (and_test -> not_test andtestlist .)
    COMMA           reduce using rule 145 (and_test -> not_test andtestlist .)
    EQUAL           reduce using rule 145 (and_test -> not_test andtestlist .)
    PLUSEQUAL       reduce using rule 145 (and_test -> not_test andtestlist .)
    MINEQUAL        reduce using rule 145 (and_test -> not_test andtestlist .)
    STAREQUAL       reduce using rule 145 (and_test -> not_test andtestlist .)
    SLASHEQUAL      reduce using rule 145 (and_test -> not_test andtestlist .)
    PERCENTEQUAL    reduce using rule 145 (and_test -> not_test andtestlist .)
    STARSTAREQUAL   reduce using rule 145 (and_test -> not_test andtestlist .)
    SLASHSLASHEQUAL reduce using rule 145 (and_test -> not_test andtestlist .)
    NEWLINE         reduce using rule 145 (and_test -> not_test andtestlist .)
    SEMI            reduce using rule 145 (and_test -> not_test andtestlist .)
    COLON           reduce using rule 145 (and_test -> not_test andtestlist .)
    FOR             reduce using rule 145 (and_test -> not_test andtestlist .)
    RBRACE          reduce using rule 145 (and_test -> not_test andtestlist .)
    RSQB            reduce using rule 145 (and_test -> not_test andtestlist .)
    RPAREN          reduce using rule 145 (and_test -> not_test andtestlist .)
    AS              reduce using rule 145 (and_test -> not_test andtestlist .)
    BACKQUOTE       reduce using rule 145 (and_test -> not_test andtestlist .)
    ELSE            reduce using rule 145 (and_test -> not_test andtestlist .)


state 181

    (256) testlist -> test COMMA .
    (257) testlist -> test COMMA . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    EQUAL           reduce using rule 256 (testlist -> test COMMA .)
    PLUSEQUAL       reduce using rule 256 (testlist -> test COMMA .)
    MINEQUAL        reduce using rule 256 (testlist -> test COMMA .)
    STAREQUAL       reduce using rule 256 (testlist -> test COMMA .)
    SLASHEQUAL      reduce using rule 256 (testlist -> test COMMA .)
    PERCENTEQUAL    reduce using rule 256 (testlist -> test COMMA .)
    STARSTAREQUAL   reduce using rule 256 (testlist -> test COMMA .)
    SLASHSLASHEQUAL reduce using rule 256 (testlist -> test COMMA .)
    NEWLINE         reduce using rule 256 (testlist -> test COMMA .)
    SEMI            reduce using rule 256 (testlist -> test COMMA .)
    COLON           reduce using rule 256 (testlist -> test COMMA .)
    RPAREN          reduce using rule 256 (testlist -> test COMMA .)
    RSQB            reduce using rule 256 (testlist -> test COMMA .)
    RBRACE          reduce using rule 256 (testlist -> test COMMA .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 273
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 182

    (265) classdef -> CLASS NAME . COLON suite
    (266) classdef -> CLASS NAME . LPAREN RPAREN COLON suite
    (267) classdef -> CLASS NAME . LPAREN testlist RPAREN COLON suite

    COLON           shift and go to state 274
    LPAREN          shift and go to state 275


state 183

    (75) yield_expr -> YIELD testlist .

    NEWLINE         reduce using rule 75 (yield_expr -> YIELD testlist .)
    SEMI            reduce using rule 75 (yield_expr -> YIELD testlist .)
    RPAREN          reduce using rule 75 (yield_expr -> YIELD testlist .)


state 184

    (5) decorator -> AT module . NEWLINE
    (6) decorator -> AT module . LPAREN RPAREN NEWLINE
    (7) decorator -> AT module . LPAREN arglist RPAREN NEWLINE

    NEWLINE         shift and go to state 276
    LPAREN          shift and go to state 277


state 185

    (197) atom -> LPAREN testlist_comp . RPAREN

    RPAREN          shift and go to state 278


state 186

    (196) atom -> LPAREN RPAREN .

    LPAREN          reduce using rule 196 (atom -> LPAREN RPAREN .)
    LSQB            reduce using rule 196 (atom -> LPAREN RPAREN .)
    DOT             reduce using rule 196 (atom -> LPAREN RPAREN .)
    STARSTAR        reduce using rule 196 (atom -> LPAREN RPAREN .)
    STAR            reduce using rule 196 (atom -> LPAREN RPAREN .)
    SLASH           reduce using rule 196 (atom -> LPAREN RPAREN .)
    PERCENT         reduce using rule 196 (atom -> LPAREN RPAREN .)
    SLASHSLASH      reduce using rule 196 (atom -> LPAREN RPAREN .)
    PLUS            reduce using rule 196 (atom -> LPAREN RPAREN .)
    MINUS           reduce using rule 196 (atom -> LPAREN RPAREN .)
    LEFTSHIFT       reduce using rule 196 (atom -> LPAREN RPAREN .)
    RIGHTSHIFT      reduce using rule 196 (atom -> LPAREN RPAREN .)
    AMPER           reduce using rule 196 (atom -> LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 196 (atom -> LPAREN RPAREN .)
    VBAR            reduce using rule 196 (atom -> LPAREN RPAREN .)
    LESS            reduce using rule 196 (atom -> LPAREN RPAREN .)
    GREATER         reduce using rule 196 (atom -> LPAREN RPAREN .)
    EQEQUAL         reduce using rule 196 (atom -> LPAREN RPAREN .)
    GREATEREQUAL    reduce using rule 196 (atom -> LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 196 (atom -> LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 196 (atom -> LPAREN RPAREN .)
    IN              reduce using rule 196 (atom -> LPAREN RPAREN .)
    NOT             reduce using rule 196 (atom -> LPAREN RPAREN .)
    IS              reduce using rule 196 (atom -> LPAREN RPAREN .)
    AND             reduce using rule 196 (atom -> LPAREN RPAREN .)
    OR              reduce using rule 196 (atom -> LPAREN RPAREN .)
    IF              reduce using rule 196 (atom -> LPAREN RPAREN .)
    COMMA           reduce using rule 196 (atom -> LPAREN RPAREN .)
    BACKQUOTE       reduce using rule 196 (atom -> LPAREN RPAREN .)
    EQUAL           reduce using rule 196 (atom -> LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 196 (atom -> LPAREN RPAREN .)
    MINEQUAL        reduce using rule 196 (atom -> LPAREN RPAREN .)
    STAREQUAL       reduce using rule 196 (atom -> LPAREN RPAREN .)
    SLASHEQUAL      reduce using rule 196 (atom -> LPAREN RPAREN .)
    PERCENTEQUAL    reduce using rule 196 (atom -> LPAREN RPAREN .)
    STARSTAREQUAL   reduce using rule 196 (atom -> LPAREN RPAREN .)
    SLASHSLASHEQUAL reduce using rule 196 (atom -> LPAREN RPAREN .)
    NEWLINE         reduce using rule 196 (atom -> LPAREN RPAREN .)
    SEMI            reduce using rule 196 (atom -> LPAREN RPAREN .)
    RSQB            reduce using rule 196 (atom -> LPAREN RPAREN .)
    COLON           reduce using rule 196 (atom -> LPAREN RPAREN .)
    RPAREN          reduce using rule 196 (atom -> LPAREN RPAREN .)
    FOR             reduce using rule 196 (atom -> LPAREN RPAREN .)
    AS              reduce using rule 196 (atom -> LPAREN RPAREN .)
    RBRACE          reduce using rule 196 (atom -> LPAREN RPAREN .)
    ELSE            reduce using rule 196 (atom -> LPAREN RPAREN .)


state 187

    (198) atom -> LPAREN yield_expr . RPAREN

    RPAREN          shift and go to state 279


state 188

    (216) testlist_comp -> testlist .

    RPAREN          reduce using rule 216 (testlist_comp -> testlist .)


state 189

    (115) if_stmt -> IF test . COLON suite elif_list
    (116) if_stmt -> IF test . COLON suite elif_list ELSE COLON suite

    COLON           shift and go to state 280


state 190

    (78) import_stmt -> FROM relative_module . IMPORT NAME identlist
    (79) import_stmt -> FROM relative_module . IMPORT NAME AS NAME identlist
    (80) import_stmt -> FROM relative_module . IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> FROM relative_module . IMPORT LPAREN NAME AS NAME identlist RPAREN

    IMPORT          shift and go to state 281


state 191

    (93) relative_module -> NAME .
    (94) relative_module -> NAME . DOT NAME
    (101) module -> NAME .
    (102) module -> NAME . DOT NAME

  ! reduce/reduce conflict for IMPORT resolved using rule 93 (relative_module -> NAME .)
    IMPORT          reduce using rule 93 (relative_module -> NAME .)
    DOT             shift and go to state 282

  ! IMPORT          [ reduce using rule 101 (module -> NAME .) ]


state 192

    (82) import_stmt -> FROM module . IMPORT STAR

    IMPORT          shift and go to state 283


state 193

    (95) relative_module -> dotstar . module
    (101) module -> . NAME
    (102) module -> . NAME DOT NAME

    NAME            shift and go to state 100

    module                         shift and go to state 284

state 194

    (96) relative_module -> DOT . dotplus
    (100) dotstar -> DOT . dotstar
    (97) dotplus -> .
    (98) dotplus -> . DOT dotplus
    (99) dotstar -> .
    (100) dotstar -> . DOT dotstar

    IMPORT          reduce using rule 97 (dotplus -> .)
    DOT             shift and go to state 287
    NAME            reduce using rule 99 (dotstar -> .)

    dotstar                        shift and go to state 285
    dotplus                        shift and go to state 286

state 195

    (203) atom -> BACKQUOTE testlist1 BACKQUOTE .

    LPAREN          reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LSQB            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    DOT             reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    STARSTAR        reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    STAR            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SLASH           reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PERCENT         reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SLASHSLASH      reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PLUS            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    MINUS           reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LEFTSHIFT       reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RIGHTSHIFT      reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AMPER           reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    CIRCUMFLEX      reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    VBAR            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LESS            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    GREATER         reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    EQEQUAL         reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    GREATEREQUAL    reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    LESSEQUAL       reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    NOTEQUAL        reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    IN              reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    NOT             reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    IS              reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AND             reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    OR              reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    IF              reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    COMMA           reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    BACKQUOTE       reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    EQUAL           reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PLUSEQUAL       reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    MINEQUAL        reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    STAREQUAL       reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SLASHEQUAL      reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    PERCENTEQUAL    reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    STARSTAREQUAL   reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SLASHSLASHEQUAL reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    NEWLINE         reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    SEMI            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RSQB            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    COLON           reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RPAREN          reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    FOR             reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    AS              reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    RBRACE          reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)
    ELSE            reduce using rule 203 (atom -> BACKQUOTE testlist1 BACKQUOTE .)


state 196

    (289) testlist1 -> test COMMA . testlist1
    (288) testlist1 -> . test
    (289) testlist1 -> . test COMMA testlist1
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    testlist1                      shift and go to state 288
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 90
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 197

    (135) with_item_list -> COMMA . with_item with_item_list
    (136) with_item -> . test
    (137) with_item -> . test AS target
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    with_item                      shift and go to state 289
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 92
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 198

    (133) with_stmt -> WITH with_item with_item_list . COLON suite

    COLON           shift and go to state 290


state 199

    (137) with_item -> test AS . target
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NAME            shift and go to state 132
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    target                         shift and go to state 291
    stringlist                     shift and go to state 35
    atom                           shift and go to state 130

state 200

    (185) factorlist -> SLASHSLASH factor . factorlist
    (181) factorlist -> .
    (182) factorlist -> . STAR factor factorlist
    (183) factorlist -> . SLASH factor factorlist
    (184) factorlist -> . PERCENT factor factorlist
    (185) factorlist -> . SLASHSLASH factor factorlist

    PLUS            reduce using rule 181 (factorlist -> .)
    MINUS           reduce using rule 181 (factorlist -> .)
    LEFTSHIFT       reduce using rule 181 (factorlist -> .)
    RIGHTSHIFT      reduce using rule 181 (factorlist -> .)
    AMPER           reduce using rule 181 (factorlist -> .)
    CIRCUMFLEX      reduce using rule 181 (factorlist -> .)
    VBAR            reduce using rule 181 (factorlist -> .)
    LESS            reduce using rule 181 (factorlist -> .)
    GREATER         reduce using rule 181 (factorlist -> .)
    EQEQUAL         reduce using rule 181 (factorlist -> .)
    GREATEREQUAL    reduce using rule 181 (factorlist -> .)
    LESSEQUAL       reduce using rule 181 (factorlist -> .)
    NOTEQUAL        reduce using rule 181 (factorlist -> .)
    IN              reduce using rule 181 (factorlist -> .)
    NOT             reduce using rule 181 (factorlist -> .)
    IS              reduce using rule 181 (factorlist -> .)
    AND             reduce using rule 181 (factorlist -> .)
    OR              reduce using rule 181 (factorlist -> .)
    IF              reduce using rule 181 (factorlist -> .)
    COMMA           reduce using rule 181 (factorlist -> .)
    EQUAL           reduce using rule 181 (factorlist -> .)
    PLUSEQUAL       reduce using rule 181 (factorlist -> .)
    MINEQUAL        reduce using rule 181 (factorlist -> .)
    STAREQUAL       reduce using rule 181 (factorlist -> .)
    SLASHEQUAL      reduce using rule 181 (factorlist -> .)
    PERCENTEQUAL    reduce using rule 181 (factorlist -> .)
    STARSTAREQUAL   reduce using rule 181 (factorlist -> .)
    SLASHSLASHEQUAL reduce using rule 181 (factorlist -> .)
    NEWLINE         reduce using rule 181 (factorlist -> .)
    SEMI            reduce using rule 181 (factorlist -> .)
    BACKQUOTE       reduce using rule 181 (factorlist -> .)
    AS              reduce using rule 181 (factorlist -> .)
    COLON           reduce using rule 181 (factorlist -> .)
    FOR             reduce using rule 181 (factorlist -> .)
    RBRACE          reduce using rule 181 (factorlist -> .)
    RSQB            reduce using rule 181 (factorlist -> .)
    RPAREN          reduce using rule 181 (factorlist -> .)
    ELSE            reduce using rule 181 (factorlist -> .)
    STAR            shift and go to state 96
    SLASH           shift and go to state 99
    PERCENT         shift and go to state 97
    SLASHSLASH      shift and go to state 95

    factorlist                     shift and go to state 292

state 201

    (182) factorlist -> STAR factor . factorlist
    (181) factorlist -> .
    (182) factorlist -> . STAR factor factorlist
    (183) factorlist -> . SLASH factor factorlist
    (184) factorlist -> . PERCENT factor factorlist
    (185) factorlist -> . SLASHSLASH factor factorlist

    PLUS            reduce using rule 181 (factorlist -> .)
    MINUS           reduce using rule 181 (factorlist -> .)
    LEFTSHIFT       reduce using rule 181 (factorlist -> .)
    RIGHTSHIFT      reduce using rule 181 (factorlist -> .)
    AMPER           reduce using rule 181 (factorlist -> .)
    CIRCUMFLEX      reduce using rule 181 (factorlist -> .)
    VBAR            reduce using rule 181 (factorlist -> .)
    LESS            reduce using rule 181 (factorlist -> .)
    GREATER         reduce using rule 181 (factorlist -> .)
    EQEQUAL         reduce using rule 181 (factorlist -> .)
    GREATEREQUAL    reduce using rule 181 (factorlist -> .)
    LESSEQUAL       reduce using rule 181 (factorlist -> .)
    NOTEQUAL        reduce using rule 181 (factorlist -> .)
    IN              reduce using rule 181 (factorlist -> .)
    NOT             reduce using rule 181 (factorlist -> .)
    IS              reduce using rule 181 (factorlist -> .)
    AND             reduce using rule 181 (factorlist -> .)
    OR              reduce using rule 181 (factorlist -> .)
    IF              reduce using rule 181 (factorlist -> .)
    COMMA           reduce using rule 181 (factorlist -> .)
    EQUAL           reduce using rule 181 (factorlist -> .)
    PLUSEQUAL       reduce using rule 181 (factorlist -> .)
    MINEQUAL        reduce using rule 181 (factorlist -> .)
    STAREQUAL       reduce using rule 181 (factorlist -> .)
    SLASHEQUAL      reduce using rule 181 (factorlist -> .)
    PERCENTEQUAL    reduce using rule 181 (factorlist -> .)
    STARSTAREQUAL   reduce using rule 181 (factorlist -> .)
    SLASHSLASHEQUAL reduce using rule 181 (factorlist -> .)
    NEWLINE         reduce using rule 181 (factorlist -> .)
    SEMI            reduce using rule 181 (factorlist -> .)
    BACKQUOTE       reduce using rule 181 (factorlist -> .)
    AS              reduce using rule 181 (factorlist -> .)
    COLON           reduce using rule 181 (factorlist -> .)
    FOR             reduce using rule 181 (factorlist -> .)
    RBRACE          reduce using rule 181 (factorlist -> .)
    RSQB            reduce using rule 181 (factorlist -> .)
    RPAREN          reduce using rule 181 (factorlist -> .)
    ELSE            reduce using rule 181 (factorlist -> .)
    STAR            shift and go to state 96
    SLASH           shift and go to state 99
    PERCENT         shift and go to state 97
    SLASHSLASH      shift and go to state 95

    factorlist                     shift and go to state 293

state 202

    (184) factorlist -> PERCENT factor . factorlist
    (181) factorlist -> .
    (182) factorlist -> . STAR factor factorlist
    (183) factorlist -> . SLASH factor factorlist
    (184) factorlist -> . PERCENT factor factorlist
    (185) factorlist -> . SLASHSLASH factor factorlist

    PLUS            reduce using rule 181 (factorlist -> .)
    MINUS           reduce using rule 181 (factorlist -> .)
    LEFTSHIFT       reduce using rule 181 (factorlist -> .)
    RIGHTSHIFT      reduce using rule 181 (factorlist -> .)
    AMPER           reduce using rule 181 (factorlist -> .)
    CIRCUMFLEX      reduce using rule 181 (factorlist -> .)
    VBAR            reduce using rule 181 (factorlist -> .)
    LESS            reduce using rule 181 (factorlist -> .)
    GREATER         reduce using rule 181 (factorlist -> .)
    EQEQUAL         reduce using rule 181 (factorlist -> .)
    GREATEREQUAL    reduce using rule 181 (factorlist -> .)
    LESSEQUAL       reduce using rule 181 (factorlist -> .)
    NOTEQUAL        reduce using rule 181 (factorlist -> .)
    IN              reduce using rule 181 (factorlist -> .)
    NOT             reduce using rule 181 (factorlist -> .)
    IS              reduce using rule 181 (factorlist -> .)
    AND             reduce using rule 181 (factorlist -> .)
    OR              reduce using rule 181 (factorlist -> .)
    IF              reduce using rule 181 (factorlist -> .)
    COMMA           reduce using rule 181 (factorlist -> .)
    EQUAL           reduce using rule 181 (factorlist -> .)
    PLUSEQUAL       reduce using rule 181 (factorlist -> .)
    MINEQUAL        reduce using rule 181 (factorlist -> .)
    STAREQUAL       reduce using rule 181 (factorlist -> .)
    SLASHEQUAL      reduce using rule 181 (factorlist -> .)
    PERCENTEQUAL    reduce using rule 181 (factorlist -> .)
    STARSTAREQUAL   reduce using rule 181 (factorlist -> .)
    SLASHSLASHEQUAL reduce using rule 181 (factorlist -> .)
    NEWLINE         reduce using rule 181 (factorlist -> .)
    SEMI            reduce using rule 181 (factorlist -> .)
    BACKQUOTE       reduce using rule 181 (factorlist -> .)
    AS              reduce using rule 181 (factorlist -> .)
    COLON           reduce using rule 181 (factorlist -> .)
    FOR             reduce using rule 181 (factorlist -> .)
    RBRACE          reduce using rule 181 (factorlist -> .)
    RSQB            reduce using rule 181 (factorlist -> .)
    RPAREN          reduce using rule 181 (factorlist -> .)
    ELSE            reduce using rule 181 (factorlist -> .)
    STAR            shift and go to state 96
    SLASH           shift and go to state 99
    PERCENT         shift and go to state 97
    SLASHSLASH      shift and go to state 95

    factorlist                     shift and go to state 294

state 203

    (183) factorlist -> SLASH factor . factorlist
    (181) factorlist -> .
    (182) factorlist -> . STAR factor factorlist
    (183) factorlist -> . SLASH factor factorlist
    (184) factorlist -> . PERCENT factor factorlist
    (185) factorlist -> . SLASHSLASH factor factorlist

    PLUS            reduce using rule 181 (factorlist -> .)
    MINUS           reduce using rule 181 (factorlist -> .)
    LEFTSHIFT       reduce using rule 181 (factorlist -> .)
    RIGHTSHIFT      reduce using rule 181 (factorlist -> .)
    AMPER           reduce using rule 181 (factorlist -> .)
    CIRCUMFLEX      reduce using rule 181 (factorlist -> .)
    VBAR            reduce using rule 181 (factorlist -> .)
    LESS            reduce using rule 181 (factorlist -> .)
    GREATER         reduce using rule 181 (factorlist -> .)
    EQEQUAL         reduce using rule 181 (factorlist -> .)
    GREATEREQUAL    reduce using rule 181 (factorlist -> .)
    LESSEQUAL       reduce using rule 181 (factorlist -> .)
    NOTEQUAL        reduce using rule 181 (factorlist -> .)
    IN              reduce using rule 181 (factorlist -> .)
    NOT             reduce using rule 181 (factorlist -> .)
    IS              reduce using rule 181 (factorlist -> .)
    AND             reduce using rule 181 (factorlist -> .)
    OR              reduce using rule 181 (factorlist -> .)
    IF              reduce using rule 181 (factorlist -> .)
    COMMA           reduce using rule 181 (factorlist -> .)
    EQUAL           reduce using rule 181 (factorlist -> .)
    PLUSEQUAL       reduce using rule 181 (factorlist -> .)
    MINEQUAL        reduce using rule 181 (factorlist -> .)
    STAREQUAL       reduce using rule 181 (factorlist -> .)
    SLASHEQUAL      reduce using rule 181 (factorlist -> .)
    PERCENTEQUAL    reduce using rule 181 (factorlist -> .)
    STARSTAREQUAL   reduce using rule 181 (factorlist -> .)
    SLASHSLASHEQUAL reduce using rule 181 (factorlist -> .)
    NEWLINE         reduce using rule 181 (factorlist -> .)
    SEMI            reduce using rule 181 (factorlist -> .)
    BACKQUOTE       reduce using rule 181 (factorlist -> .)
    AS              reduce using rule 181 (factorlist -> .)
    COLON           reduce using rule 181 (factorlist -> .)
    FOR             reduce using rule 181 (factorlist -> .)
    RBRACE          reduce using rule 181 (factorlist -> .)
    RSQB            reduce using rule 181 (factorlist -> .)
    RPAREN          reduce using rule 181 (factorlist -> .)
    ELSE            reduce using rule 181 (factorlist -> .)
    STAR            shift and go to state 96
    SLASH           shift and go to state 99
    PERCENT         shift and go to state 97
    SLASHSLASH      shift and go to state 95

    factorlist                     shift and go to state 295

state 204

    (102) module -> NAME DOT . NAME

    NAME            shift and go to state 296


state 205

    (77) import_stmt -> IMPORT module AS . NAME modulelist

    NAME            shift and go to state 297


state 206

    (84) modulelist -> COMMA . module modulelist
    (85) modulelist -> COMMA . module AS NAME modulelist
    (101) module -> . NAME
    (102) module -> . NAME DOT NAME

    NAME            shift and go to state 100

    module                         shift and go to state 298

state 207

    (76) import_stmt -> IMPORT module modulelist .

    NEWLINE         reduce using rule 76 (import_stmt -> IMPORT module modulelist .)
    SEMI            reduce using rule 76 (import_stmt -> IMPORT module modulelist .)


state 208

    (58) exec_stmt -> EXEC expr IN . testlist
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 299
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 209

    (43) aug_stmt -> testlist augassign testlist .

    NEWLINE         reduce using rule 43 (aug_stmt -> testlist augassign testlist .)
    SEMI            reduce using rule 43 (aug_stmt -> testlist augassign testlist .)


state 210

    (46) assn_stmt -> testlist EQUAL assn_stmt .

    NEWLINE         reduce using rule 46 (assn_stmt -> testlist EQUAL assn_stmt .)
    SEMI            reduce using rule 46 (assn_stmt -> testlist EQUAL assn_stmt .)


state 211

    (45) assn_stmt -> testlist .
    (46) assn_stmt -> testlist . EQUAL assn_stmt

    NEWLINE         reduce using rule 45 (assn_stmt -> testlist .)
    SEMI            reduce using rule 45 (assn_stmt -> testlist .)
    EQUAL           shift and go to state 108


state 212

    (178) termlist -> PLUS term . termlist
    (177) termlist -> .
    (178) termlist -> . PLUS term termlist
    (179) termlist -> . MINUS term termlist

    LEFTSHIFT       reduce using rule 177 (termlist -> .)
    RIGHTSHIFT      reduce using rule 177 (termlist -> .)
    AMPER           reduce using rule 177 (termlist -> .)
    CIRCUMFLEX      reduce using rule 177 (termlist -> .)
    VBAR            reduce using rule 177 (termlist -> .)
    LESS            reduce using rule 177 (termlist -> .)
    GREATER         reduce using rule 177 (termlist -> .)
    EQEQUAL         reduce using rule 177 (termlist -> .)
    GREATEREQUAL    reduce using rule 177 (termlist -> .)
    LESSEQUAL       reduce using rule 177 (termlist -> .)
    NOTEQUAL        reduce using rule 177 (termlist -> .)
    IN              reduce using rule 177 (termlist -> .)
    NOT             reduce using rule 177 (termlist -> .)
    IS              reduce using rule 177 (termlist -> .)
    AND             reduce using rule 177 (termlist -> .)
    OR              reduce using rule 177 (termlist -> .)
    IF              reduce using rule 177 (termlist -> .)
    COMMA           reduce using rule 177 (termlist -> .)
    EQUAL           reduce using rule 177 (termlist -> .)
    PLUSEQUAL       reduce using rule 177 (termlist -> .)
    MINEQUAL        reduce using rule 177 (termlist -> .)
    STAREQUAL       reduce using rule 177 (termlist -> .)
    SLASHEQUAL      reduce using rule 177 (termlist -> .)
    PERCENTEQUAL    reduce using rule 177 (termlist -> .)
    STARSTAREQUAL   reduce using rule 177 (termlist -> .)
    SLASHSLASHEQUAL reduce using rule 177 (termlist -> .)
    NEWLINE         reduce using rule 177 (termlist -> .)
    SEMI            reduce using rule 177 (termlist -> .)
    BACKQUOTE       reduce using rule 177 (termlist -> .)
    AS              reduce using rule 177 (termlist -> .)
    COLON           reduce using rule 177 (termlist -> .)
    FOR             reduce using rule 177 (termlist -> .)
    RBRACE          reduce using rule 177 (termlist -> .)
    RSQB            reduce using rule 177 (termlist -> .)
    RPAREN          reduce using rule 177 (termlist -> .)
    ELSE            reduce using rule 177 (termlist -> .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 115

    termlist                       shift and go to state 300

state 213

    (179) termlist -> MINUS term . termlist
    (177) termlist -> .
    (178) termlist -> . PLUS term termlist
    (179) termlist -> . MINUS term termlist

    LEFTSHIFT       reduce using rule 177 (termlist -> .)
    RIGHTSHIFT      reduce using rule 177 (termlist -> .)
    AMPER           reduce using rule 177 (termlist -> .)
    CIRCUMFLEX      reduce using rule 177 (termlist -> .)
    VBAR            reduce using rule 177 (termlist -> .)
    LESS            reduce using rule 177 (termlist -> .)
    GREATER         reduce using rule 177 (termlist -> .)
    EQEQUAL         reduce using rule 177 (termlist -> .)
    GREATEREQUAL    reduce using rule 177 (termlist -> .)
    LESSEQUAL       reduce using rule 177 (termlist -> .)
    NOTEQUAL        reduce using rule 177 (termlist -> .)
    IN              reduce using rule 177 (termlist -> .)
    NOT             reduce using rule 177 (termlist -> .)
    IS              reduce using rule 177 (termlist -> .)
    AND             reduce using rule 177 (termlist -> .)
    OR              reduce using rule 177 (termlist -> .)
    IF              reduce using rule 177 (termlist -> .)
    COMMA           reduce using rule 177 (termlist -> .)
    EQUAL           reduce using rule 177 (termlist -> .)
    PLUSEQUAL       reduce using rule 177 (termlist -> .)
    MINEQUAL        reduce using rule 177 (termlist -> .)
    STAREQUAL       reduce using rule 177 (termlist -> .)
    SLASHEQUAL      reduce using rule 177 (termlist -> .)
    PERCENTEQUAL    reduce using rule 177 (termlist -> .)
    STARSTAREQUAL   reduce using rule 177 (termlist -> .)
    SLASHSLASHEQUAL reduce using rule 177 (termlist -> .)
    NEWLINE         reduce using rule 177 (termlist -> .)
    SEMI            reduce using rule 177 (termlist -> .)
    BACKQUOTE       reduce using rule 177 (termlist -> .)
    AS              reduce using rule 177 (termlist -> .)
    COLON           reduce using rule 177 (termlist -> .)
    FOR             reduce using rule 177 (termlist -> .)
    RBRACE          reduce using rule 177 (termlist -> .)
    RSQB            reduce using rule 177 (termlist -> .)
    RPAREN          reduce using rule 177 (termlist -> .)
    ELSE            reduce using rule 177 (termlist -> .)
    PLUS            shift and go to state 113
    MINUS           shift and go to state 115

    termlist                       shift and go to state 301

state 214

    (141) test -> or_test IF or_test . ELSE test

    ELSE            shift and go to state 302


state 215

    (253) exprlist -> expr COMMA .
    (254) exprlist -> expr COMMA . exprlist
    (252) exprlist -> . expr
    (253) exprlist -> . expr COMMA
    (254) exprlist -> . expr COMMA exprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         reduce using rule 253 (exprlist -> expr COMMA .)
    SEMI            reduce using rule 253 (exprlist -> expr COMMA .)
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    exprlist                       shift and go to state 303
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 118

state 216

    (12) funcdef -> DEF NAME parameters . COLON suite

    COLON           shift and go to state 304


state 217

    (13) parameters -> LPAREN . varargslist RPAREN
    (14) varargslist -> .
    (15) varargslist -> . fpdef EQUAL test fpdeflist COMMA
    (16) varargslist -> . fpdef EQUAL test fpdeflist
    (17) varargslist -> . fpdef fpdeflist COMMA
    (18) varargslist -> . fpdef fpdeflist
    (22) fpdef -> . NAME
    (23) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 14 (varargslist -> .)
    NAME            shift and go to state 305
    LPAREN          shift and go to state 308

    fpdef                          shift and go to state 306
    varargslist                    shift and go to state 307

state 218

    (171) shiftexprlist -> AMPER shift_expr . shiftexprlist
    (170) shiftexprlist -> .
    (171) shiftexprlist -> . AMPER shift_expr shiftexprlist

    CIRCUMFLEX      reduce using rule 170 (shiftexprlist -> .)
    VBAR            reduce using rule 170 (shiftexprlist -> .)
    LESS            reduce using rule 170 (shiftexprlist -> .)
    GREATER         reduce using rule 170 (shiftexprlist -> .)
    EQEQUAL         reduce using rule 170 (shiftexprlist -> .)
    GREATEREQUAL    reduce using rule 170 (shiftexprlist -> .)
    LESSEQUAL       reduce using rule 170 (shiftexprlist -> .)
    NOTEQUAL        reduce using rule 170 (shiftexprlist -> .)
    IN              reduce using rule 170 (shiftexprlist -> .)
    NOT             reduce using rule 170 (shiftexprlist -> .)
    IS              reduce using rule 170 (shiftexprlist -> .)
    AND             reduce using rule 170 (shiftexprlist -> .)
    OR              reduce using rule 170 (shiftexprlist -> .)
    IF              reduce using rule 170 (shiftexprlist -> .)
    COMMA           reduce using rule 170 (shiftexprlist -> .)
    EQUAL           reduce using rule 170 (shiftexprlist -> .)
    PLUSEQUAL       reduce using rule 170 (shiftexprlist -> .)
    MINEQUAL        reduce using rule 170 (shiftexprlist -> .)
    STAREQUAL       reduce using rule 170 (shiftexprlist -> .)
    SLASHEQUAL      reduce using rule 170 (shiftexprlist -> .)
    PERCENTEQUAL    reduce using rule 170 (shiftexprlist -> .)
    STARSTAREQUAL   reduce using rule 170 (shiftexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 170 (shiftexprlist -> .)
    NEWLINE         reduce using rule 170 (shiftexprlist -> .)
    SEMI            reduce using rule 170 (shiftexprlist -> .)
    BACKQUOTE       reduce using rule 170 (shiftexprlist -> .)
    AS              reduce using rule 170 (shiftexprlist -> .)
    COLON           reduce using rule 170 (shiftexprlist -> .)
    FOR             reduce using rule 170 (shiftexprlist -> .)
    RBRACE          reduce using rule 170 (shiftexprlist -> .)
    RSQB            reduce using rule 170 (shiftexprlist -> .)
    RPAREN          reduce using rule 170 (shiftexprlist -> .)
    ELSE            reduce using rule 170 (shiftexprlist -> .)
    AMPER           shift and go to state 123

    shiftexprlist                  shift and go to state 309

state 219

    (302) target -> STAR target .

    COMMA           reduce using rule 302 (target -> STAR target .)
    RPAREN          reduce using rule 302 (target -> STAR target .)
    COLON           reduce using rule 302 (target -> STAR target .)
    RSQB            reduce using rule 302 (target -> STAR target .)
    IN              reduce using rule 302 (target -> STAR target .)


state 220

    (121) for_stmt -> FOR targetlist IN . testlist COLON suite
    (122) for_stmt -> FOR targetlist IN . testlist COLON suite ELSE COLON suite
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 310
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 221

    (296) target -> LPAREN targetlist . RPAREN

    RPAREN          shift and go to state 311


state 222

    (299) target -> atom . trailerlist DOT NAME
    (300) target -> atom . trailerlist LSQB testlist RSQB
    (301) target -> atom . trailerlist LSQB slice_list RSQB
    (190) power -> atom . trailerlist
    (191) power -> atom . trailerlist STARSTAR factor
    (194) trailerlist -> .
    (195) trailerlist -> . trailer trailerlist
    (228) trailer -> . LPAREN RPAREN
    (229) trailer -> . LPAREN arglist RPAREN
    (230) trailer -> . LSQB short_slice RSQB
    (231) trailer -> . LSQB slice_list RSQB
    (232) trailer -> . DOT NAME

  ! shift/reduce conflict for LSQB resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
    STARSTAR        reduce using rule 194 (trailerlist -> .)
    STAR            reduce using rule 194 (trailerlist -> .)
    SLASH           reduce using rule 194 (trailerlist -> .)
    PERCENT         reduce using rule 194 (trailerlist -> .)
    SLASHSLASH      reduce using rule 194 (trailerlist -> .)
    PLUS            reduce using rule 194 (trailerlist -> .)
    MINUS           reduce using rule 194 (trailerlist -> .)
    LEFTSHIFT       reduce using rule 194 (trailerlist -> .)
    RIGHTSHIFT      reduce using rule 194 (trailerlist -> .)
    AMPER           reduce using rule 194 (trailerlist -> .)
    CIRCUMFLEX      reduce using rule 194 (trailerlist -> .)
    VBAR            reduce using rule 194 (trailerlist -> .)
    LESS            reduce using rule 194 (trailerlist -> .)
    GREATER         reduce using rule 194 (trailerlist -> .)
    EQEQUAL         reduce using rule 194 (trailerlist -> .)
    GREATEREQUAL    reduce using rule 194 (trailerlist -> .)
    LESSEQUAL       reduce using rule 194 (trailerlist -> .)
    NOTEQUAL        reduce using rule 194 (trailerlist -> .)
    IN              reduce using rule 194 (trailerlist -> .)
    NOT             reduce using rule 194 (trailerlist -> .)
    IS              reduce using rule 194 (trailerlist -> .)
    AND             reduce using rule 194 (trailerlist -> .)
    OR              reduce using rule 194 (trailerlist -> .)
    IF              reduce using rule 194 (trailerlist -> .)
    COMMA           reduce using rule 194 (trailerlist -> .)
    RPAREN          reduce using rule 194 (trailerlist -> .)
    FOR             reduce using rule 194 (trailerlist -> .)
    RSQB            reduce using rule 194 (trailerlist -> .)
    LPAREN          shift and go to state 147
    LSQB            shift and go to state 148
    DOT             shift and go to state 146

  ! DOT             [ reduce using rule 194 (trailerlist -> .) ]
  ! LSQB            [ reduce using rule 194 (trailerlist -> .) ]

    trailerlist                    shift and go to state 312
    trailer                        shift and go to state 149

state 223

    (295) target -> NAME .
    (192) power -> NAME . trailerlist
    (193) power -> NAME . trailerlist STARSTAR factor
    (194) trailerlist -> .
    (195) trailerlist -> . trailer trailerlist
    (228) trailer -> . LPAREN RPAREN
    (229) trailer -> . LPAREN arglist RPAREN
    (230) trailer -> . LSQB short_slice RSQB
    (231) trailer -> . LSQB slice_list RSQB
    (232) trailer -> . DOT NAME

  ! reduce/reduce conflict for COMMA resolved using rule 194 (trailerlist -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 194 (trailerlist -> .)
  ! reduce/reduce conflict for RSQB resolved using rule 194 (trailerlist -> .)
    STARSTAR        reduce using rule 194 (trailerlist -> .)
    STAR            reduce using rule 194 (trailerlist -> .)
    SLASH           reduce using rule 194 (trailerlist -> .)
    PERCENT         reduce using rule 194 (trailerlist -> .)
    SLASHSLASH      reduce using rule 194 (trailerlist -> .)
    PLUS            reduce using rule 194 (trailerlist -> .)
    MINUS           reduce using rule 194 (trailerlist -> .)
    LEFTSHIFT       reduce using rule 194 (trailerlist -> .)
    RIGHTSHIFT      reduce using rule 194 (trailerlist -> .)
    AMPER           reduce using rule 194 (trailerlist -> .)
    CIRCUMFLEX      reduce using rule 194 (trailerlist -> .)
    VBAR            reduce using rule 194 (trailerlist -> .)
    LESS            reduce using rule 194 (trailerlist -> .)
    GREATER         reduce using rule 194 (trailerlist -> .)
    EQEQUAL         reduce using rule 194 (trailerlist -> .)
    GREATEREQUAL    reduce using rule 194 (trailerlist -> .)
    LESSEQUAL       reduce using rule 194 (trailerlist -> .)
    NOTEQUAL        reduce using rule 194 (trailerlist -> .)
    IN              reduce using rule 194 (trailerlist -> .)
    NOT             reduce using rule 194 (trailerlist -> .)
    IS              reduce using rule 194 (trailerlist -> .)
    AND             reduce using rule 194 (trailerlist -> .)
    OR              reduce using rule 194 (trailerlist -> .)
    IF              reduce using rule 194 (trailerlist -> .)
    COMMA           reduce using rule 194 (trailerlist -> .)
    RPAREN          reduce using rule 194 (trailerlist -> .)
    FOR             reduce using rule 194 (trailerlist -> .)
    RSQB            reduce using rule 194 (trailerlist -> .)
    LPAREN          shift and go to state 147
    LSQB            shift and go to state 148
    DOT             shift and go to state 146

  ! COMMA           [ reduce using rule 295 (target -> NAME .) ]
  ! RPAREN          [ reduce using rule 295 (target -> NAME .) ]
  ! RSQB            [ reduce using rule 295 (target -> NAME .) ]

    trailerlist                    shift and go to state 164
    trailer                        shift and go to state 149

state 224

    (299) target -> atom trailerlist . DOT NAME
    (300) target -> atom trailerlist . LSQB testlist RSQB
    (301) target -> atom trailerlist . LSQB slice_list RSQB

    DOT             shift and go to state 314
    LSQB            shift and go to state 313


state 225

    (297) target -> LSQB RSQB .
    (199) atom -> LSQB RSQB .

  ! reduce/reduce conflict for IN resolved using rule 199 (atom -> LSQB RSQB .)
  ! reduce/reduce conflict for COMMA resolved using rule 199 (atom -> LSQB RSQB .)
  ! reduce/reduce conflict for RPAREN resolved using rule 199 (atom -> LSQB RSQB .)
  ! reduce/reduce conflict for RSQB resolved using rule 199 (atom -> LSQB RSQB .)
    COLON           reduce using rule 297 (target -> LSQB RSQB .)
    LPAREN          reduce using rule 199 (atom -> LSQB RSQB .)
    LSQB            reduce using rule 199 (atom -> LSQB RSQB .)
    DOT             reduce using rule 199 (atom -> LSQB RSQB .)
    STARSTAR        reduce using rule 199 (atom -> LSQB RSQB .)
    STAR            reduce using rule 199 (atom -> LSQB RSQB .)
    SLASH           reduce using rule 199 (atom -> LSQB RSQB .)
    PERCENT         reduce using rule 199 (atom -> LSQB RSQB .)
    SLASHSLASH      reduce using rule 199 (atom -> LSQB RSQB .)
    PLUS            reduce using rule 199 (atom -> LSQB RSQB .)
    MINUS           reduce using rule 199 (atom -> LSQB RSQB .)
    LEFTSHIFT       reduce using rule 199 (atom -> LSQB RSQB .)
    RIGHTSHIFT      reduce using rule 199 (atom -> LSQB RSQB .)
    AMPER           reduce using rule 199 (atom -> LSQB RSQB .)
    CIRCUMFLEX      reduce using rule 199 (atom -> LSQB RSQB .)
    VBAR            reduce using rule 199 (atom -> LSQB RSQB .)
    LESS            reduce using rule 199 (atom -> LSQB RSQB .)
    GREATER         reduce using rule 199 (atom -> LSQB RSQB .)
    EQEQUAL         reduce using rule 199 (atom -> LSQB RSQB .)
    GREATEREQUAL    reduce using rule 199 (atom -> LSQB RSQB .)
    LESSEQUAL       reduce using rule 199 (atom -> LSQB RSQB .)
    NOTEQUAL        reduce using rule 199 (atom -> LSQB RSQB .)
    IN              reduce using rule 199 (atom -> LSQB RSQB .)
    NOT             reduce using rule 199 (atom -> LSQB RSQB .)
    IS              reduce using rule 199 (atom -> LSQB RSQB .)
    AND             reduce using rule 199 (atom -> LSQB RSQB .)
    OR              reduce using rule 199 (atom -> LSQB RSQB .)
    IF              reduce using rule 199 (atom -> LSQB RSQB .)
    COMMA           reduce using rule 199 (atom -> LSQB RSQB .)
    RPAREN          reduce using rule 199 (atom -> LSQB RSQB .)
    FOR             reduce using rule 199 (atom -> LSQB RSQB .)
    RSQB            reduce using rule 199 (atom -> LSQB RSQB .)

  ! COMMA           [ reduce using rule 297 (target -> LSQB RSQB .) ]
  ! RPAREN          [ reduce using rule 297 (target -> LSQB RSQB .) ]
  ! RSQB            [ reduce using rule 297 (target -> LSQB RSQB .) ]
  ! IN              [ reduce using rule 297 (target -> LSQB RSQB .) ]


state 226

    (298) target -> LSQB targetlist . RSQB

    RSQB            shift and go to state 315


state 227

    (293) targetlist -> target COMMA .
    (294) targetlist -> target COMMA . targetlist
    (292) targetlist -> . target
    (293) targetlist -> . target COMMA
    (294) targetlist -> . target COMMA targetlist
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RPAREN          reduce using rule 293 (targetlist -> target COMMA .)
    RSQB            reduce using rule 293 (targetlist -> target COMMA .)
    IN              reduce using rule 293 (targetlist -> target COMMA .)
    NAME            shift and go to state 132
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    target                         shift and go to state 133
    stringlist                     shift and go to state 35
    atom                           shift and go to state 130
    targetlist                     shift and go to state 316

state 228

    (139) suite -> NEWLINE . INDENT stmts DEDENT

    INDENT          shift and go to state 317


state 229

    (138) suite -> simple_stmt .

    ENDMARKER       reduce using rule 138 (suite -> simple_stmt .)
    NEWLINE         reduce using rule 138 (suite -> simple_stmt .)
    IF              reduce using rule 138 (suite -> simple_stmt .)
    FOR             reduce using rule 138 (suite -> simple_stmt .)
    WHILE           reduce using rule 138 (suite -> simple_stmt .)
    TRY             reduce using rule 138 (suite -> simple_stmt .)
    DEF             reduce using rule 138 (suite -> simple_stmt .)
    CLASS           reduce using rule 138 (suite -> simple_stmt .)
    WITH            reduce using rule 138 (suite -> simple_stmt .)
    PRINT           reduce using rule 138 (suite -> simple_stmt .)
    PASS            reduce using rule 138 (suite -> simple_stmt .)
    IMPORT          reduce using rule 138 (suite -> simple_stmt .)
    FROM            reduce using rule 138 (suite -> simple_stmt .)
    GLOBAL          reduce using rule 138 (suite -> simple_stmt .)
    ASSERT          reduce using rule 138 (suite -> simple_stmt .)
    DEL             reduce using rule 138 (suite -> simple_stmt .)
    EXEC            reduce using rule 138 (suite -> simple_stmt .)
    AT              reduce using rule 138 (suite -> simple_stmt .)
    BREAK           reduce using rule 138 (suite -> simple_stmt .)
    CONTINUE        reduce using rule 138 (suite -> simple_stmt .)
    RETURN          reduce using rule 138 (suite -> simple_stmt .)
    RAISE           reduce using rule 138 (suite -> simple_stmt .)
    YIELD           reduce using rule 138 (suite -> simple_stmt .)
    NOT             reduce using rule 138 (suite -> simple_stmt .)
    PLUS            reduce using rule 138 (suite -> simple_stmt .)
    MINUS           reduce using rule 138 (suite -> simple_stmt .)
    TILDE           reduce using rule 138 (suite -> simple_stmt .)
    NAME            reduce using rule 138 (suite -> simple_stmt .)
    LPAREN          reduce using rule 138 (suite -> simple_stmt .)
    LSQB            reduce using rule 138 (suite -> simple_stmt .)
    LBRACE          reduce using rule 138 (suite -> simple_stmt .)
    BACKQUOTE       reduce using rule 138 (suite -> simple_stmt .)
    NUMBER          reduce using rule 138 (suite -> simple_stmt .)
    FNUMBER         reduce using rule 138 (suite -> simple_stmt .)
    HEXADECIMALNUMBER reduce using rule 138 (suite -> simple_stmt .)
    OCTALNUMBER     reduce using rule 138 (suite -> simple_stmt .)
    BINARYNUMBER    reduce using rule 138 (suite -> simple_stmt .)
    STRING          reduce using rule 138 (suite -> simple_stmt .)
    TRIPLESTRING    reduce using rule 138 (suite -> simple_stmt .)
    DEDENT          reduce using rule 138 (suite -> simple_stmt .)
    ELSE            reduce using rule 138 (suite -> simple_stmt .)
    FINALLY         reduce using rule 138 (suite -> simple_stmt .)
    EXCEPT          reduce using rule 138 (suite -> simple_stmt .)
    ELIF            reduce using rule 138 (suite -> simple_stmt .)


state 230

    (123) try_stmt -> TRY COLON suite . except_stmt except_list
    (124) try_stmt -> TRY COLON suite . except_stmt except_list ELSE COLON suite
    (125) try_stmt -> TRY COLON suite . except_stmt except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> TRY COLON suite . except_stmt except_list FINALLY COLON suite
    (127) try_stmt -> TRY COLON suite . FINALLY COLON suite
    (130) except_stmt -> . EXCEPT COLON suite
    (131) except_stmt -> . EXCEPT NAME namelist COLON suite
    (132) except_stmt -> . EXCEPT NAME AS NAME COLON suite

    FINALLY         shift and go to state 319
    EXCEPT          shift and go to state 318

    except_stmt                    shift and go to state 320

state 231

    (144) ortestlist -> OR and_test . ortestlist
    (143) ortestlist -> .
    (144) ortestlist -> . OR and_test ortestlist

    IF              reduce using rule 143 (ortestlist -> .)
    COMMA           reduce using rule 143 (ortestlist -> .)
    EQUAL           reduce using rule 143 (ortestlist -> .)
    PLUSEQUAL       reduce using rule 143 (ortestlist -> .)
    MINEQUAL        reduce using rule 143 (ortestlist -> .)
    STAREQUAL       reduce using rule 143 (ortestlist -> .)
    SLASHEQUAL      reduce using rule 143 (ortestlist -> .)
    PERCENTEQUAL    reduce using rule 143 (ortestlist -> .)
    STARSTAREQUAL   reduce using rule 143 (ortestlist -> .)
    SLASHSLASHEQUAL reduce using rule 143 (ortestlist -> .)
    NEWLINE         reduce using rule 143 (ortestlist -> .)
    SEMI            reduce using rule 143 (ortestlist -> .)
    BACKQUOTE       reduce using rule 143 (ortestlist -> .)
    AS              reduce using rule 143 (ortestlist -> .)
    COLON           reduce using rule 143 (ortestlist -> .)
    FOR             reduce using rule 143 (ortestlist -> .)
    RBRACE          reduce using rule 143 (ortestlist -> .)
    RSQB            reduce using rule 143 (ortestlist -> .)
    RPAREN          reduce using rule 143 (ortestlist -> .)
    ELSE            reduce using rule 143 (ortestlist -> .)
    OR              shift and go to state 136

    ortestlist                     shift and go to state 321

state 232

    (202) atom -> LBRACE dictorsetmaker RBRACE .

    LPAREN          reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    LSQB            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    DOT             reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    STARSTAR        reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    STAR            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    SLASH           reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    PERCENT         reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    SLASHSLASH      reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    PLUS            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    MINUS           reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    LEFTSHIFT       reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    RIGHTSHIFT      reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    AMPER           reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    CIRCUMFLEX      reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    VBAR            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    LESS            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    GREATER         reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    EQEQUAL         reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    GREATEREQUAL    reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    LESSEQUAL       reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    NOTEQUAL        reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    IN              reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    NOT             reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    IS              reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    AND             reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    OR              reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    IF              reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    COMMA           reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    BACKQUOTE       reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    EQUAL           reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    PLUSEQUAL       reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    MINEQUAL        reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    STAREQUAL       reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    SLASHEQUAL      reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    PERCENTEQUAL    reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    STARSTAREQUAL   reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    SLASHSLASHEQUAL reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    NEWLINE         reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    SEMI            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    RSQB            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    COLON           reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    RPAREN          reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    FOR             reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    AS              reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    RBRACE          reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)
    ELSE            reduce using rule 202 (atom -> LBRACE dictorsetmaker RBRACE .)


state 233

    (284) comp_for -> FOR . targetlist IN or_test
    (285) comp_for -> FOR . targetlist IN or_test comp_iter
    (292) targetlist -> . target
    (293) targetlist -> . target COMMA
    (294) targetlist -> . target COMMA targetlist
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NAME            shift and go to state 132
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    target                         shift and go to state 133
    stringlist                     shift and go to state 35
    atom                           shift and go to state 130
    targetlist                     shift and go to state 322

state 234

    (259) dictorsetmaker -> test comp_for .

    RBRACE          reduce using rule 259 (dictorsetmaker -> test comp_for .)


state 235

    (258) dictorsetmaker -> test COLON . test comp_for
    (262) testcolonlist -> test COLON . test
    (263) testcolonlist -> test COLON . test COMMA
    (264) testcolonlist -> test COLON . test COMMA testcolonlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 323
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 236

    (174) arithexprlist -> LEFTSHIFT arith_expr . arithexprlist
    (173) arithexprlist -> .
    (174) arithexprlist -> . LEFTSHIFT arith_expr arithexprlist
    (175) arithexprlist -> . RIGHTSHIFT arith_expr arithexprlist

    AMPER           reduce using rule 173 (arithexprlist -> .)
    CIRCUMFLEX      reduce using rule 173 (arithexprlist -> .)
    VBAR            reduce using rule 173 (arithexprlist -> .)
    LESS            reduce using rule 173 (arithexprlist -> .)
    GREATER         reduce using rule 173 (arithexprlist -> .)
    EQEQUAL         reduce using rule 173 (arithexprlist -> .)
    GREATEREQUAL    reduce using rule 173 (arithexprlist -> .)
    LESSEQUAL       reduce using rule 173 (arithexprlist -> .)
    NOTEQUAL        reduce using rule 173 (arithexprlist -> .)
    IN              reduce using rule 173 (arithexprlist -> .)
    NOT             reduce using rule 173 (arithexprlist -> .)
    IS              reduce using rule 173 (arithexprlist -> .)
    AND             reduce using rule 173 (arithexprlist -> .)
    OR              reduce using rule 173 (arithexprlist -> .)
    IF              reduce using rule 173 (arithexprlist -> .)
    COMMA           reduce using rule 173 (arithexprlist -> .)
    EQUAL           reduce using rule 173 (arithexprlist -> .)
    PLUSEQUAL       reduce using rule 173 (arithexprlist -> .)
    MINEQUAL        reduce using rule 173 (arithexprlist -> .)
    STAREQUAL       reduce using rule 173 (arithexprlist -> .)
    SLASHEQUAL      reduce using rule 173 (arithexprlist -> .)
    PERCENTEQUAL    reduce using rule 173 (arithexprlist -> .)
    STARSTAREQUAL   reduce using rule 173 (arithexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 173 (arithexprlist -> .)
    NEWLINE         reduce using rule 173 (arithexprlist -> .)
    SEMI            reduce using rule 173 (arithexprlist -> .)
    BACKQUOTE       reduce using rule 173 (arithexprlist -> .)
    AS              reduce using rule 173 (arithexprlist -> .)
    COLON           reduce using rule 173 (arithexprlist -> .)
    FOR             reduce using rule 173 (arithexprlist -> .)
    RBRACE          reduce using rule 173 (arithexprlist -> .)
    RSQB            reduce using rule 173 (arithexprlist -> .)
    RPAREN          reduce using rule 173 (arithexprlist -> .)
    ELSE            reduce using rule 173 (arithexprlist -> .)
    LEFTSHIFT       shift and go to state 142
    RIGHTSHIFT      shift and go to state 143

    arithexprlist                  shift and go to state 324

state 237

    (175) arithexprlist -> RIGHTSHIFT arith_expr . arithexprlist
    (173) arithexprlist -> .
    (174) arithexprlist -> . LEFTSHIFT arith_expr arithexprlist
    (175) arithexprlist -> . RIGHTSHIFT arith_expr arithexprlist

    AMPER           reduce using rule 173 (arithexprlist -> .)
    CIRCUMFLEX      reduce using rule 173 (arithexprlist -> .)
    VBAR            reduce using rule 173 (arithexprlist -> .)
    LESS            reduce using rule 173 (arithexprlist -> .)
    GREATER         reduce using rule 173 (arithexprlist -> .)
    EQEQUAL         reduce using rule 173 (arithexprlist -> .)
    GREATEREQUAL    reduce using rule 173 (arithexprlist -> .)
    LESSEQUAL       reduce using rule 173 (arithexprlist -> .)
    NOTEQUAL        reduce using rule 173 (arithexprlist -> .)
    IN              reduce using rule 173 (arithexprlist -> .)
    NOT             reduce using rule 173 (arithexprlist -> .)
    IS              reduce using rule 173 (arithexprlist -> .)
    AND             reduce using rule 173 (arithexprlist -> .)
    OR              reduce using rule 173 (arithexprlist -> .)
    IF              reduce using rule 173 (arithexprlist -> .)
    COMMA           reduce using rule 173 (arithexprlist -> .)
    EQUAL           reduce using rule 173 (arithexprlist -> .)
    PLUSEQUAL       reduce using rule 173 (arithexprlist -> .)
    MINEQUAL        reduce using rule 173 (arithexprlist -> .)
    STAREQUAL       reduce using rule 173 (arithexprlist -> .)
    SLASHEQUAL      reduce using rule 173 (arithexprlist -> .)
    PERCENTEQUAL    reduce using rule 173 (arithexprlist -> .)
    STARSTAREQUAL   reduce using rule 173 (arithexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 173 (arithexprlist -> .)
    NEWLINE         reduce using rule 173 (arithexprlist -> .)
    SEMI            reduce using rule 173 (arithexprlist -> .)
    BACKQUOTE       reduce using rule 173 (arithexprlist -> .)
    AS              reduce using rule 173 (arithexprlist -> .)
    COLON           reduce using rule 173 (arithexprlist -> .)
    FOR             reduce using rule 173 (arithexprlist -> .)
    RBRACE          reduce using rule 173 (arithexprlist -> .)
    RSQB            reduce using rule 173 (arithexprlist -> .)
    RPAREN          reduce using rule 173 (arithexprlist -> .)
    ELSE            reduce using rule 173 (arithexprlist -> .)
    LEFTSHIFT       shift and go to state 142
    RIGHTSHIFT      shift and go to state 143

    arithexprlist                  shift and go to state 325

state 238

    (191) power -> atom trailerlist STARSTAR . factor
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    factor                         shift and go to state 326
    atom                           shift and go to state 50
    stringlist                     shift and go to state 35

state 239

    (232) trailer -> DOT NAME .

    LPAREN          reduce using rule 232 (trailer -> DOT NAME .)
    LSQB            reduce using rule 232 (trailer -> DOT NAME .)
    DOT             reduce using rule 232 (trailer -> DOT NAME .)
    STARSTAR        reduce using rule 232 (trailer -> DOT NAME .)
    STAR            reduce using rule 232 (trailer -> DOT NAME .)
    SLASH           reduce using rule 232 (trailer -> DOT NAME .)
    PERCENT         reduce using rule 232 (trailer -> DOT NAME .)
    SLASHSLASH      reduce using rule 232 (trailer -> DOT NAME .)
    PLUS            reduce using rule 232 (trailer -> DOT NAME .)
    MINUS           reduce using rule 232 (trailer -> DOT NAME .)
    LEFTSHIFT       reduce using rule 232 (trailer -> DOT NAME .)
    RIGHTSHIFT      reduce using rule 232 (trailer -> DOT NAME .)
    AMPER           reduce using rule 232 (trailer -> DOT NAME .)
    CIRCUMFLEX      reduce using rule 232 (trailer -> DOT NAME .)
    VBAR            reduce using rule 232 (trailer -> DOT NAME .)
    LESS            reduce using rule 232 (trailer -> DOT NAME .)
    GREATER         reduce using rule 232 (trailer -> DOT NAME .)
    EQEQUAL         reduce using rule 232 (trailer -> DOT NAME .)
    GREATEREQUAL    reduce using rule 232 (trailer -> DOT NAME .)
    LESSEQUAL       reduce using rule 232 (trailer -> DOT NAME .)
    NOTEQUAL        reduce using rule 232 (trailer -> DOT NAME .)
    IN              reduce using rule 232 (trailer -> DOT NAME .)
    NOT             reduce using rule 232 (trailer -> DOT NAME .)
    IS              reduce using rule 232 (trailer -> DOT NAME .)
    AND             reduce using rule 232 (trailer -> DOT NAME .)
    OR              reduce using rule 232 (trailer -> DOT NAME .)
    IF              reduce using rule 232 (trailer -> DOT NAME .)
    COMMA           reduce using rule 232 (trailer -> DOT NAME .)
    RPAREN          reduce using rule 232 (trailer -> DOT NAME .)
    FOR             reduce using rule 232 (trailer -> DOT NAME .)
    RSQB            reduce using rule 232 (trailer -> DOT NAME .)
    EQUAL           reduce using rule 232 (trailer -> DOT NAME .)
    PLUSEQUAL       reduce using rule 232 (trailer -> DOT NAME .)
    MINEQUAL        reduce using rule 232 (trailer -> DOT NAME .)
    STAREQUAL       reduce using rule 232 (trailer -> DOT NAME .)
    SLASHEQUAL      reduce using rule 232 (trailer -> DOT NAME .)
    PERCENTEQUAL    reduce using rule 232 (trailer -> DOT NAME .)
    STARSTAREQUAL   reduce using rule 232 (trailer -> DOT NAME .)
    SLASHSLASHEQUAL reduce using rule 232 (trailer -> DOT NAME .)
    NEWLINE         reduce using rule 232 (trailer -> DOT NAME .)
    SEMI            reduce using rule 232 (trailer -> DOT NAME .)
    BACKQUOTE       reduce using rule 232 (trailer -> DOT NAME .)
    AS              reduce using rule 232 (trailer -> DOT NAME .)
    COLON           reduce using rule 232 (trailer -> DOT NAME .)
    RBRACE          reduce using rule 232 (trailer -> DOT NAME .)
    ELSE            reduce using rule 232 (trailer -> DOT NAME .)


state 240

    (229) trailer -> LPAREN arglist . RPAREN

    RPAREN          shift and go to state 327


state 241

    (228) trailer -> LPAREN RPAREN .

    LPAREN          reduce using rule 228 (trailer -> LPAREN RPAREN .)
    LSQB            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    DOT             reduce using rule 228 (trailer -> LPAREN RPAREN .)
    STARSTAR        reduce using rule 228 (trailer -> LPAREN RPAREN .)
    STAR            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    SLASH           reduce using rule 228 (trailer -> LPAREN RPAREN .)
    PERCENT         reduce using rule 228 (trailer -> LPAREN RPAREN .)
    SLASHSLASH      reduce using rule 228 (trailer -> LPAREN RPAREN .)
    PLUS            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    MINUS           reduce using rule 228 (trailer -> LPAREN RPAREN .)
    LEFTSHIFT       reduce using rule 228 (trailer -> LPAREN RPAREN .)
    RIGHTSHIFT      reduce using rule 228 (trailer -> LPAREN RPAREN .)
    AMPER           reduce using rule 228 (trailer -> LPAREN RPAREN .)
    CIRCUMFLEX      reduce using rule 228 (trailer -> LPAREN RPAREN .)
    VBAR            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    LESS            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    GREATER         reduce using rule 228 (trailer -> LPAREN RPAREN .)
    EQEQUAL         reduce using rule 228 (trailer -> LPAREN RPAREN .)
    GREATEREQUAL    reduce using rule 228 (trailer -> LPAREN RPAREN .)
    LESSEQUAL       reduce using rule 228 (trailer -> LPAREN RPAREN .)
    NOTEQUAL        reduce using rule 228 (trailer -> LPAREN RPAREN .)
    IN              reduce using rule 228 (trailer -> LPAREN RPAREN .)
    NOT             reduce using rule 228 (trailer -> LPAREN RPAREN .)
    IS              reduce using rule 228 (trailer -> LPAREN RPAREN .)
    AND             reduce using rule 228 (trailer -> LPAREN RPAREN .)
    OR              reduce using rule 228 (trailer -> LPAREN RPAREN .)
    IF              reduce using rule 228 (trailer -> LPAREN RPAREN .)
    COMMA           reduce using rule 228 (trailer -> LPAREN RPAREN .)
    RPAREN          reduce using rule 228 (trailer -> LPAREN RPAREN .)
    FOR             reduce using rule 228 (trailer -> LPAREN RPAREN .)
    RSQB            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    EQUAL           reduce using rule 228 (trailer -> LPAREN RPAREN .)
    PLUSEQUAL       reduce using rule 228 (trailer -> LPAREN RPAREN .)
    MINEQUAL        reduce using rule 228 (trailer -> LPAREN RPAREN .)
    STAREQUAL       reduce using rule 228 (trailer -> LPAREN RPAREN .)
    SLASHEQUAL      reduce using rule 228 (trailer -> LPAREN RPAREN .)
    PERCENTEQUAL    reduce using rule 228 (trailer -> LPAREN RPAREN .)
    STARSTAREQUAL   reduce using rule 228 (trailer -> LPAREN RPAREN .)
    SLASHSLASHEQUAL reduce using rule 228 (trailer -> LPAREN RPAREN .)
    NEWLINE         reduce using rule 228 (trailer -> LPAREN RPAREN .)
    SEMI            reduce using rule 228 (trailer -> LPAREN RPAREN .)
    BACKQUOTE       reduce using rule 228 (trailer -> LPAREN RPAREN .)
    AS              reduce using rule 228 (trailer -> LPAREN RPAREN .)
    COLON           reduce using rule 228 (trailer -> LPAREN RPAREN .)
    RBRACE          reduce using rule 228 (trailer -> LPAREN RPAREN .)
    ELSE            reduce using rule 228 (trailer -> LPAREN RPAREN .)


state 242

    (279) argument -> test .
    (280) argument -> test . comp_for
    (281) argument -> test . EQUAL test
    (284) comp_for -> . FOR targetlist IN or_test
    (285) comp_for -> . FOR targetlist IN or_test comp_iter

    COMMA           reduce using rule 279 (argument -> test .)
    RPAREN          reduce using rule 279 (argument -> test .)
    EQUAL           shift and go to state 328
    FOR             shift and go to state 233

    comp_for                       shift and go to state 329

state 243

    (276) arglist1 -> argument .
    (277) arglist1 -> argument . COMMA
    (278) arglist1 -> argument . COMMA arglist1
    (273) arglist3 -> argument . COMMA arglist3

    RPAREN          reduce using rule 276 (arglist1 -> argument .)
    COMMA           shift and go to state 330


state 244

    (268) arglist -> arglist1 .

    RPAREN          reduce using rule 268 (arglist -> arglist1 .)


state 245

    (269) arglist -> arglist3 . STAR test arglist2 COMMA STAR STAR test
    (270) arglist -> arglist3 . STAR test arglist2
    (271) arglist -> arglist3 . STAR STAR test

    STAR            shift and go to state 331


state 246

    (251) ellipsis -> DOT . DOT DOT

    DOT             shift and go to state 332


state 247

    (231) trailer -> LSQB slice_list . RSQB

    RSQB            shift and go to state 333


state 248

    (244) short_slice -> COLON .
    (245) short_slice -> COLON . upper_bound
    (249) upper_bound -> . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    COLON           reduce using rule 244 (short_slice -> COLON .)
    COMMA           reduce using rule 244 (short_slice -> COLON .)
    RSQB            reduce using rule 244 (short_slice -> COLON .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 334
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    upper_bound                    shift and go to state 335
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 249

    (230) trailer -> LSQB short_slice . RSQB
    (240) proper_slice -> short_slice .
    (246) long_slice -> short_slice . COLON
    (247) long_slice -> short_slice . COLON stride

  ! shift/reduce conflict for RSQB resolved as shift
    RSQB            shift and go to state 337
    COMMA           reduce using rule 240 (proper_slice -> short_slice .)
    COLON           shift and go to state 336

  ! RSQB            [ reduce using rule 240 (proper_slice -> short_slice .) ]


state 250

    (248) lower_bound -> test .
    (237) slice_item -> test .

    COLON           reduce using rule 248 (lower_bound -> test .)
    COMMA           reduce using rule 237 (slice_item -> test .)
    RSQB            reduce using rule 237 (slice_item -> test .)


state 251

    (239) slice_item -> ellipsis .

    COMMA           reduce using rule 239 (slice_item -> ellipsis .)
    RSQB            reduce using rule 239 (slice_item -> ellipsis .)


state 252

    (242) short_slice -> lower_bound . COLON
    (243) short_slice -> lower_bound . COLON upper_bound

    COLON           shift and go to state 338


state 253

    (241) proper_slice -> long_slice .

    COMMA           reduce using rule 241 (proper_slice -> long_slice .)
    RSQB            reduce using rule 241 (proper_slice -> long_slice .)


state 254

    (238) slice_item -> proper_slice .

    COMMA           reduce using rule 238 (slice_item -> proper_slice .)
    RSQB            reduce using rule 238 (slice_item -> proper_slice .)


state 255

    (233) slice_list -> slice_item . slice_item_list
    (234) slice_item_list -> .
    (235) slice_item_list -> . COMMA
    (236) slice_item_list -> . COMMA slice_item slice_item_list

    RSQB            reduce using rule 234 (slice_item_list -> .)
    COMMA           shift and go to state 339

    slice_item_list                shift and go to state 340

state 256

    (195) trailerlist -> trailer trailerlist .

    DOT             reduce using rule 195 (trailerlist -> trailer trailerlist .)
    LSQB            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    STARSTAR        reduce using rule 195 (trailerlist -> trailer trailerlist .)
    STAR            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    SLASH           reduce using rule 195 (trailerlist -> trailer trailerlist .)
    PERCENT         reduce using rule 195 (trailerlist -> trailer trailerlist .)
    SLASHSLASH      reduce using rule 195 (trailerlist -> trailer trailerlist .)
    PLUS            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    MINUS           reduce using rule 195 (trailerlist -> trailer trailerlist .)
    LEFTSHIFT       reduce using rule 195 (trailerlist -> trailer trailerlist .)
    RIGHTSHIFT      reduce using rule 195 (trailerlist -> trailer trailerlist .)
    AMPER           reduce using rule 195 (trailerlist -> trailer trailerlist .)
    CIRCUMFLEX      reduce using rule 195 (trailerlist -> trailer trailerlist .)
    VBAR            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    LESS            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    GREATER         reduce using rule 195 (trailerlist -> trailer trailerlist .)
    EQEQUAL         reduce using rule 195 (trailerlist -> trailer trailerlist .)
    GREATEREQUAL    reduce using rule 195 (trailerlist -> trailer trailerlist .)
    LESSEQUAL       reduce using rule 195 (trailerlist -> trailer trailerlist .)
    NOTEQUAL        reduce using rule 195 (trailerlist -> trailer trailerlist .)
    IN              reduce using rule 195 (trailerlist -> trailer trailerlist .)
    NOT             reduce using rule 195 (trailerlist -> trailer trailerlist .)
    IS              reduce using rule 195 (trailerlist -> trailer trailerlist .)
    AND             reduce using rule 195 (trailerlist -> trailer trailerlist .)
    OR              reduce using rule 195 (trailerlist -> trailer trailerlist .)
    IF              reduce using rule 195 (trailerlist -> trailer trailerlist .)
    COMMA           reduce using rule 195 (trailerlist -> trailer trailerlist .)
    RPAREN          reduce using rule 195 (trailerlist -> trailer trailerlist .)
    FOR             reduce using rule 195 (trailerlist -> trailer trailerlist .)
    RSQB            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    EQUAL           reduce using rule 195 (trailerlist -> trailer trailerlist .)
    PLUSEQUAL       reduce using rule 195 (trailerlist -> trailer trailerlist .)
    MINEQUAL        reduce using rule 195 (trailerlist -> trailer trailerlist .)
    STAREQUAL       reduce using rule 195 (trailerlist -> trailer trailerlist .)
    SLASHEQUAL      reduce using rule 195 (trailerlist -> trailer trailerlist .)
    PERCENTEQUAL    reduce using rule 195 (trailerlist -> trailer trailerlist .)
    STARSTAREQUAL   reduce using rule 195 (trailerlist -> trailer trailerlist .)
    SLASHSLASHEQUAL reduce using rule 195 (trailerlist -> trailer trailerlist .)
    NEWLINE         reduce using rule 195 (trailerlist -> trailer trailerlist .)
    SEMI            reduce using rule 195 (trailerlist -> trailer trailerlist .)
    BACKQUOTE       reduce using rule 195 (trailerlist -> trailer trailerlist .)
    AS              reduce using rule 195 (trailerlist -> trailer trailerlist .)
    COLON           reduce using rule 195 (trailerlist -> trailer trailerlist .)
    RBRACE          reduce using rule 195 (trailerlist -> trailer trailerlist .)
    ELSE            reduce using rule 195 (trailerlist -> trailer trailerlist .)


state 257

    (32) small_stmts -> small_stmts SEMI small_stmt .

    NEWLINE         reduce using rule 32 (small_stmts -> small_stmts SEMI small_stmt .)
    SEMI            reduce using rule 32 (small_stmts -> small_stmts SEMI small_stmt .)


state 258

    (31) simple_stmt -> small_stmts SEMI NEWLINE .

    ENDMARKER       reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NEWLINE         reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IF              reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FOR             reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    WHILE           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    TRY             reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEF             reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    CLASS           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    WITH            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PRINT           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PASS            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    IMPORT          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FROM            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    GLOBAL          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ASSERT          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEL             reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    EXEC            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    AT              reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    BREAK           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    CONTINUE        reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    RETURN          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    RAISE           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    YIELD           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NOT             reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    PLUS            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    MINUS           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    TILDE           reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NAME            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LPAREN          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LSQB            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    LBRACE          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    BACKQUOTE       reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    NUMBER          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FNUMBER         reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    HEXADECIMALNUMBER reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    OCTALNUMBER     reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    BINARYNUMBER    reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    STRING          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    TRIPLESTRING    reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    DEDENT          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELIF            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    ELSE            reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    FINALLY         reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)
    EXCEPT          reduce using rule 31 (simple_stmt -> small_stmts SEMI NEWLINE .)


state 259

    (71) raise_stmt -> RAISE test COMMA . test
    (72) raise_stmt -> RAISE test COMMA . test COMMA test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 341
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 260

    (103) global_stmt -> GLOBAL NAME namelist .

    NEWLINE         reduce using rule 103 (global_stmt -> GLOBAL NAME namelist .)
    SEMI            reduce using rule 103 (global_stmt -> GLOBAL NAME namelist .)


state 261

    (105) namelist -> COMMA . NAME namelist

    NAME            shift and go to state 342


state 262

    (119) while_stmt -> WHILE test COLON . suite
    (120) while_stmt -> WHILE test COLON . suite ELSE COLON suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 343
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 263

    (165) xorexprlist -> VBAR xor_expr . xorexprlist
    (164) xorexprlist -> .
    (165) xorexprlist -> . VBAR xor_expr xorexprlist

    LESS            reduce using rule 164 (xorexprlist -> .)
    GREATER         reduce using rule 164 (xorexprlist -> .)
    EQEQUAL         reduce using rule 164 (xorexprlist -> .)
    GREATEREQUAL    reduce using rule 164 (xorexprlist -> .)
    LESSEQUAL       reduce using rule 164 (xorexprlist -> .)
    NOTEQUAL        reduce using rule 164 (xorexprlist -> .)
    IN              reduce using rule 164 (xorexprlist -> .)
    NOT             reduce using rule 164 (xorexprlist -> .)
    IS              reduce using rule 164 (xorexprlist -> .)
    AND             reduce using rule 164 (xorexprlist -> .)
    OR              reduce using rule 164 (xorexprlist -> .)
    IF              reduce using rule 164 (xorexprlist -> .)
    COMMA           reduce using rule 164 (xorexprlist -> .)
    EQUAL           reduce using rule 164 (xorexprlist -> .)
    PLUSEQUAL       reduce using rule 164 (xorexprlist -> .)
    MINEQUAL        reduce using rule 164 (xorexprlist -> .)
    STAREQUAL       reduce using rule 164 (xorexprlist -> .)
    SLASHEQUAL      reduce using rule 164 (xorexprlist -> .)
    PERCENTEQUAL    reduce using rule 164 (xorexprlist -> .)
    STARSTAREQUAL   reduce using rule 164 (xorexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 164 (xorexprlist -> .)
    NEWLINE         reduce using rule 164 (xorexprlist -> .)
    SEMI            reduce using rule 164 (xorexprlist -> .)
    BACKQUOTE       reduce using rule 164 (xorexprlist -> .)
    AS              reduce using rule 164 (xorexprlist -> .)
    COLON           reduce using rule 164 (xorexprlist -> .)
    FOR             reduce using rule 164 (xorexprlist -> .)
    RBRACE          reduce using rule 164 (xorexprlist -> .)
    RSQB            reduce using rule 164 (xorexprlist -> .)
    RPAREN          reduce using rule 164 (xorexprlist -> .)
    ELSE            reduce using rule 164 (xorexprlist -> .)
    VBAR            shift and go to state 158

    xorexprlist                    shift and go to state 344

state 264

    (200) atom -> LSQB listmaker RSQB .

    LPAREN          reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    LSQB            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    DOT             reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    STARSTAR        reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    STAR            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    SLASH           reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    PERCENT         reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    SLASHSLASH      reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    PLUS            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    MINUS           reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    LEFTSHIFT       reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    RIGHTSHIFT      reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    AMPER           reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    CIRCUMFLEX      reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    VBAR            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    LESS            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    GREATER         reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    EQEQUAL         reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    GREATEREQUAL    reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    LESSEQUAL       reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    NOTEQUAL        reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    IN              reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    NOT             reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    IS              reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    AND             reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    OR              reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    IF              reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    COMMA           reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    BACKQUOTE       reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    EQUAL           reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    PLUSEQUAL       reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    MINEQUAL        reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    STAREQUAL       reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    SLASHEQUAL      reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    PERCENTEQUAL    reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    STARSTAREQUAL   reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    SLASHSLASHEQUAL reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    NEWLINE         reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    SEMI            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    RSQB            reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    COLON           reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    RPAREN          reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    FOR             reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    AS              reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    RBRACE          reduce using rule 200 (atom -> LSQB listmaker RSQB .)
    ELSE            reduce using rule 200 (atom -> LSQB listmaker RSQB .)


state 265

    (219) list_for -> FOR . targetlist IN testlist_safe
    (220) list_for -> FOR . targetlist IN testlist_safe list_iter
    (292) targetlist -> . target
    (293) targetlist -> . target COMMA
    (294) targetlist -> . target COMMA targetlist
    (295) target -> . NAME
    (296) target -> . LPAREN targetlist RPAREN
    (297) target -> . LSQB RSQB
    (298) target -> . LSQB targetlist RSQB
    (299) target -> . atom trailerlist DOT NAME
    (300) target -> . atom trailerlist LSQB testlist RSQB
    (301) target -> . atom trailerlist LSQB slice_list RSQB
    (302) target -> . STAR target
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NAME            shift and go to state 132
    LPAREN          shift and go to state 129
    LSQB            shift and go to state 131
    STAR            shift and go to state 127
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    target                         shift and go to state 133
    stringlist                     shift and go to state 35
    atom                           shift and go to state 130
    targetlist                     shift and go to state 345

state 266

    (215) listmaker -> test list_for .

    RSQB            reduce using rule 215 (listmaker -> test list_for .)


state 267

    (193) power -> NAME trailerlist STARSTAR . factor
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    power                          shift and go to state 33
    atom                           shift and go to state 50
    factor                         shift and go to state 346
    stringlist                     shift and go to state 35

state 268

    (152) compexprlist -> comp_op expr . compexprlist
    (151) compexprlist -> .
    (152) compexprlist -> . comp_op expr compexprlist
    (153) comp_op -> . LESS
    (154) comp_op -> . GREATER
    (155) comp_op -> . EQEQUAL
    (156) comp_op -> . GREATEREQUAL
    (157) comp_op -> . LESSEQUAL
    (158) comp_op -> . NOTEQUAL
    (159) comp_op -> . IN
    (160) comp_op -> . NOT IN
    (161) comp_op -> . IS
    (162) comp_op -> . IS NOT

    AND             reduce using rule 151 (compexprlist -> .)
    OR              reduce using rule 151 (compexprlist -> .)
    IF              reduce using rule 151 (compexprlist -> .)
    COMMA           reduce using rule 151 (compexprlist -> .)
    EQUAL           reduce using rule 151 (compexprlist -> .)
    PLUSEQUAL       reduce using rule 151 (compexprlist -> .)
    MINEQUAL        reduce using rule 151 (compexprlist -> .)
    STAREQUAL       reduce using rule 151 (compexprlist -> .)
    SLASHEQUAL      reduce using rule 151 (compexprlist -> .)
    PERCENTEQUAL    reduce using rule 151 (compexprlist -> .)
    STARSTAREQUAL   reduce using rule 151 (compexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 151 (compexprlist -> .)
    NEWLINE         reduce using rule 151 (compexprlist -> .)
    SEMI            reduce using rule 151 (compexprlist -> .)
    BACKQUOTE       reduce using rule 151 (compexprlist -> .)
    AS              reduce using rule 151 (compexprlist -> .)
    COLON           reduce using rule 151 (compexprlist -> .)
    FOR             reduce using rule 151 (compexprlist -> .)
    RBRACE          reduce using rule 151 (compexprlist -> .)
    RSQB            reduce using rule 151 (compexprlist -> .)
    RPAREN          reduce using rule 151 (compexprlist -> .)
    ELSE            reduce using rule 151 (compexprlist -> .)
    LESS            shift and go to state 168
    GREATER         shift and go to state 167
    EQEQUAL         shift and go to state 175
    GREATEREQUAL    shift and go to state 170
    LESSEQUAL       shift and go to state 171
    NOTEQUAL        shift and go to state 165
    IN              shift and go to state 173
    NOT             shift and go to state 172
    IS              shift and go to state 169

    compexprlist                   shift and go to state 347
    comp_op                        shift and go to state 166

state 269

    (162) comp_op -> IS NOT .

    PLUS            reduce using rule 162 (comp_op -> IS NOT .)
    MINUS           reduce using rule 162 (comp_op -> IS NOT .)
    TILDE           reduce using rule 162 (comp_op -> IS NOT .)
    NAME            reduce using rule 162 (comp_op -> IS NOT .)
    LPAREN          reduce using rule 162 (comp_op -> IS NOT .)
    LSQB            reduce using rule 162 (comp_op -> IS NOT .)
    LBRACE          reduce using rule 162 (comp_op -> IS NOT .)
    BACKQUOTE       reduce using rule 162 (comp_op -> IS NOT .)
    NUMBER          reduce using rule 162 (comp_op -> IS NOT .)
    FNUMBER         reduce using rule 162 (comp_op -> IS NOT .)
    HEXADECIMALNUMBER reduce using rule 162 (comp_op -> IS NOT .)
    OCTALNUMBER     reduce using rule 162 (comp_op -> IS NOT .)
    BINARYNUMBER    reduce using rule 162 (comp_op -> IS NOT .)
    STRING          reduce using rule 162 (comp_op -> IS NOT .)
    TRIPLESTRING    reduce using rule 162 (comp_op -> IS NOT .)


state 270

    (160) comp_op -> NOT IN .

    PLUS            reduce using rule 160 (comp_op -> NOT IN .)
    MINUS           reduce using rule 160 (comp_op -> NOT IN .)
    TILDE           reduce using rule 160 (comp_op -> NOT IN .)
    NAME            reduce using rule 160 (comp_op -> NOT IN .)
    LPAREN          reduce using rule 160 (comp_op -> NOT IN .)
    LSQB            reduce using rule 160 (comp_op -> NOT IN .)
    LBRACE          reduce using rule 160 (comp_op -> NOT IN .)
    BACKQUOTE       reduce using rule 160 (comp_op -> NOT IN .)
    NUMBER          reduce using rule 160 (comp_op -> NOT IN .)
    FNUMBER         reduce using rule 160 (comp_op -> NOT IN .)
    HEXADECIMALNUMBER reduce using rule 160 (comp_op -> NOT IN .)
    OCTALNUMBER     reduce using rule 160 (comp_op -> NOT IN .)
    BINARYNUMBER    reduce using rule 160 (comp_op -> NOT IN .)
    STRING          reduce using rule 160 (comp_op -> NOT IN .)
    TRIPLESTRING    reduce using rule 160 (comp_op -> NOT IN .)


state 271

    (168) andexprlist -> CIRCUMFLEX and_expr . andexprlist
    (167) andexprlist -> .
    (168) andexprlist -> . CIRCUMFLEX and_expr andexprlist

    VBAR            reduce using rule 167 (andexprlist -> .)
    LESS            reduce using rule 167 (andexprlist -> .)
    GREATER         reduce using rule 167 (andexprlist -> .)
    EQEQUAL         reduce using rule 167 (andexprlist -> .)
    GREATEREQUAL    reduce using rule 167 (andexprlist -> .)
    LESSEQUAL       reduce using rule 167 (andexprlist -> .)
    NOTEQUAL        reduce using rule 167 (andexprlist -> .)
    IN              reduce using rule 167 (andexprlist -> .)
    NOT             reduce using rule 167 (andexprlist -> .)
    IS              reduce using rule 167 (andexprlist -> .)
    AND             reduce using rule 167 (andexprlist -> .)
    OR              reduce using rule 167 (andexprlist -> .)
    IF              reduce using rule 167 (andexprlist -> .)
    COMMA           reduce using rule 167 (andexprlist -> .)
    EQUAL           reduce using rule 167 (andexprlist -> .)
    PLUSEQUAL       reduce using rule 167 (andexprlist -> .)
    MINEQUAL        reduce using rule 167 (andexprlist -> .)
    STAREQUAL       reduce using rule 167 (andexprlist -> .)
    SLASHEQUAL      reduce using rule 167 (andexprlist -> .)
    PERCENTEQUAL    reduce using rule 167 (andexprlist -> .)
    STARSTAREQUAL   reduce using rule 167 (andexprlist -> .)
    SLASHSLASHEQUAL reduce using rule 167 (andexprlist -> .)
    NEWLINE         reduce using rule 167 (andexprlist -> .)
    SEMI            reduce using rule 167 (andexprlist -> .)
    BACKQUOTE       reduce using rule 167 (andexprlist -> .)
    AS              reduce using rule 167 (andexprlist -> .)
    COLON           reduce using rule 167 (andexprlist -> .)
    FOR             reduce using rule 167 (andexprlist -> .)
    RBRACE          reduce using rule 167 (andexprlist -> .)
    RSQB            reduce using rule 167 (andexprlist -> .)
    RPAREN          reduce using rule 167 (andexprlist -> .)
    ELSE            reduce using rule 167 (andexprlist -> .)
    CIRCUMFLEX      shift and go to state 176

    andexprlist                    shift and go to state 348

state 272

    (147) andtestlist -> AND not_test . andtestlist
    (146) andtestlist -> .
    (147) andtestlist -> . AND not_test andtestlist

    OR              reduce using rule 146 (andtestlist -> .)
    IF              reduce using rule 146 (andtestlist -> .)
    COMMA           reduce using rule 146 (andtestlist -> .)
    EQUAL           reduce using rule 146 (andtestlist -> .)
    PLUSEQUAL       reduce using rule 146 (andtestlist -> .)
    MINEQUAL        reduce using rule 146 (andtestlist -> .)
    STAREQUAL       reduce using rule 146 (andtestlist -> .)
    SLASHEQUAL      reduce using rule 146 (andtestlist -> .)
    PERCENTEQUAL    reduce using rule 146 (andtestlist -> .)
    STARSTAREQUAL   reduce using rule 146 (andtestlist -> .)
    SLASHSLASHEQUAL reduce using rule 146 (andtestlist -> .)
    NEWLINE         reduce using rule 146 (andtestlist -> .)
    SEMI            reduce using rule 146 (andtestlist -> .)
    BACKQUOTE       reduce using rule 146 (andtestlist -> .)
    AS              reduce using rule 146 (andtestlist -> .)
    COLON           reduce using rule 146 (andtestlist -> .)
    FOR             reduce using rule 146 (andtestlist -> .)
    RBRACE          reduce using rule 146 (andtestlist -> .)
    RSQB            reduce using rule 146 (andtestlist -> .)
    RPAREN          reduce using rule 146 (andtestlist -> .)
    ELSE            reduce using rule 146 (andtestlist -> .)
    AND             shift and go to state 179

    andtestlist                    shift and go to state 349

state 273

    (257) testlist -> test COMMA testlist .

    EQUAL           reduce using rule 257 (testlist -> test COMMA testlist .)
    PLUSEQUAL       reduce using rule 257 (testlist -> test COMMA testlist .)
    MINEQUAL        reduce using rule 257 (testlist -> test COMMA testlist .)
    STAREQUAL       reduce using rule 257 (testlist -> test COMMA testlist .)
    SLASHEQUAL      reduce using rule 257 (testlist -> test COMMA testlist .)
    PERCENTEQUAL    reduce using rule 257 (testlist -> test COMMA testlist .)
    STARSTAREQUAL   reduce using rule 257 (testlist -> test COMMA testlist .)
    SLASHSLASHEQUAL reduce using rule 257 (testlist -> test COMMA testlist .)
    NEWLINE         reduce using rule 257 (testlist -> test COMMA testlist .)
    SEMI            reduce using rule 257 (testlist -> test COMMA testlist .)
    COLON           reduce using rule 257 (testlist -> test COMMA testlist .)
    RPAREN          reduce using rule 257 (testlist -> test COMMA testlist .)
    RSQB            reduce using rule 257 (testlist -> test COMMA testlist .)
    RBRACE          reduce using rule 257 (testlist -> test COMMA testlist .)


state 274

    (265) classdef -> CLASS NAME COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 350
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 275

    (266) classdef -> CLASS NAME LPAREN . RPAREN COLON suite
    (267) classdef -> CLASS NAME LPAREN . testlist RPAREN COLON suite
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RPAREN          shift and go to state 351
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    testlist                       shift and go to state 352
    and_test                       shift and go to state 44
    test                           shift and go to state 77
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 276

    (5) decorator -> AT module NEWLINE .

    AT              reduce using rule 5 (decorator -> AT module NEWLINE .)
    CLASS           reduce using rule 5 (decorator -> AT module NEWLINE .)
    DEF             reduce using rule 5 (decorator -> AT module NEWLINE .)


state 277

    (6) decorator -> AT module LPAREN . RPAREN NEWLINE
    (7) decorator -> AT module LPAREN . arglist RPAREN NEWLINE
    (268) arglist -> . arglist1
    (269) arglist -> . arglist3 STAR test arglist2 COMMA STAR STAR test
    (270) arglist -> . arglist3 STAR test arglist2
    (271) arglist -> . arglist3 STAR STAR test
    (276) arglist1 -> . argument
    (277) arglist1 -> . argument COMMA
    (278) arglist1 -> . argument COMMA arglist1
    (272) arglist3 -> .
    (273) arglist3 -> . argument COMMA arglist3
    (279) argument -> . test
    (280) argument -> . test comp_for
    (281) argument -> . test EQUAL test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RPAREN          shift and go to state 354
    STAR            reduce using rule 272 (arglist3 -> .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    argument                       shift and go to state 243
    or_test                        shift and go to state 24
    not_test                       shift and go to state 75
    arglist                        shift and go to state 353
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 242
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    arglist1                       shift and go to state 244
    arglist3                       shift and go to state 245
    expr                           shift and go to state 70

state 278

    (197) atom -> LPAREN testlist_comp RPAREN .

    LPAREN          reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    LSQB            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    DOT             reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    STARSTAR        reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    STAR            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    SLASH           reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    PERCENT         reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    SLASHSLASH      reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    PLUS            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    MINUS           reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    LEFTSHIFT       reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    RIGHTSHIFT      reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    AMPER           reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    CIRCUMFLEX      reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    VBAR            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    LESS            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    GREATER         reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    EQEQUAL         reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    GREATEREQUAL    reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    LESSEQUAL       reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    NOTEQUAL        reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    IN              reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    NOT             reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    IS              reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    AND             reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    OR              reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    IF              reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    COMMA           reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    BACKQUOTE       reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    EQUAL           reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    PLUSEQUAL       reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    MINEQUAL        reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    STAREQUAL       reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    SLASHEQUAL      reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    PERCENTEQUAL    reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    STARSTAREQUAL   reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    SLASHSLASHEQUAL reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    NEWLINE         reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    SEMI            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    RSQB            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    COLON           reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    RPAREN          reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    FOR             reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    AS              reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    RBRACE          reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)
    ELSE            reduce using rule 197 (atom -> LPAREN testlist_comp RPAREN .)


state 279

    (198) atom -> LPAREN yield_expr RPAREN .

    LPAREN          reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    LSQB            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    DOT             reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    STARSTAR        reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    STAR            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    SLASH           reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    PERCENT         reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    SLASHSLASH      reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    PLUS            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    MINUS           reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    LEFTSHIFT       reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    RIGHTSHIFT      reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    AMPER           reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    CIRCUMFLEX      reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    VBAR            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    LESS            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    GREATER         reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    EQEQUAL         reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    GREATEREQUAL    reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    LESSEQUAL       reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    NOTEQUAL        reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    IN              reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    NOT             reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    IS              reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    AND             reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    OR              reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    IF              reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    COMMA           reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    BACKQUOTE       reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    EQUAL           reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    PLUSEQUAL       reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    MINEQUAL        reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    STAREQUAL       reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    SLASHEQUAL      reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    PERCENTEQUAL    reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    STARSTAREQUAL   reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    SLASHSLASHEQUAL reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    NEWLINE         reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    SEMI            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    RSQB            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    COLON           reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    RPAREN          reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    FOR             reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    AS              reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    RBRACE          reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)
    ELSE            reduce using rule 198 (atom -> LPAREN yield_expr RPAREN .)


state 280

    (115) if_stmt -> IF test COLON . suite elif_list
    (116) if_stmt -> IF test COLON . suite elif_list ELSE COLON suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    simple_stmt                    shift and go to state 229
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 355
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 281

    (78) import_stmt -> FROM relative_module IMPORT . NAME identlist
    (79) import_stmt -> FROM relative_module IMPORT . NAME AS NAME identlist
    (80) import_stmt -> FROM relative_module IMPORT . LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> FROM relative_module IMPORT . LPAREN NAME AS NAME identlist RPAREN

    NAME            shift and go to state 356
    LPAREN          shift and go to state 357


state 282

    (94) relative_module -> NAME DOT . NAME
    (102) module -> NAME DOT . NAME

    NAME            shift and go to state 358


state 283

    (82) import_stmt -> FROM module IMPORT . STAR

    STAR            shift and go to state 359


state 284

    (95) relative_module -> dotstar module .

    IMPORT          reduce using rule 95 (relative_module -> dotstar module .)


state 285

    (100) dotstar -> DOT dotstar .

    NAME            reduce using rule 100 (dotstar -> DOT dotstar .)


state 286

    (96) relative_module -> DOT dotplus .

    IMPORT          reduce using rule 96 (relative_module -> DOT dotplus .)


state 287

    (98) dotplus -> DOT . dotplus
    (100) dotstar -> DOT . dotstar
    (97) dotplus -> .
    (98) dotplus -> . DOT dotplus
    (99) dotstar -> .
    (100) dotstar -> . DOT dotstar

    IMPORT          reduce using rule 97 (dotplus -> .)
    DOT             shift and go to state 287
    NAME            reduce using rule 99 (dotstar -> .)

    dotstar                        shift and go to state 285
    dotplus                        shift and go to state 360

state 288

    (289) testlist1 -> test COMMA testlist1 .

    BACKQUOTE       reduce using rule 289 (testlist1 -> test COMMA testlist1 .)


state 289

    (135) with_item_list -> COMMA with_item . with_item_list
    (134) with_item_list -> .
    (135) with_item_list -> . COMMA with_item with_item_list

    COLON           reduce using rule 134 (with_item_list -> .)
    COMMA           shift and go to state 197

    with_item_list                 shift and go to state 361

state 290

    (133) with_stmt -> WITH with_item with_item_list COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 362
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 291

    (137) with_item -> test AS target .

    COMMA           reduce using rule 137 (with_item -> test AS target .)
    COLON           reduce using rule 137 (with_item -> test AS target .)


state 292

    (185) factorlist -> SLASHSLASH factor factorlist .

    PLUS            reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    MINUS           reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    LEFTSHIFT       reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    RIGHTSHIFT      reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    AMPER           reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    CIRCUMFLEX      reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    VBAR            reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    LESS            reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    GREATER         reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    EQEQUAL         reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    GREATEREQUAL    reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    LESSEQUAL       reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    NOTEQUAL        reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    IN              reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    NOT             reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    IS              reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    AND             reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    OR              reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    IF              reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    COMMA           reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    EQUAL           reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    PLUSEQUAL       reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    MINEQUAL        reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    STAREQUAL       reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    SLASHEQUAL      reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    PERCENTEQUAL    reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    STARSTAREQUAL   reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    SLASHSLASHEQUAL reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    NEWLINE         reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    SEMI            reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    BACKQUOTE       reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    AS              reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    COLON           reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    FOR             reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    RBRACE          reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    RSQB            reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    RPAREN          reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)
    ELSE            reduce using rule 185 (factorlist -> SLASHSLASH factor factorlist .)


state 293

    (182) factorlist -> STAR factor factorlist .

    PLUS            reduce using rule 182 (factorlist -> STAR factor factorlist .)
    MINUS           reduce using rule 182 (factorlist -> STAR factor factorlist .)
    LEFTSHIFT       reduce using rule 182 (factorlist -> STAR factor factorlist .)
    RIGHTSHIFT      reduce using rule 182 (factorlist -> STAR factor factorlist .)
    AMPER           reduce using rule 182 (factorlist -> STAR factor factorlist .)
    CIRCUMFLEX      reduce using rule 182 (factorlist -> STAR factor factorlist .)
    VBAR            reduce using rule 182 (factorlist -> STAR factor factorlist .)
    LESS            reduce using rule 182 (factorlist -> STAR factor factorlist .)
    GREATER         reduce using rule 182 (factorlist -> STAR factor factorlist .)
    EQEQUAL         reduce using rule 182 (factorlist -> STAR factor factorlist .)
    GREATEREQUAL    reduce using rule 182 (factorlist -> STAR factor factorlist .)
    LESSEQUAL       reduce using rule 182 (factorlist -> STAR factor factorlist .)
    NOTEQUAL        reduce using rule 182 (factorlist -> STAR factor factorlist .)
    IN              reduce using rule 182 (factorlist -> STAR factor factorlist .)
    NOT             reduce using rule 182 (factorlist -> STAR factor factorlist .)
    IS              reduce using rule 182 (factorlist -> STAR factor factorlist .)
    AND             reduce using rule 182 (factorlist -> STAR factor factorlist .)
    OR              reduce using rule 182 (factorlist -> STAR factor factorlist .)
    IF              reduce using rule 182 (factorlist -> STAR factor factorlist .)
    COMMA           reduce using rule 182 (factorlist -> STAR factor factorlist .)
    EQUAL           reduce using rule 182 (factorlist -> STAR factor factorlist .)
    PLUSEQUAL       reduce using rule 182 (factorlist -> STAR factor factorlist .)
    MINEQUAL        reduce using rule 182 (factorlist -> STAR factor factorlist .)
    STAREQUAL       reduce using rule 182 (factorlist -> STAR factor factorlist .)
    SLASHEQUAL      reduce using rule 182 (factorlist -> STAR factor factorlist .)
    PERCENTEQUAL    reduce using rule 182 (factorlist -> STAR factor factorlist .)
    STARSTAREQUAL   reduce using rule 182 (factorlist -> STAR factor factorlist .)
    SLASHSLASHEQUAL reduce using rule 182 (factorlist -> STAR factor factorlist .)
    NEWLINE         reduce using rule 182 (factorlist -> STAR factor factorlist .)
    SEMI            reduce using rule 182 (factorlist -> STAR factor factorlist .)
    BACKQUOTE       reduce using rule 182 (factorlist -> STAR factor factorlist .)
    AS              reduce using rule 182 (factorlist -> STAR factor factorlist .)
    COLON           reduce using rule 182 (factorlist -> STAR factor factorlist .)
    FOR             reduce using rule 182 (factorlist -> STAR factor factorlist .)
    RBRACE          reduce using rule 182 (factorlist -> STAR factor factorlist .)
    RSQB            reduce using rule 182 (factorlist -> STAR factor factorlist .)
    RPAREN          reduce using rule 182 (factorlist -> STAR factor factorlist .)
    ELSE            reduce using rule 182 (factorlist -> STAR factor factorlist .)


state 294

    (184) factorlist -> PERCENT factor factorlist .

    PLUS            reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    MINUS           reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    LEFTSHIFT       reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    RIGHTSHIFT      reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    AMPER           reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    CIRCUMFLEX      reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    VBAR            reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    LESS            reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    GREATER         reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    EQEQUAL         reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    GREATEREQUAL    reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    LESSEQUAL       reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    NOTEQUAL        reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    IN              reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    NOT             reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    IS              reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    AND             reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    OR              reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    IF              reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    COMMA           reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    EQUAL           reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    PLUSEQUAL       reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    MINEQUAL        reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    STAREQUAL       reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    SLASHEQUAL      reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    PERCENTEQUAL    reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    STARSTAREQUAL   reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    SLASHSLASHEQUAL reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    NEWLINE         reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    SEMI            reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    BACKQUOTE       reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    AS              reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    COLON           reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    FOR             reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    RBRACE          reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    RSQB            reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    RPAREN          reduce using rule 184 (factorlist -> PERCENT factor factorlist .)
    ELSE            reduce using rule 184 (factorlist -> PERCENT factor factorlist .)


state 295

    (183) factorlist -> SLASH factor factorlist .

    PLUS            reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    MINUS           reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    LEFTSHIFT       reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    RIGHTSHIFT      reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    AMPER           reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    CIRCUMFLEX      reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    VBAR            reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    LESS            reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    GREATER         reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    EQEQUAL         reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    GREATEREQUAL    reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    LESSEQUAL       reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    NOTEQUAL        reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    IN              reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    NOT             reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    IS              reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    AND             reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    OR              reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    IF              reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    COMMA           reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    EQUAL           reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    PLUSEQUAL       reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    MINEQUAL        reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    STAREQUAL       reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    SLASHEQUAL      reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    PERCENTEQUAL    reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    STARSTAREQUAL   reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    SLASHSLASHEQUAL reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    NEWLINE         reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    SEMI            reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    BACKQUOTE       reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    AS              reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    COLON           reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    FOR             reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    RBRACE          reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    RSQB            reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    RPAREN          reduce using rule 183 (factorlist -> SLASH factor factorlist .)
    ELSE            reduce using rule 183 (factorlist -> SLASH factor factorlist .)


state 296

    (102) module -> NAME DOT NAME .

    AS              reduce using rule 102 (module -> NAME DOT NAME .)
    COMMA           reduce using rule 102 (module -> NAME DOT NAME .)
    NEWLINE         reduce using rule 102 (module -> NAME DOT NAME .)
    SEMI            reduce using rule 102 (module -> NAME DOT NAME .)
    LPAREN          reduce using rule 102 (module -> NAME DOT NAME .)
    IMPORT          reduce using rule 102 (module -> NAME DOT NAME .)


state 297

    (77) import_stmt -> IMPORT module AS NAME . modulelist
    (83) modulelist -> .
    (84) modulelist -> . COMMA module modulelist
    (85) modulelist -> . COMMA module AS NAME modulelist

    NEWLINE         reduce using rule 83 (modulelist -> .)
    SEMI            reduce using rule 83 (modulelist -> .)
    COMMA           shift and go to state 206

    modulelist                     shift and go to state 363

state 298

    (84) modulelist -> COMMA module . modulelist
    (85) modulelist -> COMMA module . AS NAME modulelist
    (83) modulelist -> .
    (84) modulelist -> . COMMA module modulelist
    (85) modulelist -> . COMMA module AS NAME modulelist

    AS              shift and go to state 365
    NEWLINE         reduce using rule 83 (modulelist -> .)
    SEMI            reduce using rule 83 (modulelist -> .)
    COMMA           shift and go to state 206

    modulelist                     shift and go to state 364

state 299

    (58) exec_stmt -> EXEC expr IN testlist .

    NEWLINE         reduce using rule 58 (exec_stmt -> EXEC expr IN testlist .)
    SEMI            reduce using rule 58 (exec_stmt -> EXEC expr IN testlist .)


state 300

    (178) termlist -> PLUS term termlist .

    LEFTSHIFT       reduce using rule 178 (termlist -> PLUS term termlist .)
    RIGHTSHIFT      reduce using rule 178 (termlist -> PLUS term termlist .)
    AMPER           reduce using rule 178 (termlist -> PLUS term termlist .)
    CIRCUMFLEX      reduce using rule 178 (termlist -> PLUS term termlist .)
    VBAR            reduce using rule 178 (termlist -> PLUS term termlist .)
    LESS            reduce using rule 178 (termlist -> PLUS term termlist .)
    GREATER         reduce using rule 178 (termlist -> PLUS term termlist .)
    EQEQUAL         reduce using rule 178 (termlist -> PLUS term termlist .)
    GREATEREQUAL    reduce using rule 178 (termlist -> PLUS term termlist .)
    LESSEQUAL       reduce using rule 178 (termlist -> PLUS term termlist .)
    NOTEQUAL        reduce using rule 178 (termlist -> PLUS term termlist .)
    IN              reduce using rule 178 (termlist -> PLUS term termlist .)
    NOT             reduce using rule 178 (termlist -> PLUS term termlist .)
    IS              reduce using rule 178 (termlist -> PLUS term termlist .)
    AND             reduce using rule 178 (termlist -> PLUS term termlist .)
    OR              reduce using rule 178 (termlist -> PLUS term termlist .)
    IF              reduce using rule 178 (termlist -> PLUS term termlist .)
    COMMA           reduce using rule 178 (termlist -> PLUS term termlist .)
    EQUAL           reduce using rule 178 (termlist -> PLUS term termlist .)
    PLUSEQUAL       reduce using rule 178 (termlist -> PLUS term termlist .)
    MINEQUAL        reduce using rule 178 (termlist -> PLUS term termlist .)
    STAREQUAL       reduce using rule 178 (termlist -> PLUS term termlist .)
    SLASHEQUAL      reduce using rule 178 (termlist -> PLUS term termlist .)
    PERCENTEQUAL    reduce using rule 178 (termlist -> PLUS term termlist .)
    STARSTAREQUAL   reduce using rule 178 (termlist -> PLUS term termlist .)
    SLASHSLASHEQUAL reduce using rule 178 (termlist -> PLUS term termlist .)
    NEWLINE         reduce using rule 178 (termlist -> PLUS term termlist .)
    SEMI            reduce using rule 178 (termlist -> PLUS term termlist .)
    BACKQUOTE       reduce using rule 178 (termlist -> PLUS term termlist .)
    AS              reduce using rule 178 (termlist -> PLUS term termlist .)
    COLON           reduce using rule 178 (termlist -> PLUS term termlist .)
    FOR             reduce using rule 178 (termlist -> PLUS term termlist .)
    RBRACE          reduce using rule 178 (termlist -> PLUS term termlist .)
    RSQB            reduce using rule 178 (termlist -> PLUS term termlist .)
    RPAREN          reduce using rule 178 (termlist -> PLUS term termlist .)
    ELSE            reduce using rule 178 (termlist -> PLUS term termlist .)


state 301

    (179) termlist -> MINUS term termlist .

    LEFTSHIFT       reduce using rule 179 (termlist -> MINUS term termlist .)
    RIGHTSHIFT      reduce using rule 179 (termlist -> MINUS term termlist .)
    AMPER           reduce using rule 179 (termlist -> MINUS term termlist .)
    CIRCUMFLEX      reduce using rule 179 (termlist -> MINUS term termlist .)
    VBAR            reduce using rule 179 (termlist -> MINUS term termlist .)
    LESS            reduce using rule 179 (termlist -> MINUS term termlist .)
    GREATER         reduce using rule 179 (termlist -> MINUS term termlist .)
    EQEQUAL         reduce using rule 179 (termlist -> MINUS term termlist .)
    GREATEREQUAL    reduce using rule 179 (termlist -> MINUS term termlist .)
    LESSEQUAL       reduce using rule 179 (termlist -> MINUS term termlist .)
    NOTEQUAL        reduce using rule 179 (termlist -> MINUS term termlist .)
    IN              reduce using rule 179 (termlist -> MINUS term termlist .)
    NOT             reduce using rule 179 (termlist -> MINUS term termlist .)
    IS              reduce using rule 179 (termlist -> MINUS term termlist .)
    AND             reduce using rule 179 (termlist -> MINUS term termlist .)
    OR              reduce using rule 179 (termlist -> MINUS term termlist .)
    IF              reduce using rule 179 (termlist -> MINUS term termlist .)
    COMMA           reduce using rule 179 (termlist -> MINUS term termlist .)
    EQUAL           reduce using rule 179 (termlist -> MINUS term termlist .)
    PLUSEQUAL       reduce using rule 179 (termlist -> MINUS term termlist .)
    MINEQUAL        reduce using rule 179 (termlist -> MINUS term termlist .)
    STAREQUAL       reduce using rule 179 (termlist -> MINUS term termlist .)
    SLASHEQUAL      reduce using rule 179 (termlist -> MINUS term termlist .)
    PERCENTEQUAL    reduce using rule 179 (termlist -> MINUS term termlist .)
    STARSTAREQUAL   reduce using rule 179 (termlist -> MINUS term termlist .)
    SLASHSLASHEQUAL reduce using rule 179 (termlist -> MINUS term termlist .)
    NEWLINE         reduce using rule 179 (termlist -> MINUS term termlist .)
    SEMI            reduce using rule 179 (termlist -> MINUS term termlist .)
    BACKQUOTE       reduce using rule 179 (termlist -> MINUS term termlist .)
    AS              reduce using rule 179 (termlist -> MINUS term termlist .)
    COLON           reduce using rule 179 (termlist -> MINUS term termlist .)
    FOR             reduce using rule 179 (termlist -> MINUS term termlist .)
    RBRACE          reduce using rule 179 (termlist -> MINUS term termlist .)
    RSQB            reduce using rule 179 (termlist -> MINUS term termlist .)
    RPAREN          reduce using rule 179 (termlist -> MINUS term termlist .)
    ELSE            reduce using rule 179 (termlist -> MINUS term termlist .)


state 302

    (141) test -> or_test IF or_test ELSE . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 366
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 303

    (254) exprlist -> expr COMMA exprlist .

    NEWLINE         reduce using rule 254 (exprlist -> expr COMMA exprlist .)
    SEMI            reduce using rule 254 (exprlist -> expr COMMA exprlist .)


state 304

    (12) funcdef -> DEF NAME parameters COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 367
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 305

    (22) fpdef -> NAME .

    EQUAL           reduce using rule 22 (fpdef -> NAME .)
    COMMA           reduce using rule 22 (fpdef -> NAME .)
    RPAREN          reduce using rule 22 (fpdef -> NAME .)


state 306

    (15) varargslist -> fpdef . EQUAL test fpdeflist COMMA
    (16) varargslist -> fpdef . EQUAL test fpdeflist
    (17) varargslist -> fpdef . fpdeflist COMMA
    (18) varargslist -> fpdef . fpdeflist
    (19) fpdeflist -> .
    (20) fpdeflist -> . fpdeflist COMMA fpdef
    (21) fpdeflist -> . fpdeflist COMMA fpdef EQUAL test

    EQUAL           shift and go to state 368
    COMMA           reduce using rule 19 (fpdeflist -> .)
    RPAREN          reduce using rule 19 (fpdeflist -> .)

    fpdeflist                      shift and go to state 369

state 307

    (13) parameters -> LPAREN varargslist . RPAREN

    RPAREN          shift and go to state 370


state 308

    (23) fpdef -> LPAREN . fplist RPAREN
    (24) fplist -> . fpdef fplist1 COMMA
    (25) fplist -> . fpdef fplist1
    (22) fpdef -> . NAME
    (23) fpdef -> . LPAREN fplist RPAREN

    NAME            shift and go to state 305
    LPAREN          shift and go to state 308

    fplist                         shift and go to state 372
    fpdef                          shift and go to state 371

state 309

    (171) shiftexprlist -> AMPER shift_expr shiftexprlist .

    CIRCUMFLEX      reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    VBAR            reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    LESS            reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    GREATER         reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    EQEQUAL         reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    GREATEREQUAL    reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    LESSEQUAL       reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    NOTEQUAL        reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    IN              reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    NOT             reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    IS              reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    AND             reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    OR              reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    IF              reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    COMMA           reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    EQUAL           reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    PLUSEQUAL       reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    MINEQUAL        reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    STAREQUAL       reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    SLASHEQUAL      reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    PERCENTEQUAL    reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    STARSTAREQUAL   reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    SLASHSLASHEQUAL reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    NEWLINE         reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    SEMI            reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    BACKQUOTE       reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    AS              reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    COLON           reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    FOR             reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    RBRACE          reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    RSQB            reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    RPAREN          reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)
    ELSE            reduce using rule 171 (shiftexprlist -> AMPER shift_expr shiftexprlist .)


state 310

    (121) for_stmt -> FOR targetlist IN testlist . COLON suite
    (122) for_stmt -> FOR targetlist IN testlist . COLON suite ELSE COLON suite

    COLON           shift and go to state 373


state 311

    (296) target -> LPAREN targetlist RPAREN .

    COMMA           reduce using rule 296 (target -> LPAREN targetlist RPAREN .)
    RPAREN          reduce using rule 296 (target -> LPAREN targetlist RPAREN .)
    COLON           reduce using rule 296 (target -> LPAREN targetlist RPAREN .)
    RSQB            reduce using rule 296 (target -> LPAREN targetlist RPAREN .)
    IN              reduce using rule 296 (target -> LPAREN targetlist RPAREN .)


state 312

    (299) target -> atom trailerlist . DOT NAME
    (300) target -> atom trailerlist . LSQB testlist RSQB
    (301) target -> atom trailerlist . LSQB slice_list RSQB
    (190) power -> atom trailerlist .
    (191) power -> atom trailerlist . STARSTAR factor

    DOT             shift and go to state 314
    LSQB            shift and go to state 313
    STAR            reduce using rule 190 (power -> atom trailerlist .)
    SLASH           reduce using rule 190 (power -> atom trailerlist .)
    PERCENT         reduce using rule 190 (power -> atom trailerlist .)
    SLASHSLASH      reduce using rule 190 (power -> atom trailerlist .)
    PLUS            reduce using rule 190 (power -> atom trailerlist .)
    MINUS           reduce using rule 190 (power -> atom trailerlist .)
    LEFTSHIFT       reduce using rule 190 (power -> atom trailerlist .)
    RIGHTSHIFT      reduce using rule 190 (power -> atom trailerlist .)
    AMPER           reduce using rule 190 (power -> atom trailerlist .)
    CIRCUMFLEX      reduce using rule 190 (power -> atom trailerlist .)
    VBAR            reduce using rule 190 (power -> atom trailerlist .)
    LESS            reduce using rule 190 (power -> atom trailerlist .)
    GREATER         reduce using rule 190 (power -> atom trailerlist .)
    EQEQUAL         reduce using rule 190 (power -> atom trailerlist .)
    GREATEREQUAL    reduce using rule 190 (power -> atom trailerlist .)
    LESSEQUAL       reduce using rule 190 (power -> atom trailerlist .)
    NOTEQUAL        reduce using rule 190 (power -> atom trailerlist .)
    IN              reduce using rule 190 (power -> atom trailerlist .)
    NOT             reduce using rule 190 (power -> atom trailerlist .)
    IS              reduce using rule 190 (power -> atom trailerlist .)
    AND             reduce using rule 190 (power -> atom trailerlist .)
    OR              reduce using rule 190 (power -> atom trailerlist .)
    IF              reduce using rule 190 (power -> atom trailerlist .)
    COMMA           reduce using rule 190 (power -> atom trailerlist .)
    RPAREN          reduce using rule 190 (power -> atom trailerlist .)
    FOR             reduce using rule 190 (power -> atom trailerlist .)
    RSQB            reduce using rule 190 (power -> atom trailerlist .)
    STARSTAR        shift and go to state 238


state 313

    (300) target -> atom trailerlist LSQB . testlist RSQB
    (301) target -> atom trailerlist LSQB . slice_list RSQB
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (233) slice_list -> . slice_item slice_item_list
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (237) slice_item -> . test
    (238) slice_item -> . proper_slice
    (239) slice_item -> . ellipsis
    (142) or_test -> . and_test ortestlist
    (240) proper_slice -> . short_slice
    (241) proper_slice -> . long_slice
    (251) ellipsis -> . DOT DOT DOT
    (145) and_test -> . not_test andtestlist
    (242) short_slice -> . lower_bound COLON
    (243) short_slice -> . lower_bound COLON upper_bound
    (244) short_slice -> . COLON
    (245) short_slice -> . COLON upper_bound
    (246) long_slice -> . short_slice COLON
    (247) long_slice -> . short_slice COLON stride
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (248) lower_bound -> . test
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    DOT             shift and go to state 246
    COLON           shift and go to state 248
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    slice_list                     shift and go to state 374
    shift_expr                     shift and go to state 34
    short_slice                    shift and go to state 375
    factor                         shift and go to state 12
    ellipsis                       shift and go to state 251
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    lower_bound                    shift and go to state 252
    testlist                       shift and go to state 377
    and_test                       shift and go to state 44
    test                           shift and go to state 376
    long_slice                     shift and go to state 253
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    proper_slice                   shift and go to state 254
    or_test                        shift and go to state 24
    expr                           shift and go to state 70
    slice_item                     shift and go to state 255

state 314

    (299) target -> atom trailerlist DOT . NAME

    NAME            shift and go to state 378


state 315

    (298) target -> LSQB targetlist RSQB .

    COMMA           reduce using rule 298 (target -> LSQB targetlist RSQB .)
    RPAREN          reduce using rule 298 (target -> LSQB targetlist RSQB .)
    COLON           reduce using rule 298 (target -> LSQB targetlist RSQB .)
    RSQB            reduce using rule 298 (target -> LSQB targetlist RSQB .)
    IN              reduce using rule 298 (target -> LSQB targetlist RSQB .)


state 316

    (294) targetlist -> target COMMA targetlist .

    RPAREN          reduce using rule 294 (targetlist -> target COMMA targetlist .)
    RSQB            reduce using rule 294 (targetlist -> target COMMA targetlist .)
    IN              reduce using rule 294 (targetlist -> target COMMA targetlist .)


state 317

    (139) suite -> NEWLINE INDENT . stmts DEDENT
    (290) stmts -> . stmts stmt
    (291) stmts -> . stmt
    (28) stmt -> . simple_stmt
    (29) stmt -> . compound_stmt
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (107) compound_stmt -> . if_stmt
    (108) compound_stmt -> . for_stmt
    (109) compound_stmt -> . while_stmt
    (110) compound_stmt -> . try_stmt
    (111) compound_stmt -> . funcdef
    (112) compound_stmt -> . classdef
    (113) compound_stmt -> . with_stmt
    (114) compound_stmt -> . decorated
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (115) if_stmt -> . IF test COLON suite elif_list
    (116) if_stmt -> . IF test COLON suite elif_list ELSE COLON suite
    (121) for_stmt -> . FOR targetlist IN testlist COLON suite
    (122) for_stmt -> . FOR targetlist IN testlist COLON suite ELSE COLON suite
    (119) while_stmt -> . WHILE test COLON suite
    (120) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (123) try_stmt -> . TRY COLON suite except_stmt except_list
    (124) try_stmt -> . TRY COLON suite except_stmt except_list ELSE COLON suite
    (125) try_stmt -> . TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> . TRY COLON suite except_stmt except_list FINALLY COLON suite
    (127) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (12) funcdef -> . DEF NAME parameters COLON suite
    (265) classdef -> . CLASS NAME COLON suite
    (266) classdef -> . CLASS NAME LPAREN RPAREN COLON suite
    (267) classdef -> . CLASS NAME LPAREN testlist RPAREN COLON suite
    (133) with_stmt -> . WITH with_item with_item_list COLON suite
    (10) decorated -> . decorators classdef
    (11) decorated -> . decorators funcdef
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (8) decorators -> . decorator
    (9) decorators -> . decorator decorators
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (5) decorator -> . AT module NEWLINE
    (6) decorator -> . AT module LPAREN RPAREN NEWLINE
    (7) decorator -> . AT module LPAREN arglist RPAREN NEWLINE
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    IF              shift and go to state 85
    FOR             shift and go to state 40
    WHILE           shift and go to state 56
    TRY             shift and go to state 42
    DEF             shift and go to state 30
    CLASS           shift and go to state 79
    WITH            shift and go to state 8
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    AT              shift and go to state 82
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    try_stmt                       shift and go to state 7
    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    or_test                        shift and go to state 24
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    del_stmt                       shift and go to state 87
    raise_stmt                     shift and go to state 66
    atom                           shift and go to state 50
    stmts                          shift and go to state 379
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 15
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 380
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 19
    and_test                       shift and go to state 44
    global_stmt                    shift and go to state 78
    funcdef                        shift and go to state 64
    decorated                      shift and go to state 84
    import_stmt                    shift and go to state 45
    decorator                      shift and go to state 21
    pass_stmt                      shift and go to state 48
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    if_stmt                        shift and go to state 23
    xor_expr                       shift and go to state 59
    decorators                     shift and go to state 37
    aug_stmt                       shift and go to state 43
    compound_stmt                  shift and go to state 38
    with_stmt                      shift and go to state 25
    while_stmt                     shift and go to state 88
    yield_stmt                     shift and go to state 73
    expr                           shift and go to state 70
    and_expr                       shift and go to state 72
    small_stmts                    shift and go to state 53

state 318

    (130) except_stmt -> EXCEPT . COLON suite
    (131) except_stmt -> EXCEPT . NAME namelist COLON suite
    (132) except_stmt -> EXCEPT . NAME AS NAME COLON suite

    COLON           shift and go to state 382
    NAME            shift and go to state 381


state 319

    (127) try_stmt -> TRY COLON suite FINALLY . COLON suite

    COLON           shift and go to state 383


state 320

    (123) try_stmt -> TRY COLON suite except_stmt . except_list
    (124) try_stmt -> TRY COLON suite except_stmt . except_list ELSE COLON suite
    (125) try_stmt -> TRY COLON suite except_stmt . except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> TRY COLON suite except_stmt . except_list FINALLY COLON suite
    (128) except_list -> .
    (129) except_list -> . except_stmt except_list
    (130) except_stmt -> . EXCEPT COLON suite
    (131) except_stmt -> . EXCEPT NAME namelist COLON suite
    (132) except_stmt -> . EXCEPT NAME AS NAME COLON suite

    ELSE            reduce using rule 128 (except_list -> .)
    FINALLY         reduce using rule 128 (except_list -> .)
    ENDMARKER       reduce using rule 128 (except_list -> .)
    NEWLINE         reduce using rule 128 (except_list -> .)
    IF              reduce using rule 128 (except_list -> .)
    FOR             reduce using rule 128 (except_list -> .)
    WHILE           reduce using rule 128 (except_list -> .)
    TRY             reduce using rule 128 (except_list -> .)
    DEF             reduce using rule 128 (except_list -> .)
    CLASS           reduce using rule 128 (except_list -> .)
    WITH            reduce using rule 128 (except_list -> .)
    PRINT           reduce using rule 128 (except_list -> .)
    PASS            reduce using rule 128 (except_list -> .)
    IMPORT          reduce using rule 128 (except_list -> .)
    FROM            reduce using rule 128 (except_list -> .)
    GLOBAL          reduce using rule 128 (except_list -> .)
    ASSERT          reduce using rule 128 (except_list -> .)
    DEL             reduce using rule 128 (except_list -> .)
    EXEC            reduce using rule 128 (except_list -> .)
    AT              reduce using rule 128 (except_list -> .)
    BREAK           reduce using rule 128 (except_list -> .)
    CONTINUE        reduce using rule 128 (except_list -> .)
    RETURN          reduce using rule 128 (except_list -> .)
    RAISE           reduce using rule 128 (except_list -> .)
    YIELD           reduce using rule 128 (except_list -> .)
    NOT             reduce using rule 128 (except_list -> .)
    PLUS            reduce using rule 128 (except_list -> .)
    MINUS           reduce using rule 128 (except_list -> .)
    TILDE           reduce using rule 128 (except_list -> .)
    NAME            reduce using rule 128 (except_list -> .)
    LPAREN          reduce using rule 128 (except_list -> .)
    LSQB            reduce using rule 128 (except_list -> .)
    LBRACE          reduce using rule 128 (except_list -> .)
    BACKQUOTE       reduce using rule 128 (except_list -> .)
    NUMBER          reduce using rule 128 (except_list -> .)
    FNUMBER         reduce using rule 128 (except_list -> .)
    HEXADECIMALNUMBER reduce using rule 128 (except_list -> .)
    OCTALNUMBER     reduce using rule 128 (except_list -> .)
    BINARYNUMBER    reduce using rule 128 (except_list -> .)
    STRING          reduce using rule 128 (except_list -> .)
    TRIPLESTRING    reduce using rule 128 (except_list -> .)
    DEDENT          reduce using rule 128 (except_list -> .)
    EXCEPT          shift and go to state 318

    except_list                    shift and go to state 384
    except_stmt                    shift and go to state 385

state 321

    (144) ortestlist -> OR and_test ortestlist .

    IF              reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    COMMA           reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    EQUAL           reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    PLUSEQUAL       reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    MINEQUAL        reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    STAREQUAL       reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    SLASHEQUAL      reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    PERCENTEQUAL    reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    STARSTAREQUAL   reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    SLASHSLASHEQUAL reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    NEWLINE         reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    SEMI            reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    BACKQUOTE       reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    AS              reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    COLON           reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    FOR             reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    RBRACE          reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    RSQB            reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    RPAREN          reduce using rule 144 (ortestlist -> OR and_test ortestlist .)
    ELSE            reduce using rule 144 (ortestlist -> OR and_test ortestlist .)


state 322

    (284) comp_for -> FOR targetlist . IN or_test
    (285) comp_for -> FOR targetlist . IN or_test comp_iter

    IN              shift and go to state 386


state 323

    (258) dictorsetmaker -> test COLON test . comp_for
    (262) testcolonlist -> test COLON test .
    (263) testcolonlist -> test COLON test . COMMA
    (264) testcolonlist -> test COLON test . COMMA testcolonlist
    (284) comp_for -> . FOR targetlist IN or_test
    (285) comp_for -> . FOR targetlist IN or_test comp_iter

    RBRACE          reduce using rule 262 (testcolonlist -> test COLON test .)
    COMMA           shift and go to state 387
    FOR             shift and go to state 233

    comp_for                       shift and go to state 388

state 324

    (174) arithexprlist -> LEFTSHIFT arith_expr arithexprlist .

    AMPER           reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    CIRCUMFLEX      reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    VBAR            reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    LESS            reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    GREATER         reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    EQEQUAL         reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    GREATEREQUAL    reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    LESSEQUAL       reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    NOTEQUAL        reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    IN              reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    NOT             reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    IS              reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    AND             reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    OR              reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    IF              reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    COMMA           reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    EQUAL           reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    PLUSEQUAL       reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    MINEQUAL        reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    STAREQUAL       reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    SLASHEQUAL      reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    PERCENTEQUAL    reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    STARSTAREQUAL   reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    SLASHSLASHEQUAL reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    NEWLINE         reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    SEMI            reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    BACKQUOTE       reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    AS              reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    COLON           reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    FOR             reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    RBRACE          reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    RSQB            reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    RPAREN          reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)
    ELSE            reduce using rule 174 (arithexprlist -> LEFTSHIFT arith_expr arithexprlist .)


state 325

    (175) arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .

    AMPER           reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    CIRCUMFLEX      reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    VBAR            reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    LESS            reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    GREATER         reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    EQEQUAL         reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    GREATEREQUAL    reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    LESSEQUAL       reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    NOTEQUAL        reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    IN              reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    NOT             reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    IS              reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    AND             reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    OR              reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    IF              reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    COMMA           reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    EQUAL           reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    PLUSEQUAL       reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    MINEQUAL        reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    STAREQUAL       reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    SLASHEQUAL      reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    PERCENTEQUAL    reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    STARSTAREQUAL   reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    SLASHSLASHEQUAL reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    NEWLINE         reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    SEMI            reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    BACKQUOTE       reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    AS              reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    COLON           reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    FOR             reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    RBRACE          reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    RSQB            reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    RPAREN          reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)
    ELSE            reduce using rule 175 (arithexprlist -> RIGHTSHIFT arith_expr arithexprlist .)


state 326

    (191) power -> atom trailerlist STARSTAR factor .

    STAR            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    SLASH           reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    PERCENT         reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    SLASHSLASH      reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    PLUS            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    MINUS           reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    LEFTSHIFT       reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    RIGHTSHIFT      reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    AMPER           reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    CIRCUMFLEX      reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    VBAR            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    LESS            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    GREATER         reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    EQEQUAL         reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    GREATEREQUAL    reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    LESSEQUAL       reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    NOTEQUAL        reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    IN              reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    NOT             reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    IS              reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    AND             reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    OR              reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    IF              reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    COMMA           reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    NEWLINE         reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    SEMI            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    BACKQUOTE       reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    EQUAL           reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    PLUSEQUAL       reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    MINEQUAL        reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    STAREQUAL       reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    SLASHEQUAL      reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    PERCENTEQUAL    reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    STARSTAREQUAL   reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    SLASHSLASHEQUAL reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    AS              reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    COLON           reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    FOR             reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    RBRACE          reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    RSQB            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    RPAREN          reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)
    ELSE            reduce using rule 191 (power -> atom trailerlist STARSTAR factor .)


state 327

    (229) trailer -> LPAREN arglist RPAREN .

    LPAREN          reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    LSQB            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    DOT             reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    STARSTAR        reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    STAR            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    SLASH           reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    PERCENT         reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    SLASHSLASH      reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    PLUS            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    MINUS           reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    LEFTSHIFT       reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    RIGHTSHIFT      reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    AMPER           reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    CIRCUMFLEX      reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    VBAR            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    LESS            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    GREATER         reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    EQEQUAL         reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    GREATEREQUAL    reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    LESSEQUAL       reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    NOTEQUAL        reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    IN              reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    NOT             reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    IS              reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    AND             reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    OR              reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    IF              reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    COMMA           reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    RPAREN          reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    FOR             reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    RSQB            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    EQUAL           reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    PLUSEQUAL       reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    MINEQUAL        reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    STAREQUAL       reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    SLASHEQUAL      reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    PERCENTEQUAL    reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    STARSTAREQUAL   reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    SLASHSLASHEQUAL reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    NEWLINE         reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    SEMI            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    BACKQUOTE       reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    AS              reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    COLON           reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    RBRACE          reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)
    ELSE            reduce using rule 229 (trailer -> LPAREN arglist RPAREN .)


state 328

    (281) argument -> test EQUAL . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 389
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 329

    (280) argument -> test comp_for .

    COMMA           reduce using rule 280 (argument -> test comp_for .)
    RPAREN          reduce using rule 280 (argument -> test comp_for .)


state 330

    (277) arglist1 -> argument COMMA .
    (278) arglist1 -> argument COMMA . arglist1
    (273) arglist3 -> argument COMMA . arglist3
    (276) arglist1 -> . argument
    (277) arglist1 -> . argument COMMA
    (278) arglist1 -> . argument COMMA arglist1
    (272) arglist3 -> .
    (273) arglist3 -> . argument COMMA arglist3
    (279) argument -> . test
    (280) argument -> . test comp_for
    (281) argument -> . test EQUAL test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RPAREN          reduce using rule 277 (arglist1 -> argument COMMA .)
    STAR            reduce using rule 272 (arglist3 -> .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    argument                       shift and go to state 243
    arglist1                       shift and go to state 390
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 242
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    arglist3                       shift and go to state 391

state 331

    (269) arglist -> arglist3 STAR . test arglist2 COMMA STAR STAR test
    (270) arglist -> arglist3 STAR . test arglist2
    (271) arglist -> arglist3 STAR . STAR test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    STAR            shift and go to state 392
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 393
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 332

    (251) ellipsis -> DOT DOT . DOT

    DOT             shift and go to state 394


state 333

    (231) trailer -> LSQB slice_list RSQB .

    LPAREN          reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    LSQB            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    DOT             reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    STARSTAR        reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    STAR            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    SLASH           reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    PERCENT         reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    SLASHSLASH      reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    PLUS            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    MINUS           reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    LEFTSHIFT       reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    RIGHTSHIFT      reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    AMPER           reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    CIRCUMFLEX      reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    VBAR            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    LESS            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    GREATER         reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    EQEQUAL         reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    GREATEREQUAL    reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    LESSEQUAL       reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    NOTEQUAL        reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    IN              reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    NOT             reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    IS              reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    AND             reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    OR              reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    IF              reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    COMMA           reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    RPAREN          reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    FOR             reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    RSQB            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    EQUAL           reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    PLUSEQUAL       reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    MINEQUAL        reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    STAREQUAL       reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    SLASHEQUAL      reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    PERCENTEQUAL    reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    STARSTAREQUAL   reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    SLASHSLASHEQUAL reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    NEWLINE         reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    SEMI            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    BACKQUOTE       reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    AS              reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    COLON           reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    RBRACE          reduce using rule 231 (trailer -> LSQB slice_list RSQB .)
    ELSE            reduce using rule 231 (trailer -> LSQB slice_list RSQB .)


state 334

    (249) upper_bound -> test .

    RSQB            reduce using rule 249 (upper_bound -> test .)
    COLON           reduce using rule 249 (upper_bound -> test .)
    COMMA           reduce using rule 249 (upper_bound -> test .)


state 335

    (245) short_slice -> COLON upper_bound .

    COLON           reduce using rule 245 (short_slice -> COLON upper_bound .)
    COMMA           reduce using rule 245 (short_slice -> COLON upper_bound .)
    RSQB            reduce using rule 245 (short_slice -> COLON upper_bound .)


state 336

    (246) long_slice -> short_slice COLON .
    (247) long_slice -> short_slice COLON . stride
    (250) stride -> . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    COMMA           reduce using rule 246 (long_slice -> short_slice COLON .)
    RSQB            reduce using rule 246 (long_slice -> short_slice COLON .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 395
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    stride                         shift and go to state 396

state 337

    (230) trailer -> LSQB short_slice RSQB .

    LPAREN          reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    LSQB            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    DOT             reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    STARSTAR        reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    STAR            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    SLASH           reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    PERCENT         reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    SLASHSLASH      reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    PLUS            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    MINUS           reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    LEFTSHIFT       reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    RIGHTSHIFT      reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    AMPER           reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    CIRCUMFLEX      reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    VBAR            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    LESS            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    GREATER         reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    EQEQUAL         reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    GREATEREQUAL    reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    LESSEQUAL       reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    NOTEQUAL        reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    IN              reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    NOT             reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    IS              reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    AND             reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    OR              reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    IF              reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    COMMA           reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    RPAREN          reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    FOR             reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    RSQB            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    EQUAL           reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    PLUSEQUAL       reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    MINEQUAL        reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    STAREQUAL       reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    SLASHEQUAL      reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    PERCENTEQUAL    reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    STARSTAREQUAL   reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    SLASHSLASHEQUAL reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    NEWLINE         reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    SEMI            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    BACKQUOTE       reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    AS              reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    COLON           reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    RBRACE          reduce using rule 230 (trailer -> LSQB short_slice RSQB .)
    ELSE            reduce using rule 230 (trailer -> LSQB short_slice RSQB .)


state 338

    (242) short_slice -> lower_bound COLON .
    (243) short_slice -> lower_bound COLON . upper_bound
    (249) upper_bound -> . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    COLON           reduce using rule 242 (short_slice -> lower_bound COLON .)
    COMMA           reduce using rule 242 (short_slice -> lower_bound COLON .)
    RSQB            reduce using rule 242 (short_slice -> lower_bound COLON .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 334
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    upper_bound                    shift and go to state 397
    arith_expr                     shift and go to state 49
    or_test                        shift and go to state 24
    expr                           shift and go to state 70

state 339

    (235) slice_item_list -> COMMA .
    (236) slice_item_list -> COMMA . slice_item slice_item_list
    (237) slice_item -> . test
    (238) slice_item -> . proper_slice
    (239) slice_item -> . ellipsis
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (240) proper_slice -> . short_slice
    (241) proper_slice -> . long_slice
    (251) ellipsis -> . DOT DOT DOT
    (142) or_test -> . and_test ortestlist
    (242) short_slice -> . lower_bound COLON
    (243) short_slice -> . lower_bound COLON upper_bound
    (244) short_slice -> . COLON
    (245) short_slice -> . COLON upper_bound
    (246) long_slice -> . short_slice COLON
    (247) long_slice -> . short_slice COLON stride
    (145) and_test -> . not_test andtestlist
    (248) lower_bound -> . test
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RSQB            reduce using rule 235 (slice_item_list -> COMMA .)
    DOT             shift and go to state 246
    COLON           shift and go to state 248
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    short_slice                    shift and go to state 375
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    lower_bound                    shift and go to state 252
    and_test                       shift and go to state 44
    test                           shift and go to state 398
    long_slice                     shift and go to state 253
    ellipsis                       shift and go to state 251
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    proper_slice                   shift and go to state 254
    or_test                        shift and go to state 24
    expr                           shift and go to state 70
    slice_item                     shift and go to state 399

state 340

    (233) slice_list -> slice_item slice_item_list .

    RSQB            reduce using rule 233 (slice_list -> slice_item slice_item_list .)


state 341

    (71) raise_stmt -> RAISE test COMMA test .
    (72) raise_stmt -> RAISE test COMMA test . COMMA test

    NEWLINE         reduce using rule 71 (raise_stmt -> RAISE test COMMA test .)
    SEMI            reduce using rule 71 (raise_stmt -> RAISE test COMMA test .)
    COMMA           shift and go to state 400


state 342

    (105) namelist -> COMMA NAME . namelist
    (104) namelist -> .
    (105) namelist -> . COMMA NAME namelist

    NEWLINE         reduce using rule 104 (namelist -> .)
    SEMI            reduce using rule 104 (namelist -> .)
    COLON           reduce using rule 104 (namelist -> .)
    COMMA           shift and go to state 261

    namelist                       shift and go to state 401

state 343

    (119) while_stmt -> WHILE test COLON suite .
    (120) while_stmt -> WHILE test COLON suite . ELSE COLON suite

    DEDENT          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    IF              reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    FOR             reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    WHILE           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    TRY             reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    DEF             reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    CLASS           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    WITH            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    PRINT           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    PASS            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    IMPORT          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    FROM            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    GLOBAL          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    ASSERT          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    DEL             reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    EXEC            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    AT              reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    BREAK           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    CONTINUE        reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    RETURN          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    RAISE           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    YIELD           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    NOT             reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    PLUS            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    MINUS           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    TILDE           reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    NAME            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    LPAREN          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    LSQB            reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    LBRACE          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    BACKQUOTE       reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    NUMBER          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    FNUMBER         reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    HEXADECIMALNUMBER reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    OCTALNUMBER     reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    BINARYNUMBER    reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    STRING          reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    TRIPLESTRING    reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    ENDMARKER       reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    NEWLINE         reduce using rule 119 (while_stmt -> WHILE test COLON suite .)
    ELSE            shift and go to state 402


state 344

    (165) xorexprlist -> VBAR xor_expr xorexprlist .

    LESS            reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    GREATER         reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    EQEQUAL         reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    GREATEREQUAL    reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    LESSEQUAL       reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    NOTEQUAL        reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    IN              reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    NOT             reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    IS              reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    AND             reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    OR              reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    IF              reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    COMMA           reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    EQUAL           reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    PLUSEQUAL       reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    MINEQUAL        reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    STAREQUAL       reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    SLASHEQUAL      reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    PERCENTEQUAL    reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    STARSTAREQUAL   reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    SLASHSLASHEQUAL reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    NEWLINE         reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    SEMI            reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    BACKQUOTE       reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    AS              reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    COLON           reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    FOR             reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    RBRACE          reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    RSQB            reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    RPAREN          reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)
    ELSE            reduce using rule 165 (xorexprlist -> VBAR xor_expr xorexprlist .)


state 345

    (219) list_for -> FOR targetlist . IN testlist_safe
    (220) list_for -> FOR targetlist . IN testlist_safe list_iter

    IN              shift and go to state 403


state 346

    (193) power -> NAME trailerlist STARSTAR factor .

    STAR            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    SLASH           reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    PERCENT         reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    SLASHSLASH      reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    PLUS            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    MINUS           reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    LEFTSHIFT       reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    RIGHTSHIFT      reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    AMPER           reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    CIRCUMFLEX      reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    VBAR            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    LESS            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    GREATER         reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    EQEQUAL         reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    GREATEREQUAL    reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    LESSEQUAL       reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    NOTEQUAL        reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    IN              reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    NOT             reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    IS              reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    AND             reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    OR              reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    IF              reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    COMMA           reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    NEWLINE         reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    SEMI            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    BACKQUOTE       reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    EQUAL           reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    PLUSEQUAL       reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    MINEQUAL        reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    STAREQUAL       reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    SLASHEQUAL      reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    PERCENTEQUAL    reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    STARSTAREQUAL   reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    SLASHSLASHEQUAL reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    AS              reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    COLON           reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    FOR             reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    RBRACE          reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    RSQB            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    RPAREN          reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)
    ELSE            reduce using rule 193 (power -> NAME trailerlist STARSTAR factor .)


state 347

    (152) compexprlist -> comp_op expr compexprlist .

    AND             reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    OR              reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    IF              reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    COMMA           reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    EQUAL           reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    PLUSEQUAL       reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    MINEQUAL        reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    STAREQUAL       reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    SLASHEQUAL      reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    PERCENTEQUAL    reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    STARSTAREQUAL   reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    SLASHSLASHEQUAL reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    NEWLINE         reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    SEMI            reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    BACKQUOTE       reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    AS              reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    COLON           reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    FOR             reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    RBRACE          reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    RSQB            reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    RPAREN          reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)
    ELSE            reduce using rule 152 (compexprlist -> comp_op expr compexprlist .)


state 348

    (168) andexprlist -> CIRCUMFLEX and_expr andexprlist .

    VBAR            reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    LESS            reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    GREATER         reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    EQEQUAL         reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    GREATEREQUAL    reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    LESSEQUAL       reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    NOTEQUAL        reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    IN              reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    NOT             reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    IS              reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    AND             reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    OR              reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    IF              reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    COMMA           reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    EQUAL           reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    PLUSEQUAL       reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    MINEQUAL        reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    STAREQUAL       reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    SLASHEQUAL      reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    PERCENTEQUAL    reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    STARSTAREQUAL   reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    SLASHSLASHEQUAL reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    NEWLINE         reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    SEMI            reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    BACKQUOTE       reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    AS              reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    COLON           reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    FOR             reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    RBRACE          reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    RSQB            reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    RPAREN          reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)
    ELSE            reduce using rule 168 (andexprlist -> CIRCUMFLEX and_expr andexprlist .)


state 349

    (147) andtestlist -> AND not_test andtestlist .

    OR              reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    IF              reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    COMMA           reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    EQUAL           reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    PLUSEQUAL       reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    MINEQUAL        reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    STAREQUAL       reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    SLASHEQUAL      reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    PERCENTEQUAL    reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    STARSTAREQUAL   reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    SLASHSLASHEQUAL reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    NEWLINE         reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    SEMI            reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    BACKQUOTE       reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    AS              reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    COLON           reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    FOR             reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    RBRACE          reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    RSQB            reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    RPAREN          reduce using rule 147 (andtestlist -> AND not_test andtestlist .)
    ELSE            reduce using rule 147 (andtestlist -> AND not_test andtestlist .)


state 350

    (265) classdef -> CLASS NAME COLON suite .

    ENDMARKER       reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    NEWLINE         reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    IF              reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    FOR             reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    WHILE           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    TRY             reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    DEF             reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    CLASS           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    WITH            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    PRINT           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    PASS            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    IMPORT          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    FROM            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    GLOBAL          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    ASSERT          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    DEL             reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    EXEC            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    AT              reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    BREAK           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    CONTINUE        reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    RETURN          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    RAISE           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    YIELD           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    NOT             reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    PLUS            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    MINUS           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    TILDE           reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    NAME            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    LPAREN          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    LSQB            reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    LBRACE          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    BACKQUOTE       reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    NUMBER          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    FNUMBER         reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    HEXADECIMALNUMBER reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    OCTALNUMBER     reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    BINARYNUMBER    reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    STRING          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    TRIPLESTRING    reduce using rule 265 (classdef -> CLASS NAME COLON suite .)
    DEDENT          reduce using rule 265 (classdef -> CLASS NAME COLON suite .)


state 351

    (266) classdef -> CLASS NAME LPAREN RPAREN . COLON suite

    COLON           shift and go to state 404


state 352

    (267) classdef -> CLASS NAME LPAREN testlist . RPAREN COLON suite

    RPAREN          shift and go to state 405


state 353

    (7) decorator -> AT module LPAREN arglist . RPAREN NEWLINE

    RPAREN          shift and go to state 406


state 354

    (6) decorator -> AT module LPAREN RPAREN . NEWLINE

    NEWLINE         shift and go to state 407


state 355

    (115) if_stmt -> IF test COLON suite . elif_list
    (116) if_stmt -> IF test COLON suite . elif_list ELSE COLON suite
    (117) elif_list -> .
    (118) elif_list -> . ELIF test COLON suite elif_list

    ELSE            reduce using rule 117 (elif_list -> .)
    ENDMARKER       reduce using rule 117 (elif_list -> .)
    NEWLINE         reduce using rule 117 (elif_list -> .)
    IF              reduce using rule 117 (elif_list -> .)
    FOR             reduce using rule 117 (elif_list -> .)
    WHILE           reduce using rule 117 (elif_list -> .)
    TRY             reduce using rule 117 (elif_list -> .)
    DEF             reduce using rule 117 (elif_list -> .)
    CLASS           reduce using rule 117 (elif_list -> .)
    WITH            reduce using rule 117 (elif_list -> .)
    PRINT           reduce using rule 117 (elif_list -> .)
    PASS            reduce using rule 117 (elif_list -> .)
    IMPORT          reduce using rule 117 (elif_list -> .)
    FROM            reduce using rule 117 (elif_list -> .)
    GLOBAL          reduce using rule 117 (elif_list -> .)
    ASSERT          reduce using rule 117 (elif_list -> .)
    DEL             reduce using rule 117 (elif_list -> .)
    EXEC            reduce using rule 117 (elif_list -> .)
    AT              reduce using rule 117 (elif_list -> .)
    BREAK           reduce using rule 117 (elif_list -> .)
    CONTINUE        reduce using rule 117 (elif_list -> .)
    RETURN          reduce using rule 117 (elif_list -> .)
    RAISE           reduce using rule 117 (elif_list -> .)
    YIELD           reduce using rule 117 (elif_list -> .)
    NOT             reduce using rule 117 (elif_list -> .)
    PLUS            reduce using rule 117 (elif_list -> .)
    MINUS           reduce using rule 117 (elif_list -> .)
    TILDE           reduce using rule 117 (elif_list -> .)
    NAME            reduce using rule 117 (elif_list -> .)
    LPAREN          reduce using rule 117 (elif_list -> .)
    LSQB            reduce using rule 117 (elif_list -> .)
    LBRACE          reduce using rule 117 (elif_list -> .)
    BACKQUOTE       reduce using rule 117 (elif_list -> .)
    NUMBER          reduce using rule 117 (elif_list -> .)
    FNUMBER         reduce using rule 117 (elif_list -> .)
    HEXADECIMALNUMBER reduce using rule 117 (elif_list -> .)
    OCTALNUMBER     reduce using rule 117 (elif_list -> .)
    BINARYNUMBER    reduce using rule 117 (elif_list -> .)
    STRING          reduce using rule 117 (elif_list -> .)
    TRIPLESTRING    reduce using rule 117 (elif_list -> .)
    DEDENT          reduce using rule 117 (elif_list -> .)
    ELIF            shift and go to state 408

    elif_list                      shift and go to state 409

state 356

    (78) import_stmt -> FROM relative_module IMPORT NAME . identlist
    (79) import_stmt -> FROM relative_module IMPORT NAME . AS NAME identlist
    (86) identlist -> .
    (87) identlist -> . COMMA NAME identlist
    (88) identlist -> . COMMA NAME AS NAME identlist

    AS              shift and go to state 411
    NEWLINE         reduce using rule 86 (identlist -> .)
    SEMI            reduce using rule 86 (identlist -> .)
    COMMA           shift and go to state 412

    identlist                      shift and go to state 410

state 357

    (80) import_stmt -> FROM relative_module IMPORT LPAREN . NAME commaidentlist RPAREN
    (81) import_stmt -> FROM relative_module IMPORT LPAREN . NAME AS NAME identlist RPAREN

    NAME            shift and go to state 413


state 358

    (94) relative_module -> NAME DOT NAME .
    (102) module -> NAME DOT NAME .

  ! reduce/reduce conflict for IMPORT resolved using rule 94 (relative_module -> NAME DOT NAME .)
    IMPORT          reduce using rule 94 (relative_module -> NAME DOT NAME .)

  ! IMPORT          [ reduce using rule 102 (module -> NAME DOT NAME .) ]


state 359

    (82) import_stmt -> FROM module IMPORT STAR .

    NEWLINE         reduce using rule 82 (import_stmt -> FROM module IMPORT STAR .)
    SEMI            reduce using rule 82 (import_stmt -> FROM module IMPORT STAR .)


state 360

    (98) dotplus -> DOT dotplus .

    IMPORT          reduce using rule 98 (dotplus -> DOT dotplus .)


state 361

    (135) with_item_list -> COMMA with_item with_item_list .

    COLON           reduce using rule 135 (with_item_list -> COMMA with_item with_item_list .)


state 362

    (133) with_stmt -> WITH with_item with_item_list COLON suite .

    ENDMARKER       reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    NEWLINE         reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    IF              reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    FOR             reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    WHILE           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    TRY             reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    DEF             reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    CLASS           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    WITH            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    PRINT           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    PASS            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    IMPORT          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    FROM            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    GLOBAL          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    ASSERT          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    DEL             reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    EXEC            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    AT              reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    BREAK           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    CONTINUE        reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    RETURN          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    RAISE           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    YIELD           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    NOT             reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    PLUS            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    MINUS           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    TILDE           reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    NAME            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    LPAREN          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    LSQB            reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    LBRACE          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    BACKQUOTE       reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    NUMBER          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    FNUMBER         reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    HEXADECIMALNUMBER reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    OCTALNUMBER     reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    BINARYNUMBER    reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    STRING          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    TRIPLESTRING    reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)
    DEDENT          reduce using rule 133 (with_stmt -> WITH with_item with_item_list COLON suite .)


state 363

    (77) import_stmt -> IMPORT module AS NAME modulelist .

    NEWLINE         reduce using rule 77 (import_stmt -> IMPORT module AS NAME modulelist .)
    SEMI            reduce using rule 77 (import_stmt -> IMPORT module AS NAME modulelist .)


state 364

    (84) modulelist -> COMMA module modulelist .

    NEWLINE         reduce using rule 84 (modulelist -> COMMA module modulelist .)
    SEMI            reduce using rule 84 (modulelist -> COMMA module modulelist .)


state 365

    (85) modulelist -> COMMA module AS . NAME modulelist

    NAME            shift and go to state 414


state 366

    (141) test -> or_test IF or_test ELSE test .

    COMMA           reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    NEWLINE         reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    SEMI            reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    EQUAL           reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    PLUSEQUAL       reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    MINEQUAL        reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    STAREQUAL       reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    SLASHEQUAL      reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    PERCENTEQUAL    reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    STARSTAREQUAL   reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    SLASHSLASHEQUAL reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    RPAREN          reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    BACKQUOTE       reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    AS              reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    COLON           reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    FOR             reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    RBRACE          reduce using rule 141 (test -> or_test IF or_test ELSE test .)
    RSQB            reduce using rule 141 (test -> or_test IF or_test ELSE test .)


state 367

    (12) funcdef -> DEF NAME parameters COLON suite .

    DEDENT          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    IF              reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    FOR             reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    WHILE           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    TRY             reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    DEF             reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    CLASS           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    WITH            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    PRINT           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    PASS            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    IMPORT          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    FROM            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    GLOBAL          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    ASSERT          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    DEL             reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    EXEC            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    AT              reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    BREAK           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    CONTINUE        reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    RETURN          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    RAISE           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    YIELD           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    NOT             reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    PLUS            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    MINUS           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    TILDE           reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    NAME            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    LPAREN          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    LSQB            reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    LBRACE          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    BACKQUOTE       reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    NUMBER          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    FNUMBER         reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    HEXADECIMALNUMBER reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    OCTALNUMBER     reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    BINARYNUMBER    reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    STRING          reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    TRIPLESTRING    reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    ENDMARKER       reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)
    NEWLINE         reduce using rule 12 (funcdef -> DEF NAME parameters COLON suite .)


state 368

    (15) varargslist -> fpdef EQUAL . test fpdeflist COMMA
    (16) varargslist -> fpdef EQUAL . test fpdeflist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 415
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 369

    (17) varargslist -> fpdef fpdeflist . COMMA
    (18) varargslist -> fpdef fpdeflist .
    (20) fpdeflist -> fpdeflist . COMMA fpdef
    (21) fpdeflist -> fpdeflist . COMMA fpdef EQUAL test

    COMMA           shift and go to state 416
    RPAREN          reduce using rule 18 (varargslist -> fpdef fpdeflist .)


state 370

    (13) parameters -> LPAREN varargslist RPAREN .

    COLON           reduce using rule 13 (parameters -> LPAREN varargslist RPAREN .)


state 371

    (24) fplist -> fpdef . fplist1 COMMA
    (25) fplist -> fpdef . fplist1
    (26) fplist1 -> .
    (27) fplist1 -> . fplist1 COMMA fpdef

    COMMA           reduce using rule 26 (fplist1 -> .)
    RPAREN          reduce using rule 26 (fplist1 -> .)

    fplist1                        shift and go to state 417

state 372

    (23) fpdef -> LPAREN fplist . RPAREN

    RPAREN          shift and go to state 418


state 373

    (121) for_stmt -> FOR targetlist IN testlist COLON . suite
    (122) for_stmt -> FOR targetlist IN testlist COLON . suite ELSE COLON suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 419
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 374

    (301) target -> atom trailerlist LSQB slice_list . RSQB

    RSQB            shift and go to state 420


state 375

    (240) proper_slice -> short_slice .
    (246) long_slice -> short_slice . COLON
    (247) long_slice -> short_slice . COLON stride

    COMMA           reduce using rule 240 (proper_slice -> short_slice .)
    RSQB            reduce using rule 240 (proper_slice -> short_slice .)
    COLON           shift and go to state 336


state 376

    (255) testlist -> test .
    (256) testlist -> test . COMMA
    (257) testlist -> test . COMMA testlist
    (237) slice_item -> test .
    (248) lower_bound -> test .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RSQB resolved using rule 237 (slice_item -> test .)
    COMMA           shift and go to state 181
    RSQB            reduce using rule 237 (slice_item -> test .)
    COLON           reduce using rule 248 (lower_bound -> test .)

  ! RSQB            [ reduce using rule 255 (testlist -> test .) ]
  ! COMMA           [ reduce using rule 237 (slice_item -> test .) ]


state 377

    (300) target -> atom trailerlist LSQB testlist . RSQB

    RSQB            shift and go to state 421


state 378

    (299) target -> atom trailerlist DOT NAME .

    COMMA           reduce using rule 299 (target -> atom trailerlist DOT NAME .)
    RPAREN          reduce using rule 299 (target -> atom trailerlist DOT NAME .)
    COLON           reduce using rule 299 (target -> atom trailerlist DOT NAME .)
    RSQB            reduce using rule 299 (target -> atom trailerlist DOT NAME .)
    IN              reduce using rule 299 (target -> atom trailerlist DOT NAME .)


state 379

    (139) suite -> NEWLINE INDENT stmts . DEDENT
    (290) stmts -> stmts . stmt
    (28) stmt -> . simple_stmt
    (29) stmt -> . compound_stmt
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (107) compound_stmt -> . if_stmt
    (108) compound_stmt -> . for_stmt
    (109) compound_stmt -> . while_stmt
    (110) compound_stmt -> . try_stmt
    (111) compound_stmt -> . funcdef
    (112) compound_stmt -> . classdef
    (113) compound_stmt -> . with_stmt
    (114) compound_stmt -> . decorated
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (115) if_stmt -> . IF test COLON suite elif_list
    (116) if_stmt -> . IF test COLON suite elif_list ELSE COLON suite
    (121) for_stmt -> . FOR targetlist IN testlist COLON suite
    (122) for_stmt -> . FOR targetlist IN testlist COLON suite ELSE COLON suite
    (119) while_stmt -> . WHILE test COLON suite
    (120) while_stmt -> . WHILE test COLON suite ELSE COLON suite
    (123) try_stmt -> . TRY COLON suite except_stmt except_list
    (124) try_stmt -> . TRY COLON suite except_stmt except_list ELSE COLON suite
    (125) try_stmt -> . TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> . TRY COLON suite except_stmt except_list FINALLY COLON suite
    (127) try_stmt -> . TRY COLON suite FINALLY COLON suite
    (12) funcdef -> . DEF NAME parameters COLON suite
    (265) classdef -> . CLASS NAME COLON suite
    (266) classdef -> . CLASS NAME LPAREN RPAREN COLON suite
    (267) classdef -> . CLASS NAME LPAREN testlist RPAREN COLON suite
    (133) with_stmt -> . WITH with_item with_item_list COLON suite
    (10) decorated -> . decorators classdef
    (11) decorated -> . decorators funcdef
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (8) decorators -> . decorator
    (9) decorators -> . decorator decorators
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (5) decorator -> . AT module NEWLINE
    (6) decorator -> . AT module LPAREN RPAREN NEWLINE
    (7) decorator -> . AT module LPAREN arglist RPAREN NEWLINE
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    DEDENT          shift and go to state 422
    IF              shift and go to state 85
    FOR             shift and go to state 40
    WHILE           shift and go to state 56
    TRY             shift and go to state 42
    DEF             shift and go to state 30
    CLASS           shift and go to state 79
    WITH            shift and go to state 8
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    AT              shift and go to state 82
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    try_stmt                       shift and go to state 7
    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    or_test                        shift and go to state 24
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    del_stmt                       shift and go to state 87
    raise_stmt                     shift and go to state 66
    atom                           shift and go to state 50
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 15
    testlist                       shift and go to state 16
    classdef                       shift and go to state 17
    stmt                           shift and go to state 423
    assert_stmt                    shift and go to state 18
    for_stmt                       shift and go to state 19
    and_test                       shift and go to state 44
    global_stmt                    shift and go to state 78
    funcdef                        shift and go to state 64
    decorated                      shift and go to state 84
    import_stmt                    shift and go to state 45
    decorator                      shift and go to state 21
    pass_stmt                      shift and go to state 48
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    if_stmt                        shift and go to state 23
    xor_expr                       shift and go to state 59
    decorators                     shift and go to state 37
    aug_stmt                       shift and go to state 43
    compound_stmt                  shift and go to state 38
    with_stmt                      shift and go to state 25
    while_stmt                     shift and go to state 88
    yield_stmt                     shift and go to state 73
    expr                           shift and go to state 70
    and_expr                       shift and go to state 72
    small_stmts                    shift and go to state 53

state 380

    (291) stmts -> stmt .

    DEDENT          reduce using rule 291 (stmts -> stmt .)
    IF              reduce using rule 291 (stmts -> stmt .)
    FOR             reduce using rule 291 (stmts -> stmt .)
    WHILE           reduce using rule 291 (stmts -> stmt .)
    TRY             reduce using rule 291 (stmts -> stmt .)
    DEF             reduce using rule 291 (stmts -> stmt .)
    CLASS           reduce using rule 291 (stmts -> stmt .)
    WITH            reduce using rule 291 (stmts -> stmt .)
    PRINT           reduce using rule 291 (stmts -> stmt .)
    PASS            reduce using rule 291 (stmts -> stmt .)
    IMPORT          reduce using rule 291 (stmts -> stmt .)
    FROM            reduce using rule 291 (stmts -> stmt .)
    GLOBAL          reduce using rule 291 (stmts -> stmt .)
    ASSERT          reduce using rule 291 (stmts -> stmt .)
    DEL             reduce using rule 291 (stmts -> stmt .)
    EXEC            reduce using rule 291 (stmts -> stmt .)
    AT              reduce using rule 291 (stmts -> stmt .)
    BREAK           reduce using rule 291 (stmts -> stmt .)
    CONTINUE        reduce using rule 291 (stmts -> stmt .)
    RETURN          reduce using rule 291 (stmts -> stmt .)
    RAISE           reduce using rule 291 (stmts -> stmt .)
    YIELD           reduce using rule 291 (stmts -> stmt .)
    NOT             reduce using rule 291 (stmts -> stmt .)
    PLUS            reduce using rule 291 (stmts -> stmt .)
    MINUS           reduce using rule 291 (stmts -> stmt .)
    TILDE           reduce using rule 291 (stmts -> stmt .)
    NAME            reduce using rule 291 (stmts -> stmt .)
    LPAREN          reduce using rule 291 (stmts -> stmt .)
    LSQB            reduce using rule 291 (stmts -> stmt .)
    LBRACE          reduce using rule 291 (stmts -> stmt .)
    BACKQUOTE       reduce using rule 291 (stmts -> stmt .)
    NUMBER          reduce using rule 291 (stmts -> stmt .)
    FNUMBER         reduce using rule 291 (stmts -> stmt .)
    HEXADECIMALNUMBER reduce using rule 291 (stmts -> stmt .)
    OCTALNUMBER     reduce using rule 291 (stmts -> stmt .)
    BINARYNUMBER    reduce using rule 291 (stmts -> stmt .)
    STRING          reduce using rule 291 (stmts -> stmt .)
    TRIPLESTRING    reduce using rule 291 (stmts -> stmt .)


state 381

    (131) except_stmt -> EXCEPT NAME . namelist COLON suite
    (132) except_stmt -> EXCEPT NAME . AS NAME COLON suite
    (104) namelist -> .
    (105) namelist -> . COMMA NAME namelist

    AS              shift and go to state 425
    COLON           reduce using rule 104 (namelist -> .)
    COMMA           shift and go to state 261

    namelist                       shift and go to state 424

state 382

    (130) except_stmt -> EXCEPT COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 426
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 383

    (127) try_stmt -> TRY COLON suite FINALLY COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 427
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 384

    (123) try_stmt -> TRY COLON suite except_stmt except_list .
    (124) try_stmt -> TRY COLON suite except_stmt except_list . ELSE COLON suite
    (125) try_stmt -> TRY COLON suite except_stmt except_list . ELSE COLON suite FINALLY COLON suite
    (126) try_stmt -> TRY COLON suite except_stmt except_list . FINALLY COLON suite

    DEDENT          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    IF              reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    FOR             reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    WHILE           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    TRY             reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    DEF             reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    CLASS           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    WITH            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    PRINT           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    PASS            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    IMPORT          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    FROM            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    GLOBAL          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    ASSERT          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    DEL             reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    EXEC            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    AT              reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    BREAK           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    CONTINUE        reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    RETURN          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    RAISE           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    YIELD           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    NOT             reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    PLUS            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    MINUS           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    TILDE           reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    NAME            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    LPAREN          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    LSQB            reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    LBRACE          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    BACKQUOTE       reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    NUMBER          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    FNUMBER         reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    HEXADECIMALNUMBER reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    OCTALNUMBER     reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    BINARYNUMBER    reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    STRING          reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    TRIPLESTRING    reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    ENDMARKER       reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    NEWLINE         reduce using rule 123 (try_stmt -> TRY COLON suite except_stmt except_list .)
    ELSE            shift and go to state 428
    FINALLY         shift and go to state 429


state 385

    (129) except_list -> except_stmt . except_list
    (128) except_list -> .
    (129) except_list -> . except_stmt except_list
    (130) except_stmt -> . EXCEPT COLON suite
    (131) except_stmt -> . EXCEPT NAME namelist COLON suite
    (132) except_stmt -> . EXCEPT NAME AS NAME COLON suite

    ELSE            reduce using rule 128 (except_list -> .)
    FINALLY         reduce using rule 128 (except_list -> .)
    ENDMARKER       reduce using rule 128 (except_list -> .)
    NEWLINE         reduce using rule 128 (except_list -> .)
    IF              reduce using rule 128 (except_list -> .)
    FOR             reduce using rule 128 (except_list -> .)
    WHILE           reduce using rule 128 (except_list -> .)
    TRY             reduce using rule 128 (except_list -> .)
    DEF             reduce using rule 128 (except_list -> .)
    CLASS           reduce using rule 128 (except_list -> .)
    WITH            reduce using rule 128 (except_list -> .)
    PRINT           reduce using rule 128 (except_list -> .)
    PASS            reduce using rule 128 (except_list -> .)
    IMPORT          reduce using rule 128 (except_list -> .)
    FROM            reduce using rule 128 (except_list -> .)
    GLOBAL          reduce using rule 128 (except_list -> .)
    ASSERT          reduce using rule 128 (except_list -> .)
    DEL             reduce using rule 128 (except_list -> .)
    EXEC            reduce using rule 128 (except_list -> .)
    AT              reduce using rule 128 (except_list -> .)
    BREAK           reduce using rule 128 (except_list -> .)
    CONTINUE        reduce using rule 128 (except_list -> .)
    RETURN          reduce using rule 128 (except_list -> .)
    RAISE           reduce using rule 128 (except_list -> .)
    YIELD           reduce using rule 128 (except_list -> .)
    NOT             reduce using rule 128 (except_list -> .)
    PLUS            reduce using rule 128 (except_list -> .)
    MINUS           reduce using rule 128 (except_list -> .)
    TILDE           reduce using rule 128 (except_list -> .)
    NAME            reduce using rule 128 (except_list -> .)
    LPAREN          reduce using rule 128 (except_list -> .)
    LSQB            reduce using rule 128 (except_list -> .)
    LBRACE          reduce using rule 128 (except_list -> .)
    BACKQUOTE       reduce using rule 128 (except_list -> .)
    NUMBER          reduce using rule 128 (except_list -> .)
    FNUMBER         reduce using rule 128 (except_list -> .)
    HEXADECIMALNUMBER reduce using rule 128 (except_list -> .)
    OCTALNUMBER     reduce using rule 128 (except_list -> .)
    BINARYNUMBER    reduce using rule 128 (except_list -> .)
    STRING          reduce using rule 128 (except_list -> .)
    TRIPLESTRING    reduce using rule 128 (except_list -> .)
    DEDENT          reduce using rule 128 (except_list -> .)
    EXCEPT          shift and go to state 318

    except_list                    shift and go to state 430
    except_stmt                    shift and go to state 385

state 386

    (284) comp_for -> FOR targetlist IN . or_test
    (285) comp_for -> FOR targetlist IN . or_test comp_iter
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 431

state 387

    (263) testcolonlist -> test COLON test COMMA .
    (264) testcolonlist -> test COLON test COMMA . testcolonlist
    (262) testcolonlist -> . test COLON test
    (263) testcolonlist -> . test COLON test COMMA
    (264) testcolonlist -> . test COLON test COMMA testcolonlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    RBRACE          reduce using rule 263 (testcolonlist -> test COLON test COMMA .)
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    testcolonlist                  shift and go to state 432
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 433
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 388

    (258) dictorsetmaker -> test COLON test comp_for .

    RBRACE          reduce using rule 258 (dictorsetmaker -> test COLON test comp_for .)


state 389

    (281) argument -> test EQUAL test .

    COMMA           reduce using rule 281 (argument -> test EQUAL test .)
    RPAREN          reduce using rule 281 (argument -> test EQUAL test .)


state 390

    (278) arglist1 -> argument COMMA arglist1 .

    RPAREN          reduce using rule 278 (arglist1 -> argument COMMA arglist1 .)


state 391

    (273) arglist3 -> argument COMMA arglist3 .

    STAR            reduce using rule 273 (arglist3 -> argument COMMA arglist3 .)


state 392

    (271) arglist -> arglist3 STAR STAR . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 434
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 393

    (269) arglist -> arglist3 STAR test . arglist2 COMMA STAR STAR test
    (270) arglist -> arglist3 STAR test . arglist2
    (274) arglist2 -> .
    (275) arglist2 -> . arglist2 COMMA argument

    COMMA           reduce using rule 274 (arglist2 -> .)
    RPAREN          reduce using rule 274 (arglist2 -> .)

    arglist2                       shift and go to state 435

state 394

    (251) ellipsis -> DOT DOT DOT .

    COMMA           reduce using rule 251 (ellipsis -> DOT DOT DOT .)
    RSQB            reduce using rule 251 (ellipsis -> DOT DOT DOT .)


state 395

    (250) stride -> test .

    COMMA           reduce using rule 250 (stride -> test .)
    RSQB            reduce using rule 250 (stride -> test .)


state 396

    (247) long_slice -> short_slice COLON stride .

    COMMA           reduce using rule 247 (long_slice -> short_slice COLON stride .)
    RSQB            reduce using rule 247 (long_slice -> short_slice COLON stride .)


state 397

    (243) short_slice -> lower_bound COLON upper_bound .

    COLON           reduce using rule 243 (short_slice -> lower_bound COLON upper_bound .)
    COMMA           reduce using rule 243 (short_slice -> lower_bound COLON upper_bound .)
    RSQB            reduce using rule 243 (short_slice -> lower_bound COLON upper_bound .)


state 398

    (237) slice_item -> test .
    (248) lower_bound -> test .

    COMMA           reduce using rule 237 (slice_item -> test .)
    RSQB            reduce using rule 237 (slice_item -> test .)
    COLON           reduce using rule 248 (lower_bound -> test .)


state 399

    (236) slice_item_list -> COMMA slice_item . slice_item_list
    (234) slice_item_list -> .
    (235) slice_item_list -> . COMMA
    (236) slice_item_list -> . COMMA slice_item slice_item_list

    RSQB            reduce using rule 234 (slice_item_list -> .)
    COMMA           shift and go to state 339

    slice_item_list                shift and go to state 436

state 400

    (72) raise_stmt -> RAISE test COMMA test COMMA . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 437
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 401

    (105) namelist -> COMMA NAME namelist .

    NEWLINE         reduce using rule 105 (namelist -> COMMA NAME namelist .)
    SEMI            reduce using rule 105 (namelist -> COMMA NAME namelist .)
    COLON           reduce using rule 105 (namelist -> COMMA NAME namelist .)


state 402

    (120) while_stmt -> WHILE test COLON suite ELSE . COLON suite

    COLON           shift and go to state 438


state 403

    (219) list_for -> FOR targetlist IN . testlist_safe
    (220) list_for -> FOR targetlist IN . testlist_safe list_iter
    (223) testlist_safe -> . old_test
    (224) testlist_safe -> . old_test COMMA commaoldtest
    (227) old_test -> . or_test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    old_test                       shift and go to state 439
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    testlist_safe                  shift and go to state 441
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 440

state 404

    (266) classdef -> CLASS NAME LPAREN RPAREN COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 442
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 405

    (267) classdef -> CLASS NAME LPAREN testlist RPAREN . COLON suite

    COLON           shift and go to state 443


state 406

    (7) decorator -> AT module LPAREN arglist RPAREN . NEWLINE

    NEWLINE         shift and go to state 444


state 407

    (6) decorator -> AT module LPAREN RPAREN NEWLINE .

    AT              reduce using rule 6 (decorator -> AT module LPAREN RPAREN NEWLINE .)
    CLASS           reduce using rule 6 (decorator -> AT module LPAREN RPAREN NEWLINE .)
    DEF             reduce using rule 6 (decorator -> AT module LPAREN RPAREN NEWLINE .)


state 408

    (118) elif_list -> ELIF . test COLON suite elif_list
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    atom                           shift and go to state 50
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 445
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 409

    (115) if_stmt -> IF test COLON suite elif_list .
    (116) if_stmt -> IF test COLON suite elif_list . ELSE COLON suite

    DEDENT          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    IF              reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    FOR             reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    WHILE           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    TRY             reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    DEF             reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    CLASS           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    WITH            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    PRINT           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    PASS            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    IMPORT          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    FROM            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    GLOBAL          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    ASSERT          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    DEL             reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    EXEC            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    AT              reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    BREAK           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    CONTINUE        reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    RETURN          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    RAISE           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    YIELD           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    NOT             reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    PLUS            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    MINUS           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    TILDE           reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    NAME            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    LPAREN          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    LSQB            reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    LBRACE          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    BACKQUOTE       reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    NUMBER          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    FNUMBER         reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    HEXADECIMALNUMBER reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    OCTALNUMBER     reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    BINARYNUMBER    reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    STRING          reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    TRIPLESTRING    reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    ENDMARKER       reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    NEWLINE         reduce using rule 115 (if_stmt -> IF test COLON suite elif_list .)
    ELSE            shift and go to state 446


state 410

    (78) import_stmt -> FROM relative_module IMPORT NAME identlist .

    NEWLINE         reduce using rule 78 (import_stmt -> FROM relative_module IMPORT NAME identlist .)
    SEMI            reduce using rule 78 (import_stmt -> FROM relative_module IMPORT NAME identlist .)


state 411

    (79) import_stmt -> FROM relative_module IMPORT NAME AS . NAME identlist

    NAME            shift and go to state 447


state 412

    (87) identlist -> COMMA . NAME identlist
    (88) identlist -> COMMA . NAME AS NAME identlist

    NAME            shift and go to state 448


state 413

    (80) import_stmt -> FROM relative_module IMPORT LPAREN NAME . commaidentlist RPAREN
    (81) import_stmt -> FROM relative_module IMPORT LPAREN NAME . AS NAME identlist RPAREN
    (89) commaidentlist -> .
    (90) commaidentlist -> . COMMA
    (91) commaidentlist -> . COMMA NAME commaidentlist
    (92) commaidentlist -> . COMMA NAME AS NAME commaidentlist

    AS              shift and go to state 449
    RPAREN          reduce using rule 89 (commaidentlist -> .)
    COMMA           shift and go to state 450

    commaidentlist                 shift and go to state 451

state 414

    (85) modulelist -> COMMA module AS NAME . modulelist
    (83) modulelist -> .
    (84) modulelist -> . COMMA module modulelist
    (85) modulelist -> . COMMA module AS NAME modulelist

    NEWLINE         reduce using rule 83 (modulelist -> .)
    SEMI            reduce using rule 83 (modulelist -> .)
    COMMA           shift and go to state 206

    modulelist                     shift and go to state 452

state 415

    (15) varargslist -> fpdef EQUAL test . fpdeflist COMMA
    (16) varargslist -> fpdef EQUAL test . fpdeflist
    (19) fpdeflist -> .
    (20) fpdeflist -> . fpdeflist COMMA fpdef
    (21) fpdeflist -> . fpdeflist COMMA fpdef EQUAL test

    COMMA           reduce using rule 19 (fpdeflist -> .)
    RPAREN          reduce using rule 19 (fpdeflist -> .)

    fpdeflist                      shift and go to state 453

state 416

    (17) varargslist -> fpdef fpdeflist COMMA .
    (20) fpdeflist -> fpdeflist COMMA . fpdef
    (21) fpdeflist -> fpdeflist COMMA . fpdef EQUAL test
    (22) fpdef -> . NAME
    (23) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 17 (varargslist -> fpdef fpdeflist COMMA .)
    NAME            shift and go to state 305
    LPAREN          shift and go to state 308

    fpdef                          shift and go to state 454

state 417

    (24) fplist -> fpdef fplist1 . COMMA
    (25) fplist -> fpdef fplist1 .
    (27) fplist1 -> fplist1 . COMMA fpdef

    COMMA           shift and go to state 455
    RPAREN          reduce using rule 25 (fplist -> fpdef fplist1 .)


state 418

    (23) fpdef -> LPAREN fplist RPAREN .

    EQUAL           reduce using rule 23 (fpdef -> LPAREN fplist RPAREN .)
    COMMA           reduce using rule 23 (fpdef -> LPAREN fplist RPAREN .)
    RPAREN          reduce using rule 23 (fpdef -> LPAREN fplist RPAREN .)


state 419

    (121) for_stmt -> FOR targetlist IN testlist COLON suite .
    (122) for_stmt -> FOR targetlist IN testlist COLON suite . ELSE COLON suite

    DEDENT          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    IF              reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    FOR             reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    WHILE           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    TRY             reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    DEF             reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    CLASS           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    WITH            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    PRINT           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    PASS            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    IMPORT          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    FROM            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    GLOBAL          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    ASSERT          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    DEL             reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    EXEC            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    AT              reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    BREAK           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    CONTINUE        reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    RETURN          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    RAISE           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    YIELD           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    NOT             reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    PLUS            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    MINUS           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    TILDE           reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    NAME            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    LPAREN          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    LSQB            reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    LBRACE          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    BACKQUOTE       reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    NUMBER          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    FNUMBER         reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    HEXADECIMALNUMBER reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    OCTALNUMBER     reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    BINARYNUMBER    reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    STRING          reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    TRIPLESTRING    reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    ENDMARKER       reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    NEWLINE         reduce using rule 121 (for_stmt -> FOR targetlist IN testlist COLON suite .)
    ELSE            shift and go to state 456


state 420

    (301) target -> atom trailerlist LSQB slice_list RSQB .

    COMMA           reduce using rule 301 (target -> atom trailerlist LSQB slice_list RSQB .)
    RPAREN          reduce using rule 301 (target -> atom trailerlist LSQB slice_list RSQB .)
    COLON           reduce using rule 301 (target -> atom trailerlist LSQB slice_list RSQB .)
    RSQB            reduce using rule 301 (target -> atom trailerlist LSQB slice_list RSQB .)
    IN              reduce using rule 301 (target -> atom trailerlist LSQB slice_list RSQB .)


state 421

    (300) target -> atom trailerlist LSQB testlist RSQB .

    COMMA           reduce using rule 300 (target -> atom trailerlist LSQB testlist RSQB .)
    RPAREN          reduce using rule 300 (target -> atom trailerlist LSQB testlist RSQB .)
    COLON           reduce using rule 300 (target -> atom trailerlist LSQB testlist RSQB .)
    RSQB            reduce using rule 300 (target -> atom trailerlist LSQB testlist RSQB .)
    IN              reduce using rule 300 (target -> atom trailerlist LSQB testlist RSQB .)


state 422

    (139) suite -> NEWLINE INDENT stmts DEDENT .

    ENDMARKER       reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    NEWLINE         reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    IF              reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    FOR             reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    WHILE           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    TRY             reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEF             reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    CLASS           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    WITH            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    PRINT           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    PASS            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    IMPORT          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    FROM            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    GLOBAL          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    ASSERT          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEL             reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    EXEC            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    AT              reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    BREAK           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    CONTINUE        reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    RETURN          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    RAISE           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    YIELD           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    NOT             reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    PLUS            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    MINUS           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    TILDE           reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    NAME            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    LPAREN          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    LSQB            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    LBRACE          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    BACKQUOTE       reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    NUMBER          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    FNUMBER         reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    HEXADECIMALNUMBER reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    OCTALNUMBER     reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    BINARYNUMBER    reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    STRING          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    TRIPLESTRING    reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    DEDENT          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELSE            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    FINALLY         reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    EXCEPT          reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)
    ELIF            reduce using rule 139 (suite -> NEWLINE INDENT stmts DEDENT .)


state 423

    (290) stmts -> stmts stmt .

    DEDENT          reduce using rule 290 (stmts -> stmts stmt .)
    IF              reduce using rule 290 (stmts -> stmts stmt .)
    FOR             reduce using rule 290 (stmts -> stmts stmt .)
    WHILE           reduce using rule 290 (stmts -> stmts stmt .)
    TRY             reduce using rule 290 (stmts -> stmts stmt .)
    DEF             reduce using rule 290 (stmts -> stmts stmt .)
    CLASS           reduce using rule 290 (stmts -> stmts stmt .)
    WITH            reduce using rule 290 (stmts -> stmts stmt .)
    PRINT           reduce using rule 290 (stmts -> stmts stmt .)
    PASS            reduce using rule 290 (stmts -> stmts stmt .)
    IMPORT          reduce using rule 290 (stmts -> stmts stmt .)
    FROM            reduce using rule 290 (stmts -> stmts stmt .)
    GLOBAL          reduce using rule 290 (stmts -> stmts stmt .)
    ASSERT          reduce using rule 290 (stmts -> stmts stmt .)
    DEL             reduce using rule 290 (stmts -> stmts stmt .)
    EXEC            reduce using rule 290 (stmts -> stmts stmt .)
    AT              reduce using rule 290 (stmts -> stmts stmt .)
    BREAK           reduce using rule 290 (stmts -> stmts stmt .)
    CONTINUE        reduce using rule 290 (stmts -> stmts stmt .)
    RETURN          reduce using rule 290 (stmts -> stmts stmt .)
    RAISE           reduce using rule 290 (stmts -> stmts stmt .)
    YIELD           reduce using rule 290 (stmts -> stmts stmt .)
    NOT             reduce using rule 290 (stmts -> stmts stmt .)
    PLUS            reduce using rule 290 (stmts -> stmts stmt .)
    MINUS           reduce using rule 290 (stmts -> stmts stmt .)
    TILDE           reduce using rule 290 (stmts -> stmts stmt .)
    NAME            reduce using rule 290 (stmts -> stmts stmt .)
    LPAREN          reduce using rule 290 (stmts -> stmts stmt .)
    LSQB            reduce using rule 290 (stmts -> stmts stmt .)
    LBRACE          reduce using rule 290 (stmts -> stmts stmt .)
    BACKQUOTE       reduce using rule 290 (stmts -> stmts stmt .)
    NUMBER          reduce using rule 290 (stmts -> stmts stmt .)
    FNUMBER         reduce using rule 290 (stmts -> stmts stmt .)
    HEXADECIMALNUMBER reduce using rule 290 (stmts -> stmts stmt .)
    OCTALNUMBER     reduce using rule 290 (stmts -> stmts stmt .)
    BINARYNUMBER    reduce using rule 290 (stmts -> stmts stmt .)
    STRING          reduce using rule 290 (stmts -> stmts stmt .)
    TRIPLESTRING    reduce using rule 290 (stmts -> stmts stmt .)


state 424

    (131) except_stmt -> EXCEPT NAME namelist . COLON suite

    COLON           shift and go to state 457


state 425

    (132) except_stmt -> EXCEPT NAME AS . NAME COLON suite

    NAME            shift and go to state 458


state 426

    (130) except_stmt -> EXCEPT COLON suite .

    EXCEPT          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    ELSE            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    FINALLY         reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    ENDMARKER       reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    NEWLINE         reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    IF              reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    FOR             reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    WHILE           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    TRY             reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    DEF             reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    CLASS           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    WITH            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    PRINT           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    PASS            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    IMPORT          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    FROM            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    GLOBAL          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    ASSERT          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    DEL             reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    EXEC            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    AT              reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    BREAK           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    CONTINUE        reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    RETURN          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    RAISE           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    YIELD           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    NOT             reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    PLUS            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    MINUS           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    TILDE           reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    NAME            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    LPAREN          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    LSQB            reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    LBRACE          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    BACKQUOTE       reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    NUMBER          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    FNUMBER         reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    HEXADECIMALNUMBER reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    OCTALNUMBER     reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    BINARYNUMBER    reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    STRING          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    TRIPLESTRING    reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)
    DEDENT          reduce using rule 130 (except_stmt -> EXCEPT COLON suite .)


state 427

    (127) try_stmt -> TRY COLON suite FINALLY COLON suite .

    DEDENT          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    IF              reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    FOR             reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    WHILE           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    TRY             reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    DEF             reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    CLASS           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    WITH            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    PRINT           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    PASS            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    IMPORT          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    FROM            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    GLOBAL          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    ASSERT          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    DEL             reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    EXEC            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    AT              reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    BREAK           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    CONTINUE        reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    RETURN          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    RAISE           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    YIELD           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NOT             reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    PLUS            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    MINUS           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    TILDE           reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NAME            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LPAREN          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LSQB            reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    LBRACE          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    BACKQUOTE       reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NUMBER          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    FNUMBER         reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    HEXADECIMALNUMBER reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    OCTALNUMBER     reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    BINARYNUMBER    reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    STRING          reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    TRIPLESTRING    reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    ENDMARKER       reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)
    NEWLINE         reduce using rule 127 (try_stmt -> TRY COLON suite FINALLY COLON suite .)


state 428

    (124) try_stmt -> TRY COLON suite except_stmt except_list ELSE . COLON suite
    (125) try_stmt -> TRY COLON suite except_stmt except_list ELSE . COLON suite FINALLY COLON suite

    COLON           shift and go to state 459


state 429

    (126) try_stmt -> TRY COLON suite except_stmt except_list FINALLY . COLON suite

    COLON           shift and go to state 460


state 430

    (129) except_list -> except_stmt except_list .

    ELSE            reduce using rule 129 (except_list -> except_stmt except_list .)
    FINALLY         reduce using rule 129 (except_list -> except_stmt except_list .)
    ENDMARKER       reduce using rule 129 (except_list -> except_stmt except_list .)
    NEWLINE         reduce using rule 129 (except_list -> except_stmt except_list .)
    IF              reduce using rule 129 (except_list -> except_stmt except_list .)
    FOR             reduce using rule 129 (except_list -> except_stmt except_list .)
    WHILE           reduce using rule 129 (except_list -> except_stmt except_list .)
    TRY             reduce using rule 129 (except_list -> except_stmt except_list .)
    DEF             reduce using rule 129 (except_list -> except_stmt except_list .)
    CLASS           reduce using rule 129 (except_list -> except_stmt except_list .)
    WITH            reduce using rule 129 (except_list -> except_stmt except_list .)
    PRINT           reduce using rule 129 (except_list -> except_stmt except_list .)
    PASS            reduce using rule 129 (except_list -> except_stmt except_list .)
    IMPORT          reduce using rule 129 (except_list -> except_stmt except_list .)
    FROM            reduce using rule 129 (except_list -> except_stmt except_list .)
    GLOBAL          reduce using rule 129 (except_list -> except_stmt except_list .)
    ASSERT          reduce using rule 129 (except_list -> except_stmt except_list .)
    DEL             reduce using rule 129 (except_list -> except_stmt except_list .)
    EXEC            reduce using rule 129 (except_list -> except_stmt except_list .)
    AT              reduce using rule 129 (except_list -> except_stmt except_list .)
    BREAK           reduce using rule 129 (except_list -> except_stmt except_list .)
    CONTINUE        reduce using rule 129 (except_list -> except_stmt except_list .)
    RETURN          reduce using rule 129 (except_list -> except_stmt except_list .)
    RAISE           reduce using rule 129 (except_list -> except_stmt except_list .)
    YIELD           reduce using rule 129 (except_list -> except_stmt except_list .)
    NOT             reduce using rule 129 (except_list -> except_stmt except_list .)
    PLUS            reduce using rule 129 (except_list -> except_stmt except_list .)
    MINUS           reduce using rule 129 (except_list -> except_stmt except_list .)
    TILDE           reduce using rule 129 (except_list -> except_stmt except_list .)
    NAME            reduce using rule 129 (except_list -> except_stmt except_list .)
    LPAREN          reduce using rule 129 (except_list -> except_stmt except_list .)
    LSQB            reduce using rule 129 (except_list -> except_stmt except_list .)
    LBRACE          reduce using rule 129 (except_list -> except_stmt except_list .)
    BACKQUOTE       reduce using rule 129 (except_list -> except_stmt except_list .)
    NUMBER          reduce using rule 129 (except_list -> except_stmt except_list .)
    FNUMBER         reduce using rule 129 (except_list -> except_stmt except_list .)
    HEXADECIMALNUMBER reduce using rule 129 (except_list -> except_stmt except_list .)
    OCTALNUMBER     reduce using rule 129 (except_list -> except_stmt except_list .)
    BINARYNUMBER    reduce using rule 129 (except_list -> except_stmt except_list .)
    STRING          reduce using rule 129 (except_list -> except_stmt except_list .)
    TRIPLESTRING    reduce using rule 129 (except_list -> except_stmt except_list .)
    DEDENT          reduce using rule 129 (except_list -> except_stmt except_list .)


state 431

    (284) comp_for -> FOR targetlist IN or_test .
    (285) comp_for -> FOR targetlist IN or_test . comp_iter
    (282) comp_iter -> . comp_for
    (283) comp_iter -> . comp_if
    (284) comp_for -> . FOR targetlist IN or_test
    (285) comp_for -> . FOR targetlist IN or_test comp_iter
    (286) comp_if -> . IF old_test
    (287) comp_if -> . IF old_test comp_iter

    RBRACE          reduce using rule 284 (comp_for -> FOR targetlist IN or_test .)
    COMMA           reduce using rule 284 (comp_for -> FOR targetlist IN or_test .)
    RPAREN          reduce using rule 284 (comp_for -> FOR targetlist IN or_test .)
    FOR             shift and go to state 233
    IF              shift and go to state 464

    comp_if                        shift and go to state 461
    comp_for                       shift and go to state 462
    comp_iter                      shift and go to state 463

state 432

    (264) testcolonlist -> test COLON test COMMA testcolonlist .

    RBRACE          reduce using rule 264 (testcolonlist -> test COLON test COMMA testcolonlist .)


state 433

    (262) testcolonlist -> test . COLON test
    (263) testcolonlist -> test . COLON test COMMA
    (264) testcolonlist -> test . COLON test COMMA testcolonlist

    COLON           shift and go to state 465


state 434

    (271) arglist -> arglist3 STAR STAR test .

    RPAREN          reduce using rule 271 (arglist -> arglist3 STAR STAR test .)


state 435

    (269) arglist -> arglist3 STAR test arglist2 . COMMA STAR STAR test
    (270) arglist -> arglist3 STAR test arglist2 .
    (275) arglist2 -> arglist2 . COMMA argument

    COMMA           shift and go to state 466
    RPAREN          reduce using rule 270 (arglist -> arglist3 STAR test arglist2 .)


state 436

    (236) slice_item_list -> COMMA slice_item slice_item_list .

    RSQB            reduce using rule 236 (slice_item_list -> COMMA slice_item slice_item_list .)


state 437

    (72) raise_stmt -> RAISE test COMMA test COMMA test .

    NEWLINE         reduce using rule 72 (raise_stmt -> RAISE test COMMA test COMMA test .)
    SEMI            reduce using rule 72 (raise_stmt -> RAISE test COMMA test COMMA test .)


state 438

    (120) while_stmt -> WHILE test COLON suite ELSE COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 467
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 439

    (223) testlist_safe -> old_test .
    (224) testlist_safe -> old_test . COMMA commaoldtest

    FOR             reduce using rule 223 (testlist_safe -> old_test .)
    IF              reduce using rule 223 (testlist_safe -> old_test .)
    RSQB            reduce using rule 223 (testlist_safe -> old_test .)
    COMMA           shift and go to state 468


state 440

    (227) old_test -> or_test .

    COMMA           reduce using rule 227 (old_test -> or_test .)
    FOR             reduce using rule 227 (old_test -> or_test .)
    IF              reduce using rule 227 (old_test -> or_test .)
    RSQB            reduce using rule 227 (old_test -> or_test .)
    RBRACE          reduce using rule 227 (old_test -> or_test .)
    RPAREN          reduce using rule 227 (old_test -> or_test .)


state 441

    (219) list_for -> FOR targetlist IN testlist_safe .
    (220) list_for -> FOR targetlist IN testlist_safe . list_iter
    (217) list_iter -> . list_for
    (218) list_iter -> . list_if
    (219) list_for -> . FOR targetlist IN testlist_safe
    (220) list_for -> . FOR targetlist IN testlist_safe list_iter
    (221) list_if -> . IF old_test
    (222) list_if -> . IF old_test list_iter

    RSQB            reduce using rule 219 (list_for -> FOR targetlist IN testlist_safe .)
    FOR             shift and go to state 265
    IF              shift and go to state 472

    list_iter                      shift and go to state 469
    list_if                        shift and go to state 470
    list_for                       shift and go to state 471

state 442

    (266) classdef -> CLASS NAME LPAREN RPAREN COLON suite .

    ENDMARKER       reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    NEWLINE         reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    IF              reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    FOR             reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    WHILE           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    TRY             reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    DEF             reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    CLASS           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    WITH            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    PRINT           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    PASS            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    IMPORT          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    FROM            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    GLOBAL          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    ASSERT          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    DEL             reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    EXEC            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    AT              reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    BREAK           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    CONTINUE        reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    RETURN          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    RAISE           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    YIELD           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    NOT             reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    PLUS            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    MINUS           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    TILDE           reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    NAME            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    LPAREN          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    LSQB            reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    LBRACE          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    BACKQUOTE       reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    NUMBER          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    FNUMBER         reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    HEXADECIMALNUMBER reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    OCTALNUMBER     reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    BINARYNUMBER    reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    STRING          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    TRIPLESTRING    reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)
    DEDENT          reduce using rule 266 (classdef -> CLASS NAME LPAREN RPAREN COLON suite .)


state 443

    (267) classdef -> CLASS NAME LPAREN testlist RPAREN COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 473
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 444

    (7) decorator -> AT module LPAREN arglist RPAREN NEWLINE .

    AT              reduce using rule 7 (decorator -> AT module LPAREN arglist RPAREN NEWLINE .)
    CLASS           reduce using rule 7 (decorator -> AT module LPAREN arglist RPAREN NEWLINE .)
    DEF             reduce using rule 7 (decorator -> AT module LPAREN arglist RPAREN NEWLINE .)


state 445

    (118) elif_list -> ELIF test . COLON suite elif_list

    COLON           shift and go to state 474


state 446

    (116) if_stmt -> IF test COLON suite elif_list ELSE . COLON suite

    COLON           shift and go to state 475


state 447

    (79) import_stmt -> FROM relative_module IMPORT NAME AS NAME . identlist
    (86) identlist -> .
    (87) identlist -> . COMMA NAME identlist
    (88) identlist -> . COMMA NAME AS NAME identlist

    NEWLINE         reduce using rule 86 (identlist -> .)
    SEMI            reduce using rule 86 (identlist -> .)
    COMMA           shift and go to state 412

    identlist                      shift and go to state 476

state 448

    (87) identlist -> COMMA NAME . identlist
    (88) identlist -> COMMA NAME . AS NAME identlist
    (86) identlist -> .
    (87) identlist -> . COMMA NAME identlist
    (88) identlist -> . COMMA NAME AS NAME identlist

    AS              shift and go to state 477
    NEWLINE         reduce using rule 86 (identlist -> .)
    SEMI            reduce using rule 86 (identlist -> .)
    RPAREN          reduce using rule 86 (identlist -> .)
    COMMA           shift and go to state 412

    identlist                      shift and go to state 478

state 449

    (81) import_stmt -> FROM relative_module IMPORT LPAREN NAME AS . NAME identlist RPAREN

    NAME            shift and go to state 479


state 450

    (90) commaidentlist -> COMMA .
    (91) commaidentlist -> COMMA . NAME commaidentlist
    (92) commaidentlist -> COMMA . NAME AS NAME commaidentlist

    RPAREN          reduce using rule 90 (commaidentlist -> COMMA .)
    NAME            shift and go to state 480


state 451

    (80) import_stmt -> FROM relative_module IMPORT LPAREN NAME commaidentlist . RPAREN

    RPAREN          shift and go to state 481


state 452

    (85) modulelist -> COMMA module AS NAME modulelist .

    NEWLINE         reduce using rule 85 (modulelist -> COMMA module AS NAME modulelist .)
    SEMI            reduce using rule 85 (modulelist -> COMMA module AS NAME modulelist .)


state 453

    (15) varargslist -> fpdef EQUAL test fpdeflist . COMMA
    (16) varargslist -> fpdef EQUAL test fpdeflist .
    (20) fpdeflist -> fpdeflist . COMMA fpdef
    (21) fpdeflist -> fpdeflist . COMMA fpdef EQUAL test

    COMMA           shift and go to state 482
    RPAREN          reduce using rule 16 (varargslist -> fpdef EQUAL test fpdeflist .)


state 454

    (20) fpdeflist -> fpdeflist COMMA fpdef .
    (21) fpdeflist -> fpdeflist COMMA fpdef . EQUAL test

    COMMA           reduce using rule 20 (fpdeflist -> fpdeflist COMMA fpdef .)
    RPAREN          reduce using rule 20 (fpdeflist -> fpdeflist COMMA fpdef .)
    EQUAL           shift and go to state 483


state 455

    (24) fplist -> fpdef fplist1 COMMA .
    (27) fplist1 -> fplist1 COMMA . fpdef
    (22) fpdef -> . NAME
    (23) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 24 (fplist -> fpdef fplist1 COMMA .)
    NAME            shift and go to state 305
    LPAREN          shift and go to state 308

    fpdef                          shift and go to state 484

state 456

    (122) for_stmt -> FOR targetlist IN testlist COLON suite ELSE . COLON suite

    COLON           shift and go to state 485


state 457

    (131) except_stmt -> EXCEPT NAME namelist COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    break_stmt                     shift and go to state 76
    suite                          shift and go to state 486
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 458

    (132) except_stmt -> EXCEPT NAME AS NAME . COLON suite

    COLON           shift and go to state 487


state 459

    (124) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON . suite
    (125) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON . suite FINALLY COLON suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 488
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    and_expr                       shift and go to state 72
    yield_stmt                     shift and go to state 73

state 460

    (126) try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 489
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    and_expr                       shift and go to state 72
    yield_stmt                     shift and go to state 73

state 461

    (283) comp_iter -> comp_if .

    RBRACE          reduce using rule 283 (comp_iter -> comp_if .)
    COMMA           reduce using rule 283 (comp_iter -> comp_if .)
    RPAREN          reduce using rule 283 (comp_iter -> comp_if .)


state 462

    (282) comp_iter -> comp_for .

    RBRACE          reduce using rule 282 (comp_iter -> comp_for .)
    COMMA           reduce using rule 282 (comp_iter -> comp_for .)
    RPAREN          reduce using rule 282 (comp_iter -> comp_for .)


state 463

    (285) comp_for -> FOR targetlist IN or_test comp_iter .

    RBRACE          reduce using rule 285 (comp_for -> FOR targetlist IN or_test comp_iter .)
    COMMA           reduce using rule 285 (comp_for -> FOR targetlist IN or_test comp_iter .)
    RPAREN          reduce using rule 285 (comp_for -> FOR targetlist IN or_test comp_iter .)


state 464

    (286) comp_if -> IF . old_test
    (287) comp_if -> IF . old_test comp_iter
    (227) old_test -> . or_test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    old_test                       shift and go to state 490
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 440

state 465

    (262) testcolonlist -> test COLON . test
    (263) testcolonlist -> test COLON . test COMMA
    (264) testcolonlist -> test COLON . test COMMA testcolonlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 491
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 466

    (269) arglist -> arglist3 STAR test arglist2 COMMA . STAR STAR test
    (275) arglist2 -> arglist2 COMMA . argument
    (279) argument -> . test
    (280) argument -> . test comp_for
    (281) argument -> . test EQUAL test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    STAR            shift and go to state 492
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    argument                       shift and go to state 493
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 242
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 467

    (120) while_stmt -> WHILE test COLON suite ELSE COLON suite .

    DEDENT          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IF              reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FOR             reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    TRY             reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEF             reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    CLASS           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    WITH            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PASS            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FROM            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    GLOBAL          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    ASSERT          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    DEL             reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    EXEC            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    AT              reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    BREAK           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    CONTINUE        reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    RAISE           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    YIELD           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NOT             reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    TILDE           reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NAME            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LSQB            reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    LBRACE          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    BACKQUOTE       reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    FNUMBER         reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    HEXADECIMALNUMBER reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    OCTALNUMBER     reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    BINARYNUMBER    reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    STRING          reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    TRIPLESTRING    reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    ENDMARKER       reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 120 (while_stmt -> WHILE test COLON suite ELSE COLON suite .)


state 468

    (224) testlist_safe -> old_test COMMA . commaoldtest
    (225) commaoldtest -> . old_test
    (226) commaoldtest -> . old_test COMMA commaoldtest
    (227) old_test -> . or_test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    old_test                       shift and go to state 494
    commaoldtest                   shift and go to state 495
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 440

state 469

    (220) list_for -> FOR targetlist IN testlist_safe list_iter .

    RSQB            reduce using rule 220 (list_for -> FOR targetlist IN testlist_safe list_iter .)


state 470

    (218) list_iter -> list_if .

    RSQB            reduce using rule 218 (list_iter -> list_if .)


state 471

    (217) list_iter -> list_for .

    RSQB            reduce using rule 217 (list_iter -> list_for .)


state 472

    (221) list_if -> IF . old_test
    (222) list_if -> IF . old_test list_iter
    (227) old_test -> . or_test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    old_test                       shift and go to state 496
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 440

state 473

    (267) classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .

    ENDMARKER       reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    NEWLINE         reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    IF              reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    FOR             reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    WHILE           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    TRY             reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    DEF             reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    CLASS           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    WITH            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    PRINT           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    PASS            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    IMPORT          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    FROM            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    GLOBAL          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    ASSERT          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    DEL             reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    EXEC            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    AT              reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    BREAK           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    CONTINUE        reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    RETURN          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    RAISE           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    YIELD           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    NOT             reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    PLUS            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    MINUS           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    TILDE           reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    NAME            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    LPAREN          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    LSQB            reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    LBRACE          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    BACKQUOTE       reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    NUMBER          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    FNUMBER         reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    HEXADECIMALNUMBER reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    OCTALNUMBER     reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    BINARYNUMBER    reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    STRING          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    TRIPLESTRING    reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)
    DEDENT          reduce using rule 267 (classdef -> CLASS NAME LPAREN testlist RPAREN COLON suite .)


state 474

    (118) elif_list -> ELIF test COLON . suite elif_list
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    simple_stmt                    shift and go to state 229
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 497
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 475

    (116) if_stmt -> IF test COLON suite elif_list ELSE COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    simple_stmt                    shift and go to state 229
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    print_stmt                     shift and go to state 62
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 498
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 476

    (79) import_stmt -> FROM relative_module IMPORT NAME AS NAME identlist .

    NEWLINE         reduce using rule 79 (import_stmt -> FROM relative_module IMPORT NAME AS NAME identlist .)
    SEMI            reduce using rule 79 (import_stmt -> FROM relative_module IMPORT NAME AS NAME identlist .)


state 477

    (88) identlist -> COMMA NAME AS . NAME identlist

    NAME            shift and go to state 499


state 478

    (87) identlist -> COMMA NAME identlist .

    NEWLINE         reduce using rule 87 (identlist -> COMMA NAME identlist .)
    SEMI            reduce using rule 87 (identlist -> COMMA NAME identlist .)
    RPAREN          reduce using rule 87 (identlist -> COMMA NAME identlist .)


state 479

    (81) import_stmt -> FROM relative_module IMPORT LPAREN NAME AS NAME . identlist RPAREN
    (86) identlist -> .
    (87) identlist -> . COMMA NAME identlist
    (88) identlist -> . COMMA NAME AS NAME identlist

    RPAREN          reduce using rule 86 (identlist -> .)
    COMMA           shift and go to state 412

    identlist                      shift and go to state 500

state 480

    (91) commaidentlist -> COMMA NAME . commaidentlist
    (92) commaidentlist -> COMMA NAME . AS NAME commaidentlist
    (89) commaidentlist -> .
    (90) commaidentlist -> . COMMA
    (91) commaidentlist -> . COMMA NAME commaidentlist
    (92) commaidentlist -> . COMMA NAME AS NAME commaidentlist

    AS              shift and go to state 501
    RPAREN          reduce using rule 89 (commaidentlist -> .)
    COMMA           shift and go to state 450

    commaidentlist                 shift and go to state 502

state 481

    (80) import_stmt -> FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN .

    NEWLINE         reduce using rule 80 (import_stmt -> FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN .)
    SEMI            reduce using rule 80 (import_stmt -> FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN .)


state 482

    (15) varargslist -> fpdef EQUAL test fpdeflist COMMA .
    (20) fpdeflist -> fpdeflist COMMA . fpdef
    (21) fpdeflist -> fpdeflist COMMA . fpdef EQUAL test
    (22) fpdef -> . NAME
    (23) fpdef -> . LPAREN fplist RPAREN

    RPAREN          reduce using rule 15 (varargslist -> fpdef EQUAL test fpdeflist COMMA .)
    NAME            shift and go to state 305
    LPAREN          shift and go to state 308

    fpdef                          shift and go to state 454

state 483

    (21) fpdeflist -> fpdeflist COMMA fpdef EQUAL . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 503
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 484

    (27) fplist1 -> fplist1 COMMA fpdef .

    COMMA           reduce using rule 27 (fplist1 -> fplist1 COMMA fpdef .)
    RPAREN          reduce using rule 27 (fplist1 -> fplist1 COMMA fpdef .)


state 485

    (122) for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 504
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 486

    (131) except_stmt -> EXCEPT NAME namelist COLON suite .

    EXCEPT          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    ELSE            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    FINALLY         reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    ENDMARKER       reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    NEWLINE         reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    IF              reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    FOR             reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    WHILE           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    TRY             reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    DEF             reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    CLASS           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    WITH            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    PRINT           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    PASS            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    IMPORT          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    FROM            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    GLOBAL          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    ASSERT          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    DEL             reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    EXEC            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    AT              reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    BREAK           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    CONTINUE        reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    RETURN          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    RAISE           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    YIELD           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    NOT             reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    PLUS            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    MINUS           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    TILDE           reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    NAME            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    LPAREN          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    LSQB            reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    LBRACE          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    BACKQUOTE       reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    NUMBER          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    FNUMBER         reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    HEXADECIMALNUMBER reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    OCTALNUMBER     reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    BINARYNUMBER    reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    STRING          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    TRIPLESTRING    reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)
    DEDENT          reduce using rule 131 (except_stmt -> EXCEPT NAME namelist COLON suite .)


state 487

    (132) except_stmt -> EXCEPT NAME AS NAME COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    raise_stmt                     shift and go to state 66
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    and_expr                       shift and go to state 72
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 505
    import_stmt                    shift and go to state 45
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    yield_stmt                     shift and go to state 73

state 488

    (124) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .
    (125) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite . FINALLY COLON suite

    DEDENT          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    IF              reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    FOR             reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    WHILE           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    TRY             reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    DEF             reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    CLASS           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    WITH            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    PRINT           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    PASS            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    IMPORT          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    FROM            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    GLOBAL          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    ASSERT          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    DEL             reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    EXEC            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    AT              reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    BREAK           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    CONTINUE        reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    RETURN          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    RAISE           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    YIELD           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    NOT             reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    PLUS            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    MINUS           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    TILDE           reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    NAME            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    LPAREN          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    LSQB            reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    LBRACE          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    BACKQUOTE       reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    NUMBER          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    FNUMBER         reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    HEXADECIMALNUMBER reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    OCTALNUMBER     reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    BINARYNUMBER    reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    STRING          reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    TRIPLESTRING    reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    ENDMARKER       reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    NEWLINE         reduce using rule 124 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite .)
    FINALLY         shift and go to state 506


state 489

    (126) try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .

    DEDENT          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    IF              reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    FOR             reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    WHILE           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    TRY             reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    DEF             reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    CLASS           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    WITH            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    PRINT           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    PASS            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    IMPORT          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    FROM            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    GLOBAL          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    ASSERT          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    DEL             reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    EXEC            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    AT              reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    BREAK           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    CONTINUE        reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    RETURN          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    RAISE           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    YIELD           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    NOT             reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    PLUS            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    MINUS           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    TILDE           reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    NAME            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    LPAREN          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    LSQB            reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    LBRACE          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    BACKQUOTE       reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    NUMBER          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    FNUMBER         reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    HEXADECIMALNUMBER reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    OCTALNUMBER     reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    BINARYNUMBER    reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    STRING          reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    TRIPLESTRING    reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    ENDMARKER       reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)
    NEWLINE         reduce using rule 126 (try_stmt -> TRY COLON suite except_stmt except_list FINALLY COLON suite .)


state 490

    (286) comp_if -> IF old_test .
    (287) comp_if -> IF old_test . comp_iter
    (282) comp_iter -> . comp_for
    (283) comp_iter -> . comp_if
    (284) comp_for -> . FOR targetlist IN or_test
    (285) comp_for -> . FOR targetlist IN or_test comp_iter
    (286) comp_if -> . IF old_test
    (287) comp_if -> . IF old_test comp_iter

    RBRACE          reduce using rule 286 (comp_if -> IF old_test .)
    COMMA           reduce using rule 286 (comp_if -> IF old_test .)
    RPAREN          reduce using rule 286 (comp_if -> IF old_test .)
    FOR             shift and go to state 233
    IF              shift and go to state 464

    comp_if                        shift and go to state 461
    comp_for                       shift and go to state 462
    comp_iter                      shift and go to state 507

state 491

    (262) testcolonlist -> test COLON test .
    (263) testcolonlist -> test COLON test . COMMA
    (264) testcolonlist -> test COLON test . COMMA testcolonlist

    RBRACE          reduce using rule 262 (testcolonlist -> test COLON test .)
    COMMA           shift and go to state 387


state 492

    (269) arglist -> arglist3 STAR test arglist2 COMMA STAR . STAR test

    STAR            shift and go to state 508


state 493

    (275) arglist2 -> arglist2 COMMA argument .

    COMMA           reduce using rule 275 (arglist2 -> arglist2 COMMA argument .)
    RPAREN          reduce using rule 275 (arglist2 -> arglist2 COMMA argument .)


state 494

    (225) commaoldtest -> old_test .
    (226) commaoldtest -> old_test . COMMA commaoldtest

    FOR             reduce using rule 225 (commaoldtest -> old_test .)
    IF              reduce using rule 225 (commaoldtest -> old_test .)
    RSQB            reduce using rule 225 (commaoldtest -> old_test .)
    COMMA           shift and go to state 509


state 495

    (224) testlist_safe -> old_test COMMA commaoldtest .

    FOR             reduce using rule 224 (testlist_safe -> old_test COMMA commaoldtest .)
    IF              reduce using rule 224 (testlist_safe -> old_test COMMA commaoldtest .)
    RSQB            reduce using rule 224 (testlist_safe -> old_test COMMA commaoldtest .)


state 496

    (221) list_if -> IF old_test .
    (222) list_if -> IF old_test . list_iter
    (217) list_iter -> . list_for
    (218) list_iter -> . list_if
    (219) list_for -> . FOR targetlist IN testlist_safe
    (220) list_for -> . FOR targetlist IN testlist_safe list_iter
    (221) list_if -> . IF old_test
    (222) list_if -> . IF old_test list_iter

    RSQB            reduce using rule 221 (list_if -> IF old_test .)
    FOR             shift and go to state 265
    IF              shift and go to state 472

    list_iter                      shift and go to state 510
    list_if                        shift and go to state 470
    list_for                       shift and go to state 471

state 497

    (118) elif_list -> ELIF test COLON suite . elif_list
    (117) elif_list -> .
    (118) elif_list -> . ELIF test COLON suite elif_list

    ELSE            reduce using rule 117 (elif_list -> .)
    ENDMARKER       reduce using rule 117 (elif_list -> .)
    NEWLINE         reduce using rule 117 (elif_list -> .)
    IF              reduce using rule 117 (elif_list -> .)
    FOR             reduce using rule 117 (elif_list -> .)
    WHILE           reduce using rule 117 (elif_list -> .)
    TRY             reduce using rule 117 (elif_list -> .)
    DEF             reduce using rule 117 (elif_list -> .)
    CLASS           reduce using rule 117 (elif_list -> .)
    WITH            reduce using rule 117 (elif_list -> .)
    PRINT           reduce using rule 117 (elif_list -> .)
    PASS            reduce using rule 117 (elif_list -> .)
    IMPORT          reduce using rule 117 (elif_list -> .)
    FROM            reduce using rule 117 (elif_list -> .)
    GLOBAL          reduce using rule 117 (elif_list -> .)
    ASSERT          reduce using rule 117 (elif_list -> .)
    DEL             reduce using rule 117 (elif_list -> .)
    EXEC            reduce using rule 117 (elif_list -> .)
    AT              reduce using rule 117 (elif_list -> .)
    BREAK           reduce using rule 117 (elif_list -> .)
    CONTINUE        reduce using rule 117 (elif_list -> .)
    RETURN          reduce using rule 117 (elif_list -> .)
    RAISE           reduce using rule 117 (elif_list -> .)
    YIELD           reduce using rule 117 (elif_list -> .)
    NOT             reduce using rule 117 (elif_list -> .)
    PLUS            reduce using rule 117 (elif_list -> .)
    MINUS           reduce using rule 117 (elif_list -> .)
    TILDE           reduce using rule 117 (elif_list -> .)
    NAME            reduce using rule 117 (elif_list -> .)
    LPAREN          reduce using rule 117 (elif_list -> .)
    LSQB            reduce using rule 117 (elif_list -> .)
    LBRACE          reduce using rule 117 (elif_list -> .)
    BACKQUOTE       reduce using rule 117 (elif_list -> .)
    NUMBER          reduce using rule 117 (elif_list -> .)
    FNUMBER         reduce using rule 117 (elif_list -> .)
    HEXADECIMALNUMBER reduce using rule 117 (elif_list -> .)
    OCTALNUMBER     reduce using rule 117 (elif_list -> .)
    BINARYNUMBER    reduce using rule 117 (elif_list -> .)
    STRING          reduce using rule 117 (elif_list -> .)
    TRIPLESTRING    reduce using rule 117 (elif_list -> .)
    DEDENT          reduce using rule 117 (elif_list -> .)
    ELIF            shift and go to state 408

    elif_list                      shift and go to state 511

state 498

    (116) if_stmt -> IF test COLON suite elif_list ELSE COLON suite .

    DEDENT          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    IF              reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    FOR             reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    WHILE           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    TRY             reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    DEF             reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    CLASS           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    WITH            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    PRINT           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    PASS            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    IMPORT          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    FROM            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    GLOBAL          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    ASSERT          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    DEL             reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    EXEC            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    AT              reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    BREAK           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    CONTINUE        reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    RETURN          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    RAISE           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    YIELD           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    NOT             reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    PLUS            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    MINUS           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    TILDE           reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    NAME            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    LPAREN          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    LSQB            reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    LBRACE          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    BACKQUOTE       reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    NUMBER          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    FNUMBER         reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    HEXADECIMALNUMBER reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    OCTALNUMBER     reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    BINARYNUMBER    reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    STRING          reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    TRIPLESTRING    reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    ENDMARKER       reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)
    NEWLINE         reduce using rule 116 (if_stmt -> IF test COLON suite elif_list ELSE COLON suite .)


state 499

    (88) identlist -> COMMA NAME AS NAME . identlist
    (86) identlist -> .
    (87) identlist -> . COMMA NAME identlist
    (88) identlist -> . COMMA NAME AS NAME identlist

    NEWLINE         reduce using rule 86 (identlist -> .)
    SEMI            reduce using rule 86 (identlist -> .)
    RPAREN          reduce using rule 86 (identlist -> .)
    COMMA           shift and go to state 412

    identlist                      shift and go to state 512

state 500

    (81) import_stmt -> FROM relative_module IMPORT LPAREN NAME AS NAME identlist . RPAREN

    RPAREN          shift and go to state 513


state 501

    (92) commaidentlist -> COMMA NAME AS . NAME commaidentlist

    NAME            shift and go to state 514


state 502

    (91) commaidentlist -> COMMA NAME commaidentlist .

    RPAREN          reduce using rule 91 (commaidentlist -> COMMA NAME commaidentlist .)


state 503

    (21) fpdeflist -> fpdeflist COMMA fpdef EQUAL test .

    COMMA           reduce using rule 21 (fpdeflist -> fpdeflist COMMA fpdef EQUAL test .)
    RPAREN          reduce using rule 21 (fpdeflist -> fpdeflist COMMA fpdef EQUAL test .)


state 504

    (122) for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .

    DEDENT          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    IF              reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    FOR             reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    WHILE           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    TRY             reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    DEF             reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    CLASS           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    WITH            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    PRINT           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    PASS            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    IMPORT          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    FROM            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    GLOBAL          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    ASSERT          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    DEL             reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    EXEC            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    AT              reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    BREAK           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    CONTINUE        reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    RETURN          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    RAISE           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    YIELD           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    NOT             reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    PLUS            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    MINUS           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    TILDE           reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    NAME            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    LPAREN          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    LSQB            reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    LBRACE          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    BACKQUOTE       reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    NUMBER          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    FNUMBER         reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    HEXADECIMALNUMBER reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    OCTALNUMBER     reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    BINARYNUMBER    reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    STRING          reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    TRIPLESTRING    reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    ENDMARKER       reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)
    NEWLINE         reduce using rule 122 (for_stmt -> FOR targetlist IN testlist COLON suite ELSE COLON suite .)


state 505

    (132) except_stmt -> EXCEPT NAME AS NAME COLON suite .

    EXCEPT          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    ELSE            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    FINALLY         reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    ENDMARKER       reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    NEWLINE         reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    IF              reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    FOR             reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    WHILE           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    TRY             reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    DEF             reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    CLASS           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    WITH            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    PRINT           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    PASS            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    IMPORT          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    FROM            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    GLOBAL          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    ASSERT          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    DEL             reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    EXEC            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    AT              reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    BREAK           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    CONTINUE        reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    RETURN          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    RAISE           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    YIELD           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    NOT             reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    PLUS            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    MINUS           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    TILDE           reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    NAME            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    LPAREN          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    LSQB            reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    LBRACE          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    BACKQUOTE       reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    NUMBER          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    FNUMBER         reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    HEXADECIMALNUMBER reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    OCTALNUMBER     reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    BINARYNUMBER    reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    STRING          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    TRIPLESTRING    reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)
    DEDENT          reduce using rule 132 (except_stmt -> EXCEPT NAME AS NAME COLON suite .)


state 506

    (125) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY . COLON suite

    COLON           shift and go to state 515


state 507

    (287) comp_if -> IF old_test comp_iter .

    RBRACE          reduce using rule 287 (comp_if -> IF old_test comp_iter .)
    COMMA           reduce using rule 287 (comp_if -> IF old_test comp_iter .)
    RPAREN          reduce using rule 287 (comp_if -> IF old_test comp_iter .)


state 508

    (269) arglist -> arglist3 STAR test arglist2 COMMA STAR STAR . test
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    test                           shift and go to state 516
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 24

state 509

    (226) commaoldtest -> old_test COMMA . commaoldtest
    (225) commaoldtest -> . old_test
    (226) commaoldtest -> . old_test COMMA commaoldtest
    (227) old_test -> . or_test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    not_test                       shift and go to state 75
    old_test                       shift and go to state 494
    commaoldtest                   shift and go to state 517
    stringlist                     shift and go to state 35
    shift_expr                     shift and go to state 34
    factor                         shift and go to state 12
    and_expr                       shift and go to state 72
    power                          shift and go to state 33
    and_test                       shift and go to state 44
    atom                           shift and go to state 50
    xor_expr                       shift and go to state 59
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    arith_expr                     shift and go to state 49
    expr                           shift and go to state 70
    or_test                        shift and go to state 440

state 510

    (222) list_if -> IF old_test list_iter .

    RSQB            reduce using rule 222 (list_if -> IF old_test list_iter .)


state 511

    (118) elif_list -> ELIF test COLON suite elif_list .

    ELSE            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    ENDMARKER       reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    NEWLINE         reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    IF              reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    FOR             reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    WHILE           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    TRY             reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    DEF             reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    CLASS           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    WITH            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    PRINT           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    PASS            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    IMPORT          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    FROM            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    GLOBAL          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    ASSERT          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    DEL             reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    EXEC            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    AT              reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    BREAK           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    CONTINUE        reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    RETURN          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    RAISE           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    YIELD           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    NOT             reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    PLUS            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    MINUS           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    TILDE           reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    NAME            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    LPAREN          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    LSQB            reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    LBRACE          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    BACKQUOTE       reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    NUMBER          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    FNUMBER         reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    HEXADECIMALNUMBER reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    OCTALNUMBER     reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    BINARYNUMBER    reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    STRING          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    TRIPLESTRING    reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)
    DEDENT          reduce using rule 118 (elif_list -> ELIF test COLON suite elif_list .)


state 512

    (88) identlist -> COMMA NAME AS NAME identlist .

    NEWLINE         reduce using rule 88 (identlist -> COMMA NAME AS NAME identlist .)
    SEMI            reduce using rule 88 (identlist -> COMMA NAME AS NAME identlist .)
    RPAREN          reduce using rule 88 (identlist -> COMMA NAME AS NAME identlist .)


state 513

    (81) import_stmt -> FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN .

    NEWLINE         reduce using rule 81 (import_stmt -> FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN .)
    SEMI            reduce using rule 81 (import_stmt -> FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN .)


state 514

    (92) commaidentlist -> COMMA NAME AS NAME . commaidentlist
    (89) commaidentlist -> .
    (90) commaidentlist -> . COMMA
    (91) commaidentlist -> . COMMA NAME commaidentlist
    (92) commaidentlist -> . COMMA NAME AS NAME commaidentlist

    RPAREN          reduce using rule 89 (commaidentlist -> .)
    COMMA           shift and go to state 450

    commaidentlist                 shift and go to state 518

state 515

    (125) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON . suite
    (138) suite -> . simple_stmt
    (139) suite -> . NEWLINE INDENT stmts DEDENT
    (30) simple_stmt -> . small_stmts NEWLINE
    (31) simple_stmt -> . small_stmts SEMI NEWLINE
    (32) small_stmts -> . small_stmts SEMI small_stmt
    (33) small_stmts -> . small_stmt
    (34) small_stmt -> . flow_stmt
    (35) small_stmt -> . aug_stmt
    (36) small_stmt -> . print_stmt
    (37) small_stmt -> . pass_stmt
    (38) small_stmt -> . import_stmt
    (39) small_stmt -> . global_stmt
    (40) small_stmt -> . assert_stmt
    (41) small_stmt -> . del_stmt
    (42) small_stmt -> . exec_stmt
    (60) flow_stmt -> . break_stmt
    (61) flow_stmt -> . continue_stmt
    (62) flow_stmt -> . return_stmt
    (63) flow_stmt -> . raise_stmt
    (64) flow_stmt -> . yield_stmt
    (43) aug_stmt -> . testlist augassign testlist
    (44) aug_stmt -> . assn_stmt
    (54) print_stmt -> . PRINT
    (55) print_stmt -> . PRINT testlist
    (59) pass_stmt -> . PASS
    (76) import_stmt -> . IMPORT module modulelist
    (77) import_stmt -> . IMPORT module AS NAME modulelist
    (78) import_stmt -> . FROM relative_module IMPORT NAME identlist
    (79) import_stmt -> . FROM relative_module IMPORT NAME AS NAME identlist
    (80) import_stmt -> . FROM relative_module IMPORT LPAREN NAME commaidentlist RPAREN
    (81) import_stmt -> . FROM relative_module IMPORT LPAREN NAME AS NAME identlist RPAREN
    (82) import_stmt -> . FROM module IMPORT STAR
    (103) global_stmt -> . GLOBAL NAME namelist
    (106) assert_stmt -> . ASSERT testlist
    (56) del_stmt -> . DEL exprlist
    (57) exec_stmt -> . EXEC expr
    (58) exec_stmt -> . EXEC expr IN testlist
    (65) break_stmt -> . BREAK
    (66) continue_stmt -> . CONTINUE
    (67) return_stmt -> . RETURN
    (68) return_stmt -> . RETURN testlist
    (69) raise_stmt -> . RAISE
    (70) raise_stmt -> . RAISE test
    (71) raise_stmt -> . RAISE test COMMA test
    (72) raise_stmt -> . RAISE test COMMA test COMMA test
    (73) yield_stmt -> . yield_expr
    (255) testlist -> . test
    (256) testlist -> . test COMMA
    (257) testlist -> . test COMMA testlist
    (45) assn_stmt -> . testlist
    (46) assn_stmt -> . testlist EQUAL assn_stmt
    (74) yield_expr -> . YIELD
    (75) yield_expr -> . YIELD testlist
    (140) test -> . or_test
    (141) test -> . or_test IF or_test ELSE test
    (142) or_test -> . and_test ortestlist
    (145) and_test -> . not_test andtestlist
    (148) not_test -> . NOT not_test
    (149) not_test -> . comparison
    (150) comparison -> . expr compexprlist
    (163) expr -> . xor_expr xorexprlist
    (166) xor_expr -> . and_expr andexprlist
    (169) and_expr -> . shift_expr shiftexprlist
    (172) shift_expr -> . arith_expr arithexprlist
    (176) arith_expr -> . term termlist
    (180) term -> . factor factorlist
    (186) factor -> . power
    (187) factor -> . PLUS factor
    (188) factor -> . MINUS factor
    (189) factor -> . TILDE factor
    (190) power -> . atom trailerlist
    (191) power -> . atom trailerlist STARSTAR factor
    (192) power -> . NAME trailerlist
    (193) power -> . NAME trailerlist STARSTAR factor
    (196) atom -> . LPAREN RPAREN
    (197) atom -> . LPAREN testlist_comp RPAREN
    (198) atom -> . LPAREN yield_expr RPAREN
    (199) atom -> . LSQB RSQB
    (200) atom -> . LSQB listmaker RSQB
    (201) atom -> . LBRACE RBRACE
    (202) atom -> . LBRACE dictorsetmaker RBRACE
    (203) atom -> . BACKQUOTE testlist1 BACKQUOTE
    (204) atom -> . NUMBER
    (205) atom -> . FNUMBER
    (206) atom -> . HEXADECIMALNUMBER
    (207) atom -> . OCTALNUMBER
    (208) atom -> . BINARYNUMBER
    (209) atom -> . stringlist
    (210) stringlist -> . STRING
    (211) stringlist -> . STRING stringlist
    (212) stringlist -> . TRIPLESTRING
    (213) stringlist -> . TRIPLESTRING stringlist

    NEWLINE         shift and go to state 228
    PRINT           shift and go to state 29
    PASS            shift and go to state 20
    IMPORT          shift and go to state 13
    FROM            shift and go to state 86
    GLOBAL          shift and go to state 55
    ASSERT          shift and go to state 74
    DEL             shift and go to state 28
    EXEC            shift and go to state 14
    BREAK           shift and go to state 71
    CONTINUE        shift and go to state 51
    RETURN          shift and go to state 58
    RAISE           shift and go to state 54
    YIELD           shift and go to state 81
    NOT             shift and go to state 52
    PLUS            shift and go to state 11
    MINUS           shift and go to state 9
    TILDE           shift and go to state 61
    NAME            shift and go to state 68
    LPAREN          shift and go to state 83
    LSQB            shift and go to state 65
    LBRACE          shift and go to state 47
    BACKQUOTE       shift and go to state 6
    NUMBER          shift and go to state 63
    FNUMBER         shift and go to state 67
    HEXADECIMALNUMBER shift and go to state 69
    OCTALNUMBER     shift and go to state 26
    BINARYNUMBER    shift and go to state 5
    STRING          shift and go to state 31
    TRIPLESTRING    shift and go to state 39

    assn_stmt                      shift and go to state 27
    small_stmt                     shift and go to state 4
    arith_expr                     shift and go to state 49
    return_stmt                    shift and go to state 57
    not_test                       shift and go to state 75
    stringlist                     shift and go to state 35
    flow_stmt                      shift and go to state 32
    import_stmt                    shift and go to state 45
    continue_stmt                  shift and go to state 60
    shift_expr                     shift and go to state 34
    print_stmt                     shift and go to state 62
    exec_stmt                      shift and go to state 36
    factor                         shift and go to state 12
    test                           shift and go to state 77
    global_stmt                    shift and go to state 78
    break_stmt                     shift and go to state 76
    yield_expr                     shift and go to state 80
    power                          shift and go to state 33
    simple_stmt                    shift and go to state 229
    testlist                       shift and go to state 16
    and_test                       shift and go to state 44
    assert_stmt                    shift and go to state 18
    aug_stmt                       shift and go to state 43
    suite                          shift and go to state 519
    raise_stmt                     shift and go to state 66
    comparison                     shift and go to state 46
    term                           shift and go to state 22
    pass_stmt                      shift and go to state 48
    xor_expr                       shift and go to state 59
    expr                           shift and go to state 70
    or_test                        shift and go to state 24
    del_stmt                       shift and go to state 87
    atom                           shift and go to state 50
    small_stmts                    shift and go to state 53
    and_expr                       shift and go to state 72
    yield_stmt                     shift and go to state 73

state 516

    (269) arglist -> arglist3 STAR test arglist2 COMMA STAR STAR test .

    RPAREN          reduce using rule 269 (arglist -> arglist3 STAR test arglist2 COMMA STAR STAR test .)


state 517

    (226) commaoldtest -> old_test COMMA commaoldtest .

    FOR             reduce using rule 226 (commaoldtest -> old_test COMMA commaoldtest .)
    IF              reduce using rule 226 (commaoldtest -> old_test COMMA commaoldtest .)
    RSQB            reduce using rule 226 (commaoldtest -> old_test COMMA commaoldtest .)


state 518

    (92) commaidentlist -> COMMA NAME AS NAME commaidentlist .

    RPAREN          reduce using rule 92 (commaidentlist -> COMMA NAME AS NAME commaidentlist .)


state 519

    (125) try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .

    DEDENT          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    IF              reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    FOR             reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    WHILE           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    TRY             reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    DEF             reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    CLASS           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    WITH            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    PRINT           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    PASS            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    IMPORT          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    FROM            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    GLOBAL          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    ASSERT          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    DEL             reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    EXEC            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    AT              reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    BREAK           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    CONTINUE        reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    RETURN          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    RAISE           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    YIELD           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    NOT             reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    PLUS            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    MINUS           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    TILDE           reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    NAME            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    LPAREN          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    LSQB            reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    LBRACE          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    BACKQUOTE       reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    NUMBER          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    FNUMBER         reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    HEXADECIMALNUMBER reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    OCTALNUMBER     reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    BINARYNUMBER    reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    STRING          reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    TRIPLESTRING    reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    ENDMARKER       reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)
    NEWLINE         reduce using rule 125 (try_stmt -> TRY COLON suite except_stmt except_list ELSE COLON suite FINALLY COLON suite .)

