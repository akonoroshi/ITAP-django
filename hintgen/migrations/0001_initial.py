# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2017-01-08 17:52
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('semester', models.CharField(max_length=50)),
                ('year', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('solution', models.TextField()),
                ('arguments', models.TextField()),
                ('given_code', models.TextField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.Course')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.TextField()),
                ('score', models.FloatField(default=-1)),
                ('count', models.IntegerField(default=0)),
                ('feedback', models.TextField()),
                ('tree', models.TextField()),
                ('treeWeight', models.IntegerField(default=-1)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('condition', models.CharField(default='control', max_length=50)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.Course')),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_input', models.TextField()),
                ('test_output', models.TextField()),
                ('problem_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.Problem')),
            ],
        ),
        migrations.CreateModel(
            name='AnonState',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hintgen.State')),
                ('variable_map', models.TextField()),
            ],
            bases=('hintgen.state',),
        ),
        migrations.CreateModel(
            name='CanonicalState',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hintgen.State')),
            ],
            bases=('hintgen.state',),
        ),
        migrations.CreateModel(
            name='CleanedState',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hintgen.State')),
                ('anon_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.AnonState')),
            ],
            bases=('hintgen.state',),
        ),
        migrations.CreateModel(
            name='SourceState',
            fields=[
                ('state_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='hintgen.State')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('hint', models.TextField()),
                ('hint_level', models.IntegerField(default=1)),
                ('cleaned_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.CleanedState')),
                ('student_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.Student')),
            ],
            bases=('hintgen.state',),
        ),
        migrations.AddField(
            model_name='state',
            name='problem_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.Problem'),
        ),
        migrations.AddField(
            model_name='canonicalstate',
            name='goal_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canonical_feeder_state', to='hintgen.State'),
        ),
        migrations.AddField(
            model_name='canonicalstate',
            name='next_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='canonical_prev_state', to='hintgen.State'),
        ),
        migrations.AddField(
            model_name='anonstate',
            name='canonical_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='hintgen.CanonicalState'),
        ),
        migrations.AddField(
            model_name='anonstate',
            name='goal_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anon_feeder_state', to='hintgen.State'),
        ),
        migrations.AddField(
            model_name='anonstate',
            name='next_state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anon_prev_state', to='hintgen.State'),
        ),
    ]
